{"version":3,"file":"045faf68fc74d2218bc36309cbceee88f3c0a34a-c48fb0deef0ff21e60fe.js","mappings":"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","sources":["webpack://andys-man-club/./node_modules/@algolia/events/events.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/index.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/DerivedHelper/index.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/SearchParameters/RefinementList.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/SearchParameters/index.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/SearchResults/generate-hierarchical-tree.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/SearchResults/index.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/algoliasearch.helper.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/functions/compact.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/functions/defaultsPure.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/functions/escapeFacetValue.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/functions/find.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/functions/findIndex.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/functions/formatSort.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/functions/inherits.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/functions/intersection.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/functions/merge.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/functions/objectHasKeys.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/functions/omit.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/functions/orderBy.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/functions/valToNumber.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/requestBuilder.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/utils/isValidUserToken.js","webpack://andys-man-club/./node_modules/algoliasearch-helper/src/version.js","webpack://andys-man-club/./node_modules/react-instantsearch-core/dist/es/connectors/connectHits.js","webpack://andys-man-club/./node_modules/react-instantsearch-core/dist/es/core/context.js","webpack://andys-man-club/./node_modules/react-instantsearch-core/dist/es/core/createConnector.js","webpack://andys-man-club/./node_modules/react-instantsearch-core/dist/es/core/indexUtils.js","webpack://andys-man-club/./node_modules/react-instantsearch-core/dist/es/core/utils.js","webpack://andys-man-club/./node_modules/react-instantsearch-core/dist/es/widgets/Index.js","webpack://andys-man-club/./node_modules/react-instantsearch-core/dist/es/core/highlight.js","webpack://andys-man-club/./node_modules/react-instantsearch-core/dist/es/core/version.js","webpack://andys-man-club/./node_modules/react-instantsearch-core/dist/es/core/createInstantSearchManager.js","webpack://andys-man-club/./node_modules/react-instantsearch-core/dist/es/core/createWidgetsManager.js","webpack://andys-man-club/./node_modules/react-instantsearch-core/dist/es/core/createStore.js","webpack://andys-man-club/./node_modules/react-instantsearch-core/dist/es/core/metadata.js","webpack://andys-man-club/./node_modules/react-instantsearch-core/dist/es/widgets/InstantSearch.js","webpack://andys-man-club/./node_modules/react-instantsearch-dom/dist/es/core/utils.js","webpack://andys-man-club/./node_modules/core-js/internals/to-string.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\n// EventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function (n) {\n  if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\nEventEmitter.prototype.emit = function (type) {\n  var er, handler, len, args, i, listeners;\n  if (!this._events) this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error || isObject(this._events.error) && !this._events.error.length) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n  handler = this._events[type];\n  if (isUndefined(handler)) return false;\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++) listeners[i].apply(this, args);\n  }\n  return true;\n};\nEventEmitter.prototype.addListener = function (type, listener) {\n  var m;\n  if (!isFunction(listener)) throw TypeError('listener must be a function');\n  if (!this._events) this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener) this.emit('newListener', type, isFunction(listener.listener) ? listener.listener : listener);\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' + 'leak detected. %d listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.', this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n  return this;\n};\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\nEventEmitter.prototype.once = function (type, listener) {\n  if (!isFunction(listener)) throw TypeError('listener must be a function');\n  var fired = false;\n  function g() {\n    this.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n  g.listener = listener;\n  this.on(type, g);\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function (type, listener) {\n  var list, position, length, i;\n  if (!isFunction(listener)) throw TypeError('listener must be a function');\n  if (!this._events || !this._events[type]) return this;\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n  if (list === listener || isFunction(list.listener) && list.listener === listener) {\n    delete this._events[type];\n    if (this._events.removeListener) this.emit('removeListener', type, listener);\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener || list[i].listener && list[i].listener === listener) {\n        position = i;\n        break;\n      }\n    }\n    if (position < 0) return this;\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n    if (this._events.removeListener) this.emit('removeListener', type, listener);\n  }\n  return this;\n};\nEventEmitter.prototype.removeAllListeners = function (type) {\n  var key, listeners;\n  if (!this._events) return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0) this._events = {};else if (this._events[type]) delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n  listeners = this._events[type];\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length) this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n  return this;\n};\nEventEmitter.prototype.listeners = function (type) {\n  var ret;\n  if (!this._events || !this._events[type]) ret = [];else if (isFunction(this._events[type])) ret = [this._events[type]];else ret = this._events[type].slice();\n  return ret;\n};\nEventEmitter.prototype.listenerCount = function (type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n    if (isFunction(evlistener)) return 1;else if (evlistener) return evlistener.length;\n  }\n  return 0;\n};\nEventEmitter.listenerCount = function (emitter, type) {\n  return emitter.listenerCount(type);\n};\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nfunction isUndefined(arg) {\n  return arg === void 0;\n}","'use strict';\n\nvar AlgoliaSearchHelper = require('./src/algoliasearch.helper');\nvar SearchParameters = require('./src/SearchParameters');\nvar SearchResults = require('./src/SearchResults');\n\n/**\n * The algoliasearchHelper module is the function that will let its\n * contains everything needed to use the Algoliasearch\n * Helper. It is a also a function that instanciate the helper.\n * To use the helper, you also need the Algolia JS client v3.\n * @example\n * //using the UMD build\n * var client = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76');\n * var helper = algoliasearchHelper(client, 'bestbuy', {\n *   facets: ['shipping'],\n *   disjunctiveFacets: ['category']\n * });\n * helper.on('result', function(event) {\n *   console.log(event.results);\n * });\n * helper\n *   .toggleFacetRefinement('category', 'Movies & TV Shows')\n *   .toggleFacetRefinement('shipping', 'Free shipping')\n *   .search();\n * @example\n * // The helper is an event emitter using the node API\n * helper.on('result', updateTheResults);\n * helper.once('result', updateTheResults);\n * helper.removeListener('result', updateTheResults);\n * helper.removeAllListeners('result');\n * @module algoliasearchHelper\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the name of the index to query\n * @param  {SearchParameters|object} opts an object defining the initial config of the search. It doesn't have to be a {SearchParameters}, just an object containing the properties you need from it.\n * @return {AlgoliaSearchHelper} The helper instance\n */\nfunction algoliasearchHelper(client, index, opts) {\n  return new AlgoliaSearchHelper(client, index, opts);\n}\n\n/**\n * The version currently used\n * @member module:algoliasearchHelper.version\n * @type {number}\n */\nalgoliasearchHelper.version = require('./src/version');\n\n/**\n * Constructor for the Helper.\n * @member module:algoliasearchHelper.AlgoliaSearchHelper\n * @type {AlgoliaSearchHelper}\n */\nalgoliasearchHelper.AlgoliaSearchHelper = AlgoliaSearchHelper;\n\n/**\n * Constructor for the object containing all the parameters of the search.\n * @member module:algoliasearchHelper.SearchParameters\n * @type {SearchParameters}\n */\nalgoliasearchHelper.SearchParameters = SearchParameters;\n\n/**\n * Constructor for the object containing the results of the search.\n * @member module:algoliasearchHelper.SearchResults\n * @type {SearchResults}\n */\nalgoliasearchHelper.SearchResults = SearchResults;\nmodule.exports = algoliasearchHelper;","'use strict';\n\nvar EventEmitter = require('@algolia/events');\nvar inherits = require('../functions/inherits');\n\n/**\n * A DerivedHelper is a way to create sub requests to\n * Algolia from a main helper.\n * @class\n * @classdesc The DerivedHelper provides an event based interface for search callbacks:\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n * @param {AlgoliaSearchHelper} mainHelper the main helper\n * @param {function} fn the function to create the derived state\n */\nfunction DerivedHelper(mainHelper, fn) {\n  this.main = mainHelper;\n  this.fn = fn;\n  this.lastResults = null;\n}\ninherits(DerivedHelper, EventEmitter);\n\n/**\n * Detach this helper from the main helper\n * @return {undefined}\n * @throws Error if the derived helper is already detached\n */\nDerivedHelper.prototype.detach = function () {\n  this.removeAllListeners();\n  this.main.detachDerivedHelper(this);\n};\nDerivedHelper.prototype.getModifiedState = function (parameters) {\n  return this.fn(parameters);\n};\nmodule.exports = DerivedHelper;","'use strict';\n\n/**\n * Functions to manipulate refinement lists\n *\n * The RefinementList is not formally defined through a prototype but is based\n * on a specific structure.\n *\n * @module SearchParameters.refinementList\n *\n * @typedef {string[]} SearchParameters.refinementList.Refinements\n * @typedef {Object.<string, SearchParameters.refinementList.Refinements>} SearchParameters.refinementList.RefinementList\n */\nvar defaultsPure = require('../functions/defaultsPure');\nvar omit = require('../functions/omit');\nvar objectHasKeys = require('../functions/objectHasKeys');\nvar lib = {\n  /**\n   * Adds a refinement to a RefinementList\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement, if the value is not a string it will be converted\n   * @return {RefinementList} a new and updated refinement list\n   */\n  addRefinement: function addRefinement(refinementList, attribute, value) {\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return refinementList;\n    }\n    var valueAsString = '' + value;\n    var facetRefinement = !refinementList[attribute] ? [valueAsString] : refinementList[attribute].concat(valueAsString);\n    var mod = {};\n    mod[attribute] = facetRefinement;\n    return defaultsPure({}, mod, refinementList);\n  },\n  /**\n   * Removes refinement(s) for an attribute:\n   *  - if the value is specified removes the refinement for the value on the attribute\n   *  - if no value is specified removes all the refinements for this attribute\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} [value] the value of the refinement\n   * @return {RefinementList} a new and updated refinement lst\n   */\n  removeRefinement: function removeRefinement(refinementList, attribute, value) {\n    if (value === undefined) {\n      // we use the \"filter\" form of clearRefinement, since it leaves empty values as-is\n      // the form with a string will remove the attribute completely\n      return lib.clearRefinement(refinementList, function (v, f) {\n        return attribute === f;\n      });\n    }\n    var valueAsString = '' + value;\n    return lib.clearRefinement(refinementList, function (v, f) {\n      return attribute === f && valueAsString === v;\n    });\n  },\n  /**\n   * Toggles the refinement value for an attribute.\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement\n   * @return {RefinementList} a new and updated list\n   */\n  toggleRefinement: function toggleRefinement(refinementList, attribute, value) {\n    if (value === undefined) throw new Error('toggleRefinement should be used with a value');\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return lib.removeRefinement(refinementList, attribute, value);\n    }\n    return lib.addRefinement(refinementList, attribute, value);\n  },\n  /**\n   * Clear all or parts of a RefinementList. Depending on the arguments, three\n   * kinds of behavior can happen:\n   *  - if no attribute is provided: clears the whole list\n   *  - if an attribute is provided as a string: clears the list for the specific attribute\n   *  - if an attribute is provided as a function: discards the elements for which the function returns true\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} [attribute] the attribute or function to discard\n   * @param {string} [refinementType] optional parameter to give more context to the attribute function\n   * @return {RefinementList} a new and updated refinement list\n   */\n  clearRefinement: function clearRefinement(refinementList, attribute, refinementType) {\n    if (attribute === undefined) {\n      // return the same object if the list is already empty\n      // this is mainly for tests, as it doesn't have much impact on performance\n      if (!objectHasKeys(refinementList)) {\n        return refinementList;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(refinementList, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var newRefinementList = Object.keys(refinementList).reduce(function (memo, key) {\n        var values = refinementList[key] || [];\n        var facetList = values.filter(function (value) {\n          return !attribute(value, key, refinementType);\n        });\n        if (facetList.length !== values.length) {\n          hasChanged = true;\n        }\n        // eslint-disable-next-line no-param-reassign\n        memo[key] = facetList;\n        return memo;\n      }, {});\n      if (hasChanged) return newRefinementList;\n      return refinementList;\n    }\n\n    // We return nothing if the attribute is not undefined, a string or a function,\n    // as it is not a valid value for a refinement\n    return undefined;\n  },\n  /**\n   * Test if the refinement value is used for the attribute. If no refinement value\n   * is provided, test if the refinementList contains any refinement for the\n   * given attribute.\n   * @param {RefinementList} refinementList the list of refinement\n   * @param {string} attribute name of the attribute\n   * @param {string} [refinementValue] value of the filter/refinement\n   * @return {boolean} true if the attribute is refined, false otherwise\n   */\n  isRefined: function isRefined(refinementList, attribute, refinementValue) {\n    var containsRefinements = Boolean(refinementList[attribute]) && refinementList[attribute].length > 0;\n    if (refinementValue === undefined || !containsRefinements) {\n      return containsRefinements;\n    }\n    var refinementValueAsString = '' + refinementValue;\n    return refinementList[attribute].indexOf(refinementValueAsString) !== -1;\n  }\n};\nmodule.exports = lib;","'use strict';\n\nvar merge = require('../functions/merge');\nvar defaultsPure = require('../functions/defaultsPure');\nvar intersection = require('../functions/intersection');\nvar find = require('../functions/find');\nvar valToNumber = require('../functions/valToNumber');\nvar omit = require('../functions/omit');\nvar objectHasKeys = require('../functions/objectHasKeys');\nvar isValidUserToken = require('../utils/isValidUserToken');\nvar RefinementList = require('./RefinementList');\n\n/**\n * isEqual, but only for numeric refinement values, possible values:\n * - 5\n * - [5]\n * - [[5]]\n * - [[5,5],[4]]\n * @param {any} a numeric refinement value\n * @param {any} b numeric refinement value\n * @return {boolean} true if the values are equal\n */\nfunction isEqualNumericRefinement(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.length === b.length && a.every(function (el, i) {\n      return isEqualNumericRefinement(b[i], el);\n    });\n  }\n  return a === b;\n}\n\n/**\n * like _.find but using deep equality to be able to use it\n * to find arrays.\n * @private\n * @param {any[]} array array to search into (elements are base or array of base)\n * @param {any} searchedValue the value we're looking for (base or array of base)\n * @return {any} the searched value or undefined\n */\nfunction findArray(array, searchedValue) {\n  return find(array, function (currentValue) {\n    return isEqualNumericRefinement(currentValue, searchedValue);\n  });\n}\n\n/**\n * The facet list is the structure used to store the list of values used to\n * filter a single attribute.\n * @typedef {string[]} SearchParameters.FacetList\n */\n\n/**\n * Structure to store numeric filters with the operator as the key. The supported operators\n * are `=`, `>`, `<`, `>=`, `<=` and `!=`.\n * @typedef {Object.<string, Array.<number|number[]>>} SearchParameters.OperatorList\n */\n\n/**\n * SearchParameters is the data structure that contains all the information\n * usable for making a search to Algolia API. It doesn't do the search itself,\n * nor does it contains logic about the parameters.\n * It is an immutable object, therefore it has been created in a way that each\n * changes does not change the object itself but returns a copy with the\n * modification.\n * This object should probably not be instantiated outside of the helper. It will\n * be provided when needed. This object is documented for reference as you'll\n * get it from events generated by the {@link AlgoliaSearchHelper}.\n * If need be, instantiate the Helper from the factory function {@link SearchParameters.make}\n * @constructor\n * @classdesc contains all the parameters of a search\n * @param {object|SearchParameters} newParameters existing parameters or partial object\n * for the properties of a new SearchParameters\n * @see SearchParameters.make\n * @example <caption>SearchParameters of the first query in\n *   <a href=\"http://demos.algolia.com/instant-search-demo/\">the instant search demo</a></caption>\n{\n   \"query\": \"\",\n   \"disjunctiveFacets\": [\n      \"customerReviewCount\",\n      \"category\",\n      \"salePrice_range\",\n      \"manufacturer\"\n  ],\n   \"maxValuesPerFacet\": 30,\n   \"page\": 0,\n   \"hitsPerPage\": 10,\n   \"facets\": [\n      \"type\",\n      \"shipping\"\n  ]\n}\n */\nfunction SearchParameters(newParameters) {\n  var params = newParameters ? SearchParameters._parseNumbers(newParameters) : {};\n  if (params.userToken !== undefined && !isValidUserToken(params.userToken)) {\n    // eslint-disable-next-line no-console\n    console.warn('[algoliasearch-helper] The `userToken` parameter is invalid. This can lead to wrong analytics.\\n  - Format: [a-zA-Z0-9_-]{1,64}');\n  }\n  /**\n   * This attribute contains the list of all the conjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.facets = params.facets || [];\n  /**\n   * This attribute contains the list of all the disjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.disjunctiveFacets = params.disjunctiveFacets || [];\n  /**\n   * This attribute contains the list of all the hierarchical facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * Hierarchical facets are a sub type of disjunctive facets that\n   * let you filter faceted attributes hierarchically.\n   * @member {string[]|object[]}\n   */\n  this.hierarchicalFacets = params.hierarchicalFacets || [];\n\n  // Refinements\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsRefinements = params.facetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * excluded from the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters excluded for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsExcludes = params.facetsExcludes || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the disjunctive facets. Each facet must be properly\n   * defined in the `disjunctiveFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.disjunctiveFacetsRefinements = params.disjunctiveFacetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the numeric attributes.\n   *\n   * The key is the name of the attribute, and the value is the\n   * filters to apply to this attribute.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `numericFilters` attribute.\n   * @member {Object.<string, SearchParameters.OperatorList>}\n   */\n  this.numericRefinements = params.numericRefinements || {};\n  /**\n   * This attribute contains all the tags used to refine the query.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `tagFilters` attribute.\n   * @member {string[]}\n   */\n  this.tagRefinements = params.tagRefinements || [];\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the hierarchical facets. Each facet must be properly\n   * defined in the `hierarchicalFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name. The FacetList values\n   * are structured as a string that contain the values for each level\n   * separated by the configured separator.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.hierarchicalFacetsRefinements = params.hierarchicalFacetsRefinements || {};\n\n  // eslint-disable-next-line consistent-this\n  var self = this;\n  Object.keys(params).forEach(function (paramName) {\n    var isKeyKnown = SearchParameters.PARAMETERS.indexOf(paramName) !== -1;\n    var isValueDefined = params[paramName] !== undefined;\n    if (!isKeyKnown && isValueDefined) {\n      self[paramName] = params[paramName];\n    }\n  });\n}\n\n/**\n * List all the properties in SearchParameters and therefore all the known Algolia properties\n * This doesn't contain any beta/hidden features.\n * @private\n */\nSearchParameters.PARAMETERS = Object.keys(new SearchParameters());\n\n/**\n * @private\n * @param {object} partialState full or part of a state\n * @return {object} a new object with the number keys as number\n */\nSearchParameters._parseNumbers = function (partialState) {\n  // Do not parse numbers again in SearchParameters, they ought to be parsed already\n  if (partialState instanceof SearchParameters) return partialState;\n  var numbers = {};\n  var numberKeys = ['aroundPrecision', 'aroundRadius', 'getRankingInfo', 'minWordSizefor2Typos', 'minWordSizefor1Typo', 'page', 'maxValuesPerFacet', 'distinct', 'minimumAroundRadius', 'hitsPerPage', 'minProximity'];\n  numberKeys.forEach(function (k) {\n    var value = partialState[k];\n    if (typeof value === 'string') {\n      var parsedValue = parseFloat(value);\n      // global isNaN is ok to use here, value is only number or NaN\n      numbers[k] = isNaN(parsedValue) ? value : parsedValue;\n    }\n  });\n\n  // there's two formats of insideBoundingBox, we need to parse\n  // the one which is an array of float geo rectangles\n  if (Array.isArray(partialState.insideBoundingBox)) {\n    numbers.insideBoundingBox = partialState.insideBoundingBox.map(function (geoRect) {\n      if (Array.isArray(geoRect)) {\n        return geoRect.map(function (value) {\n          return parseFloat(value);\n        });\n      }\n      return geoRect;\n    });\n  }\n  if (partialState.numericRefinements) {\n    var numericRefinements = {};\n    Object.keys(partialState.numericRefinements).forEach(function (attribute) {\n      var operators = partialState.numericRefinements[attribute] || {};\n      numericRefinements[attribute] = {};\n      Object.keys(operators).forEach(function (operator) {\n        var values = operators[operator];\n        var parsedValues = values.map(function (v) {\n          if (Array.isArray(v)) {\n            return v.map(function (vPrime) {\n              if (typeof vPrime === 'string') {\n                return parseFloat(vPrime);\n              }\n              return vPrime;\n            });\n          } else if (typeof v === 'string') {\n            return parseFloat(v);\n          }\n          return v;\n        });\n        numericRefinements[attribute][operator] = parsedValues;\n      });\n    });\n    numbers.numericRefinements = numericRefinements;\n  }\n  return merge({}, partialState, numbers);\n};\n\n/**\n * Factory for SearchParameters\n * @param {object|SearchParameters} newParameters existing parameters or partial\n * object for the properties of a new SearchParameters\n * @return {SearchParameters} frozen instance of SearchParameters\n */\nSearchParameters.make = function makeSearchParameters(newParameters) {\n  var instance = new SearchParameters(newParameters);\n  var hierarchicalFacets = newParameters.hierarchicalFacets || [];\n  hierarchicalFacets.forEach(function (facet) {\n    if (facet.rootPath) {\n      var currentRefinement = instance.getHierarchicalRefinement(facet.name);\n      if (currentRefinement.length > 0 && currentRefinement[0].indexOf(facet.rootPath) !== 0) {\n        instance = instance.clearRefinements(facet.name);\n      }\n\n      // get it again in case it has been cleared\n      currentRefinement = instance.getHierarchicalRefinement(facet.name);\n      if (currentRefinement.length === 0) {\n        instance = instance.toggleHierarchicalFacetRefinement(facet.name, facet.rootPath);\n      }\n    }\n  });\n  return instance;\n};\n\n/**\n * Validates the new parameters based on the previous state\n * @param {SearchParameters} currentState the current state\n * @param {object|SearchParameters} parameters the new parameters to set\n * @return {Error|null} Error if the modification is invalid, null otherwise\n */\nSearchParameters.validate = function (currentState, parameters) {\n  var params = parameters || {};\n  if (currentState.tagFilters && params.tagRefinements && params.tagRefinements.length > 0) {\n    return new Error('[Tags] Cannot switch from the managed tag API to the advanced API. It is probably ' + 'an error, if it is really what you want, you should first clear the tags with clearTags method.');\n  }\n  if (currentState.tagRefinements.length > 0 && params.tagFilters) {\n    return new Error('[Tags] Cannot switch from the advanced tag API to the managed API. It is probably ' + 'an error, if it is not, you should first clear the tags with clearTags method.');\n  }\n  if (currentState.numericFilters && params.numericRefinements && objectHasKeys(params.numericRefinements)) {\n    return new Error(\"[Numeric filters] Can't switch from the advanced to the managed API. It\" + ' is probably an error, if this is really what you want, you have to first' + ' clear the numeric filters.');\n  }\n  if (objectHasKeys(currentState.numericRefinements) && params.numericFilters) {\n    return new Error(\"[Numeric filters] Can't switch from the managed API to the advanced. It\" + ' is probably an error, if this is really what you want, you have to first' + ' clear the numeric filters.');\n  }\n  return null;\n};\nSearchParameters.prototype = {\n  constructor: SearchParameters,\n  /**\n   * Remove all refinements (disjunctive + conjunctive + excludes + numeric filters)\n   * @method\n   * @param {undefined|string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {SearchParameters} new instance with filters cleared\n   */\n  clearRefinements: function clearRefinements(attribute) {\n    var patch = {\n      numericRefinements: this._clearNumericRefinements(attribute),\n      facetsRefinements: RefinementList.clearRefinement(this.facetsRefinements, attribute, 'conjunctiveFacet'),\n      facetsExcludes: RefinementList.clearRefinement(this.facetsExcludes, attribute, 'exclude'),\n      disjunctiveFacetsRefinements: RefinementList.clearRefinement(this.disjunctiveFacetsRefinements, attribute, 'disjunctiveFacet'),\n      hierarchicalFacetsRefinements: RefinementList.clearRefinement(this.hierarchicalFacetsRefinements, attribute, 'hierarchicalFacet')\n    };\n    if (patch.numericRefinements === this.numericRefinements && patch.facetsRefinements === this.facetsRefinements && patch.facetsExcludes === this.facetsExcludes && patch.disjunctiveFacetsRefinements === this.disjunctiveFacetsRefinements && patch.hierarchicalFacetsRefinements === this.hierarchicalFacetsRefinements) {\n      return this;\n    }\n    return this.setQueryParameters(patch);\n  },\n  /**\n   * Remove all the refined tags from the SearchParameters\n   * @method\n   * @return {SearchParameters} new instance with tags cleared\n   */\n  clearTags: function clearTags() {\n    if (this.tagFilters === undefined && this.tagRefinements.length === 0) return this;\n    return this.setQueryParameters({\n      tagFilters: undefined,\n      tagRefinements: []\n    });\n  },\n  /**\n   * Set the index.\n   * @method\n   * @param {string} index the index name\n   * @return {SearchParameters} new instance\n   */\n  setIndex: function setIndex(index) {\n    if (index === this.index) return this;\n    return this.setQueryParameters({\n      index: index\n    });\n  },\n  /**\n   * Query setter\n   * @method\n   * @param {string} newQuery value for the new query\n   * @return {SearchParameters} new instance\n   */\n  setQuery: function setQuery(newQuery) {\n    if (newQuery === this.query) return this;\n    return this.setQueryParameters({\n      query: newQuery\n    });\n  },\n  /**\n   * Page setter\n   * @method\n   * @param {number} newPage new page number\n   * @return {SearchParameters} new instance\n   */\n  setPage: function setPage(newPage) {\n    if (newPage === this.page) return this;\n    return this.setQueryParameters({\n      page: newPage\n    });\n  },\n  /**\n   * Facets setter\n   * The facets are the simple facets, used for conjunctive (and) faceting.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for conjunctive faceting\n   * @return {SearchParameters} new instance\n   */\n  setFacets: function setFacets(facets) {\n    return this.setQueryParameters({\n      facets: facets\n    });\n  },\n  /**\n   * Disjunctive facets setter\n   * Change the list of disjunctive (or) facets the helper chan handle.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for disjunctive faceting\n   * @return {SearchParameters} new instance\n   */\n  setDisjunctiveFacets: function setDisjunctiveFacets(facets) {\n    return this.setQueryParameters({\n      disjunctiveFacets: facets\n    });\n  },\n  /**\n   * HitsPerPage setter\n   * Hits per page represents the number of hits retrieved for this query\n   * @method\n   * @param {number} n number of hits retrieved per page of results\n   * @return {SearchParameters} new instance\n   */\n  setHitsPerPage: function setHitsPerPage(n) {\n    if (this.hitsPerPage === n) return this;\n    return this.setQueryParameters({\n      hitsPerPage: n\n    });\n  },\n  /**\n   * typoTolerance setter\n   * Set the value of typoTolerance\n   * @method\n   * @param {string} typoTolerance new value of typoTolerance (\"true\", \"false\", \"min\" or \"strict\")\n   * @return {SearchParameters} new instance\n   */\n  setTypoTolerance: function setTypoTolerance(typoTolerance) {\n    if (this.typoTolerance === typoTolerance) return this;\n    return this.setQueryParameters({\n      typoTolerance: typoTolerance\n    });\n  },\n  /**\n   * Add a numeric filter for a given attribute\n   * When value is an array, they are combined with OR\n   * When value is a single value, it will combined with AND\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} operator operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number | number[]} value value of the filter\n   * @return {SearchParameters} new instance\n   * @example\n   * // for price = 50 or 40\n   * state.addNumericRefinement('price', '=', [50, 40]);\n   * @example\n   * // for size = 38 and 40\n   * state.addNumericRefinement('size', '=', 38);\n   * state.addNumericRefinement('size', '=', 40);\n   */\n  addNumericRefinement: function addNumericRefinement(attribute, operator, value) {\n    var val = valToNumber(value);\n    if (this.isNumericRefined(attribute, operator, val)) return this;\n    var mod = merge({}, this.numericRefinements);\n    mod[attribute] = merge({}, mod[attribute]);\n    if (mod[attribute][operator]) {\n      // Array copy\n      mod[attribute][operator] = mod[attribute][operator].slice();\n      // Add the element. Concat can't be used here because value can be an array.\n      mod[attribute][operator].push(val);\n    } else {\n      mod[attribute][operator] = [val];\n    }\n    return this.setQueryParameters({\n      numericRefinements: mod\n    });\n  },\n  /**\n   * Get the list of conjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getConjunctiveRefinements: function getConjunctiveRefinements(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of disjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getDisjunctiveRefinements: function getDisjunctiveRefinements(facetName) {\n    if (!this.isDisjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.disjunctiveFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of hierarchical refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getHierarchicalRefinement: function getHierarchicalRefinement(facetName) {\n    // we send an array but we currently do not support multiple\n    // hierarchicalRefinements for a hierarchicalFacet\n    return this.hierarchicalFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of exclude refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getExcludeRefinements: function getExcludeRefinements(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsExcludes[facetName] || [];\n  },\n  /**\n   * Remove all the numeric filter for a given (attribute, operator)\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} [operator] operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number} [number] the value to be removed\n   * @return {SearchParameters} new instance\n   */\n  removeNumericRefinement: function removeNumericRefinement(attribute, operator, number) {\n    var paramValue = number;\n    if (paramValue !== undefined) {\n      if (!this.isNumericRefined(attribute, operator, paramValue)) {\n        return this;\n      }\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function (value, key) {\n          return key === attribute && value.op === operator && isEqualNumericRefinement(value.val, valToNumber(paramValue));\n        })\n      });\n    } else if (operator !== undefined) {\n      if (!this.isNumericRefined(attribute, operator)) return this;\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function (value, key) {\n          return key === attribute && value.op === operator;\n        })\n      });\n    }\n    if (!this.isNumericRefined(attribute)) return this;\n    return this.setQueryParameters({\n      numericRefinements: this._clearNumericRefinements(function (value, key) {\n        return key === attribute;\n      })\n    });\n  },\n  /**\n   * Get the list of numeric refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {SearchParameters.OperatorList} list of refinements\n   */\n  getNumericRefinements: function getNumericRefinements(facetName) {\n    return this.numericRefinements[facetName] || {};\n  },\n  /**\n   * Return the current refinement for the (attribute, operator)\n   * @param {string} attribute attribute in the record\n   * @param {string} operator operator applied on the refined values\n   * @return {Array.<number|number[]>} refined values\n   */\n  getNumericRefinement: function getNumericRefinement(attribute, operator) {\n    return this.numericRefinements[attribute] && this.numericRefinements[attribute][operator];\n  },\n  /**\n   * Clear numeric filters.\n   * @method\n   * @private\n   * @param {string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {Object.<string, OperatorList>} new numeric refinements\n   */\n  _clearNumericRefinements: function _clearNumericRefinements(attribute) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(this.numericRefinements)) {\n        return this.numericRefinements;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(this.numericRefinements, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var numericRefinements = this.numericRefinements;\n      var newNumericRefinements = Object.keys(numericRefinements).reduce(function (memo, key) {\n        var operators = numericRefinements[key];\n        var operatorList = {};\n        operators = operators || {};\n        Object.keys(operators).forEach(function (operator) {\n          var values = operators[operator] || [];\n          var outValues = [];\n          values.forEach(function (value) {\n            var predicateResult = attribute({\n              val: value,\n              op: operator\n            }, key, 'numeric');\n            if (!predicateResult) outValues.push(value);\n          });\n          if (outValues.length !== values.length) {\n            hasChanged = true;\n          }\n          operatorList[operator] = outValues;\n        });\n\n        // eslint-disable-next-line no-param-reassign\n        memo[key] = operatorList;\n        return memo;\n      }, {});\n      if (hasChanged) return newNumericRefinements;\n      return this.numericRefinements;\n    }\n\n    // We return nothing if the attribute is not undefined, a string or a function,\n    // as it is not a valid value for a refinement\n    return undefined;\n  },\n  /**\n   * Add a facet to the facets attribute of the helper configuration, if it\n   * isn't already present.\n   * @method\n   * @param {string} facet facet name to add\n   * @return {SearchParameters} new instance\n   */\n  addFacet: function addFacet(facet) {\n    if (this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n    return this.setQueryParameters({\n      facets: this.facets.concat([facet])\n    });\n  },\n  /**\n   * Add a disjunctive facet to the disjunctiveFacets attribute of the helper\n   * configuration, if it isn't already present.\n   * @method\n   * @param {string} facet disjunctive facet name to add\n   * @return {SearchParameters} new instance\n   */\n  addDisjunctiveFacet: function addDisjunctiveFacet(facet) {\n    if (this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n    return this.setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.concat([facet])\n    });\n  },\n  /**\n   * Add a hierarchical facet to the hierarchicalFacets attribute of the helper\n   * configuration.\n   * @method\n   * @param {object} hierarchicalFacet hierarchical facet to add\n   * @return {SearchParameters} new instance\n   * @throws will throw an error if a hierarchical facet with the same name was already declared\n   */\n  addHierarchicalFacet: function addHierarchicalFacet(hierarchicalFacet) {\n    if (this.isHierarchicalFacet(hierarchicalFacet.name)) {\n      throw new Error('Cannot declare two hierarchical facets with the same name: `' + hierarchicalFacet.name + '`');\n    }\n    return this.setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.concat([hierarchicalFacet])\n    });\n  },\n  /**\n   * Add a refinement on a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters} new instance\n   */\n  addFacetRefinement: function addFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.addRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Exclude a value from a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the exclusion on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters} new instance\n   */\n  addExcludeRefinement: function addExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.addRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Adds a refinement on a disjunctive facet.\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters} new instance\n   */\n  addDisjunctiveFacetRefinement: function addDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n    if (RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.addRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * addTagRefinement adds a tag to the list used to filter the results\n   * @param {string} tag tag to be added\n   * @return {SearchParameters} new instance\n   */\n  addTagRefinement: function addTagRefinement(tag) {\n    if (this.isTagRefined(tag)) return this;\n    var modification = {\n      tagRefinements: this.tagRefinements.concat(tag)\n    };\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Remove a facet from the facets attribute of the helper configuration, if it\n   * is present.\n   * @method\n   * @param {string} facet facet name to remove\n   * @return {SearchParameters} new instance\n   */\n  removeFacet: function removeFacet(facet) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n    return this.clearRefinements(facet).setQueryParameters({\n      facets: this.facets.filter(function (f) {\n        return f !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a disjunctive facet from the disjunctiveFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet disjunctive facet name to remove\n   * @return {SearchParameters} new instance\n   */\n  removeDisjunctiveFacet: function removeDisjunctiveFacet(facet) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n    return this.clearRefinements(facet).setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.filter(function (f) {\n        return f !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a hierarchical facet from the hierarchicalFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet hierarchical facet name to remove\n   * @return {SearchParameters} new instance\n   */\n  removeHierarchicalFacet: function removeHierarchicalFacet(facet) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return this;\n    }\n    return this.clearRefinements(facet).setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.filter(function (f) {\n        return f.name !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a refinement set on facet. If a value is provided, it will clear the\n   * refinement for the given value, otherwise it will clear all the refinement\n   * values for the faceted attribute.\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} [value] value used to filter\n   * @return {SearchParameters} new instance\n   */\n  removeFacetRefinement: function removeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.removeRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Remove a negative refinement on a facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters} new instance\n   */\n  removeExcludeRefinement: function removeExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.removeRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Remove a refinement on a disjunctive facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters} new instance\n   */\n  removeDisjunctiveFacetRefinement: function removeDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.removeRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Remove a tag from the list of tag refinements\n   * @method\n   * @param {string} tag the tag to remove\n   * @return {SearchParameters} new instance\n   */\n  removeTagRefinement: function removeTagRefinement(tag) {\n    if (!this.isTagRefined(tag)) return this;\n    var modification = {\n      tagRefinements: this.tagRefinements.filter(function (t) {\n        return t !== tag;\n      })\n    };\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters} new instance\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   * @deprecated since version 2.19.0, see {@link SearchParameters#toggleFacetRefinement}\n   */\n  toggleRefinement: function toggleRefinement(facet, value) {\n    return this.toggleFacetRefinement(facet, value);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters} new instance\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   */\n  toggleFacetRefinement: function toggleFacetRefinement(facet, value) {\n    if (this.isHierarchicalFacet(facet)) {\n      return this.toggleHierarchicalFacetRefinement(facet, value);\n    } else if (this.isConjunctiveFacet(facet)) {\n      return this.toggleConjunctiveFacetRefinement(facet, value);\n    } else if (this.isDisjunctiveFacet(facet)) {\n      return this.toggleDisjunctiveFacetRefinement(facet, value);\n    }\n    throw new Error('Cannot refine the undeclared facet ' + facet + '; it should be added to the helper options facets, disjunctiveFacets or hierarchicalFacets');\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters} new instance\n   */\n  toggleConjunctiveFacetRefinement: function toggleConjunctiveFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.toggleRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters} new instance\n   */\n  toggleExcludeFacetRefinement: function toggleExcludeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.toggleRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters} new instance\n   */\n  toggleDisjunctiveFacetRefinement: function toggleDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.toggleRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters} new instance\n   */\n  toggleHierarchicalFacetRefinement: function toggleHierarchicalFacetRefinement(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');\n    }\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facet));\n    var mod = {};\n    var upOneOrMultipleLevel = this.hierarchicalFacetsRefinements[facet] !== undefined && this.hierarchicalFacetsRefinements[facet].length > 0 && (\n    // remove current refinement:\n    // refinement was 'beer > IPA', call is toggleRefine('beer > IPA'), refinement should be `beer`\n    this.hierarchicalFacetsRefinements[facet][0] === value ||\n    // remove a parent refinement of the current refinement:\n    //  - refinement was 'beer > IPA > Flying dog'\n    //  - call is toggleRefine('beer > IPA')\n    //  - refinement should be `beer`\n    this.hierarchicalFacetsRefinements[facet][0].indexOf(value + separator) === 0);\n    if (upOneOrMultipleLevel) {\n      if (value.indexOf(separator) === -1) {\n        // go back to root level\n        mod[facet] = [];\n      } else {\n        mod[facet] = [value.slice(0, value.lastIndexOf(separator))];\n      }\n    } else {\n      mod[facet] = [value];\n    }\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n  /**\n   * Adds a refinement on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @param {string} path the hierarchical facet path\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is refined\n   */\n  addHierarchicalFacetRefinement: function addHierarchicalFacetRefinement(facet, path) {\n    if (this.isHierarchicalFacetRefined(facet)) {\n      throw new Error(facet + ' is already refined.');\n    }\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration.');\n    }\n    var mod = {};\n    mod[facet] = [path];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n  /**\n   * Removes the refinement set on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is not refined\n   */\n  removeHierarchicalFacetRefinement: function removeHierarchicalFacetRefinement(facet) {\n    if (!this.isHierarchicalFacetRefined(facet)) {\n      return this;\n    }\n    var mod = {};\n    mod[facet] = [];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n  /**\n   * Switch the tag refinement\n   * @method\n   * @param {string} tag the tag to remove or add\n   * @return {SearchParameters} new instance\n   */\n  toggleTagRefinement: function toggleTagRefinement(tag) {\n    if (this.isTagRefined(tag)) {\n      return this.removeTagRefinement(tag);\n    }\n    return this.addTagRefinement(tag);\n  },\n  /**\n   * Test if the facet name is from one of the disjunctive facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean} true if facet is a disjunctive facet\n   */\n  isDisjunctiveFacet: function isDisjunctiveFacet(facet) {\n    return this.disjunctiveFacets.indexOf(facet) > -1;\n  },\n  /**\n   * Test if the facet name is from one of the hierarchical facets\n   * @method\n   * @param {string} facetName facet name to test\n   * @return {boolean} true if facetName is a hierarchical facet\n   */\n  isHierarchicalFacet: function isHierarchicalFacet(facetName) {\n    return this.getHierarchicalFacetByName(facetName) !== undefined;\n  },\n  /**\n   * Test if the facet name is from one of the conjunctive/normal facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean} true if facet is a conjunctive facet\n   */\n  isConjunctiveFacet: function isConjunctiveFacet(facet) {\n    return this.facets.indexOf(facet) > -1;\n  },\n  /**\n   * Returns true if the facet is refined, either for a specific value or in\n   * general.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value, optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isFacetRefined: function isFacetRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsRefinements, facet, value);\n  },\n  /**\n   * Returns true if the facet contains exclusions or if a specific value is\n   * excluded.\n   *\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isExcludeRefined: function isExcludeRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsExcludes, facet, value);\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean} true if the facet is refined\n   */\n  isDisjunctiveFacetRefined: function isDisjunctiveFacetRefined(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value);\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean} true if the facet is refined\n   */\n  isHierarchicalFacetRefined: function isHierarchicalFacetRefined(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return false;\n    }\n    var refinements = this.getHierarchicalRefinement(facet);\n    if (!value) {\n      return refinements.length > 0;\n    }\n    return refinements.indexOf(value) !== -1;\n  },\n  /**\n   * Test if the triple (attribute, operator, value) is already refined.\n   * If only the attribute and the operator are provided, it tests if the\n   * contains any refinement value.\n   * @method\n   * @param {string} attribute attribute for which the refinement is applied\n   * @param {string} [operator] operator of the refinement\n   * @param {string} [value] value of the refinement\n   * @return {boolean} true if it is refined\n   */\n  isNumericRefined: function isNumericRefined(attribute, operator, value) {\n    if (value === undefined && operator === undefined) {\n      return Boolean(this.numericRefinements[attribute]);\n    }\n    var isOperatorDefined = this.numericRefinements[attribute] && this.numericRefinements[attribute][operator] !== undefined;\n    if (value === undefined || !isOperatorDefined) {\n      return isOperatorDefined;\n    }\n    var parsedValue = valToNumber(value);\n    var isAttributeValueDefined = findArray(this.numericRefinements[attribute][operator], parsedValue) !== undefined;\n    return isOperatorDefined && isAttributeValueDefined;\n  },\n  /**\n   * Returns true if the tag refined, false otherwise\n   * @method\n   * @param {string} tag the tag to check\n   * @return {boolean} true if tag is refined\n   */\n  isTagRefined: function isTagRefined(tag) {\n    return this.tagRefinements.indexOf(tag) !== -1;\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]} returns the list of refinements\n   */\n  getRefinedDisjunctiveFacets: function getRefinedDisjunctiveFacets() {\n    // eslint-disable-next-line consistent-this\n    var self = this;\n\n    // attributes used for numeric filter can also be disjunctive\n    var disjunctiveNumericRefinedFacets = intersection(Object.keys(this.numericRefinements).filter(function (facet) {\n      return Object.keys(self.numericRefinements[facet]).length > 0;\n    }), this.disjunctiveFacets);\n    return Object.keys(this.disjunctiveFacetsRefinements).filter(function (facet) {\n      return self.disjunctiveFacetsRefinements[facet].length > 0;\n    }).concat(disjunctiveNumericRefinedFacets).concat(this.getRefinedHierarchicalFacets());\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]} returns the list of refinements\n   */\n  getRefinedHierarchicalFacets: function getRefinedHierarchicalFacets() {\n    // eslint-disable-next-line consistent-this\n    var self = this;\n    return intersection(\n    // enforce the order between the two arrays,\n    // so that refinement name index === hierarchical facet index\n    this.hierarchicalFacets.map(function (facet) {\n      return facet.name;\n    }), Object.keys(this.hierarchicalFacetsRefinements).filter(function (facet) {\n      return self.hierarchicalFacetsRefinements[facet].length > 0;\n    }));\n  },\n  /**\n   * Returned the list of all disjunctive facets not refined\n   * @method\n   * @return {string[]} returns the list of facets that are not refined\n   */\n  getUnrefinedDisjunctiveFacets: function getUnrefinedDisjunctiveFacets() {\n    var refinedFacets = this.getRefinedDisjunctiveFacets();\n    return this.disjunctiveFacets.filter(function (f) {\n      return refinedFacets.indexOf(f) === -1;\n    });\n  },\n  managedParameters: ['index', 'facets', 'disjunctiveFacets', 'facetsRefinements', 'hierarchicalFacets', 'facetsExcludes', 'disjunctiveFacetsRefinements', 'numericRefinements', 'tagRefinements', 'hierarchicalFacetsRefinements'],\n  getQueryParams: function getQueryParams() {\n    var managedParameters = this.managedParameters;\n    var queryParams = {};\n\n    // eslint-disable-next-line consistent-this\n    var self = this;\n    Object.keys(this).forEach(function (paramName) {\n      var paramValue = self[paramName];\n      if (managedParameters.indexOf(paramName) === -1 && paramValue !== undefined) {\n        queryParams[paramName] = paramValue;\n      }\n    });\n    return queryParams;\n  },\n  /**\n   * Let the user set a specific value for a given parameter. Will return the\n   * same instance if the parameter is invalid or if the value is the same as the\n   * previous one.\n   * @method\n   * @param {string} parameter the parameter name\n   * @param {any} value the value to be set, must be compliant with the definition\n   * of the attribute on the object\n   * @return {SearchParameters} the updated state\n   */\n  setQueryParameter: function setParameter(parameter, value) {\n    if (this[parameter] === value) return this;\n    var modification = {};\n    modification[parameter] = value;\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Let the user set any of the parameters with a plain object.\n   * @method\n   * @param {object} params all the keys and the values to be updated\n   * @return {SearchParameters} a new updated instance\n   */\n  setQueryParameters: function setQueryParameters(params) {\n    if (!params) return this;\n    var error = SearchParameters.validate(this, params);\n    if (error) {\n      throw error;\n    }\n\n    // eslint-disable-next-line consistent-this\n    var self = this;\n    var nextWithNumbers = SearchParameters._parseNumbers(params);\n    var previousPlainObject = Object.keys(this).reduce(function (acc, key) {\n      // eslint-disable-next-line no-param-reassign\n      acc[key] = self[key];\n      return acc;\n    }, {});\n    var nextPlainObject = Object.keys(nextWithNumbers).reduce(function (previous, key) {\n      var isPreviousValueDefined = previous[key] !== undefined;\n      var isNextValueDefined = nextWithNumbers[key] !== undefined;\n      if (isPreviousValueDefined && !isNextValueDefined) {\n        return omit(previous, [key]);\n      }\n      if (isNextValueDefined) {\n        // eslint-disable-next-line no-param-reassign\n        previous[key] = nextWithNumbers[key];\n      }\n      return previous;\n    }, previousPlainObject);\n    return new this.constructor(nextPlainObject);\n  },\n  /**\n   * Returns a new instance with the page reset. Two scenarios possible:\n   * the page is omitted -> return the given instance\n   * the page is set -> return a new instance with a page of 0\n   * @return {SearchParameters} a new updated instance\n   */\n  resetPage: function resetPage() {\n    if (this.page === undefined) {\n      return this;\n    }\n    return this.setPage(0);\n  },\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @param  {object} hierarchicalFacet the hierarchicalFacet object\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSortBy: function _getHierarchicalFacetSortBy(hierarchicalFacet) {\n    return hierarchicalFacet.sortBy || ['isRefined:desc', 'name:asc'];\n  },\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @private\n   * @param  {object} hierarchicalFacet the hierarchicalFacet object\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSeparator: function _getHierarchicalFacetSeparator(hierarchicalFacet) {\n    return hierarchicalFacet.separator || ' > ';\n  },\n  /**\n   * Helper function to get the hierarchicalFacet prefix path or null\n   * @private\n   * @param  {object} hierarchicalFacet the hierarchicalFacet object\n   * @return {string} returns the hierarchicalFacet.rootPath or null as default\n   */\n  _getHierarchicalRootPath: function _getHierarchicalRootPath(hierarchicalFacet) {\n    return hierarchicalFacet.rootPath || null;\n  },\n  /**\n   * Helper function to check if we show the parent level of the hierarchicalFacet\n   * @private\n   * @param  {object} hierarchicalFacet the hierarchicalFacet object\n   * @return {string} returns the hierarchicalFacet.showParentLevel or true as default\n   */\n  _getHierarchicalShowParentLevel: function _getHierarchicalShowParentLevel(hierarchicalFacet) {\n    if (typeof hierarchicalFacet.showParentLevel === 'boolean') {\n      return hierarchicalFacet.showParentLevel;\n    }\n    return true;\n  },\n  /**\n   * Helper function to get the hierarchicalFacet by it's name\n   * @param  {string} hierarchicalFacetName the hierarchicalFacet name\n   * @return {object} a hierarchicalFacet\n   */\n  getHierarchicalFacetByName: function getHierarchicalFacetByName(hierarchicalFacetName) {\n    return find(this.hierarchicalFacets, function (f) {\n      return f.name === hierarchicalFacetName;\n    });\n  },\n  /**\n   * Get the current breadcrumb for a hierarchical facet, as an array\n   * @param  {string} facetName Hierarchical facet name\n   * @return {array.<string>} the path as an array of string\n   */\n  getHierarchicalFacetBreadcrumb: function getHierarchicalFacetBreadcrumb(facetName) {\n    if (!this.isHierarchicalFacet(facetName)) {\n      return [];\n    }\n    var refinement = this.getHierarchicalRefinement(facetName)[0];\n    if (!refinement) return [];\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facetName));\n    var path = refinement.split(separator);\n    return path.map(function (part) {\n      return part.trim();\n    });\n  },\n  toString: function toString() {\n    return JSON.stringify(this, null, 2);\n  }\n};\n\n/**\n * Callback used for clearRefinement method\n * @callback SearchParameters.clearCallback\n * @param {OperatorList|FacetList} value the value of the filter\n * @param {string} key the current attribute name\n * @param {string} type `numeric`, `disjunctiveFacet`, `conjunctiveFacet`, `hierarchicalFacet` or `exclude`\n * depending on the type of facet\n * @return {boolean} `true` if the element should be removed. `false` otherwise.\n */\nmodule.exports = SearchParameters;","'use strict';\n\nmodule.exports = generateTrees;\nvar orderBy = require('../functions/orderBy');\nvar find = require('../functions/find');\nvar prepareHierarchicalFacetSortBy = require('../functions/formatSort');\nvar fv = require('../functions/escapeFacetValue');\nvar escapeFacetValue = fv.escapeFacetValue;\nvar unescapeFacetValue = fv.unescapeFacetValue;\nfunction generateTrees(state) {\n  return function generate(hierarchicalFacetResult, hierarchicalFacetIndex) {\n    var hierarchicalFacet = state.hierarchicalFacets[hierarchicalFacetIndex];\n    var hierarchicalFacetRefinement = state.hierarchicalFacetsRefinements[hierarchicalFacet.name] && state.hierarchicalFacetsRefinements[hierarchicalFacet.name][0] || '';\n    var hierarchicalSeparator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n    var hierarchicalRootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n    var hierarchicalShowParentLevel = state._getHierarchicalShowParentLevel(hierarchicalFacet);\n    var sortBy = prepareHierarchicalFacetSortBy(state._getHierarchicalFacetSortBy(hierarchicalFacet));\n    var rootExhaustive = hierarchicalFacetResult.every(function (facetResult) {\n      return facetResult.exhaustive;\n    });\n    var generateTreeFn = generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel, hierarchicalFacetRefinement);\n    var results = hierarchicalFacetResult;\n    if (hierarchicalRootPath) {\n      results = hierarchicalFacetResult.slice(hierarchicalRootPath.split(hierarchicalSeparator).length);\n    }\n    return results.reduce(generateTreeFn, {\n      name: state.hierarchicalFacets[hierarchicalFacetIndex].name,\n      count: null,\n      // root level, no count\n      isRefined: true,\n      // root level, always refined\n      path: null,\n      // root level, no path\n      escapedValue: null,\n      exhaustive: rootExhaustive,\n      data: null\n    });\n  };\n}\nfunction generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel, currentRefinement) {\n  return function generateTree(hierarchicalTree, hierarchicalFacetResult, currentHierarchicalLevel) {\n    var parent = hierarchicalTree;\n    if (currentHierarchicalLevel > 0) {\n      var level = 0;\n      parent = hierarchicalTree;\n      while (level < currentHierarchicalLevel) {\n        /**\n         * @type {object[]]} hierarchical data\n         */\n        var data = parent && Array.isArray(parent.data) ? parent.data : [];\n        parent = find(data, function (subtree) {\n          return subtree.isRefined;\n        });\n        level++;\n      }\n    }\n\n    // we found a refined parent, let's add current level data under it\n    if (parent) {\n      // filter values in case an object has multiple categories:\n      //   {\n      //     categories: {\n      //       level0: ['beers', 'bières'],\n      //       level1: ['beers > IPA', 'bières > Belges']\n      //     }\n      //   }\n      //\n      // If parent refinement is `beers`, then we do not want to have `bières > Belges`\n      // showing up\n\n      var picked = Object.keys(hierarchicalFacetResult.data).map(function (facetValue) {\n        return [facetValue, hierarchicalFacetResult.data[facetValue]];\n      }).filter(function (tuple) {\n        var facetValue = tuple[0];\n        return onlyMatchingTree(facetValue, parent.path || hierarchicalRootPath, currentRefinement, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel);\n      });\n      parent.data = orderBy(picked.map(function (tuple) {\n        var facetValue = tuple[0];\n        var facetCount = tuple[1];\n        return format(facetCount, facetValue, hierarchicalSeparator, unescapeFacetValue(currentRefinement), hierarchicalFacetResult.exhaustive);\n      }), sortBy[0], sortBy[1]);\n    }\n    return hierarchicalTree;\n  };\n}\n\n// eslint-disable-next-line max-params\nfunction onlyMatchingTree(facetValue, parentPath, currentRefinement, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel) {\n  // we want the facetValue is a child of hierarchicalRootPath\n  if (hierarchicalRootPath && (facetValue.indexOf(hierarchicalRootPath) !== 0 || hierarchicalRootPath === facetValue)) {\n    return false;\n  }\n\n  // we always want root levels (only when there is no prefix path)\n  return !hierarchicalRootPath && facetValue.indexOf(hierarchicalSeparator) === -1 ||\n  // if there is a rootPath, being root level mean 1 level under rootPath\n  hierarchicalRootPath && facetValue.split(hierarchicalSeparator).length - hierarchicalRootPath.split(hierarchicalSeparator).length === 1 ||\n  // if current refinement is a root level and current facetValue is a root level,\n  // keep the facetValue\n  facetValue.indexOf(hierarchicalSeparator) === -1 && currentRefinement.indexOf(hierarchicalSeparator) === -1 ||\n  // currentRefinement is a child of the facet value\n  currentRefinement.indexOf(facetValue) === 0 ||\n  // facetValue is a child of the current parent, add it\n  facetValue.indexOf(parentPath + hierarchicalSeparator) === 0 && (hierarchicalShowParentLevel || facetValue.indexOf(currentRefinement) === 0);\n}\nfunction format(facetCount, facetValue, hierarchicalSeparator, currentRefinement, exhaustive) {\n  var parts = facetValue.split(hierarchicalSeparator);\n  return {\n    name: parts[parts.length - 1].trim(),\n    path: facetValue,\n    escapedValue: escapeFacetValue(facetValue),\n    count: facetCount,\n    isRefined: currentRefinement === facetValue || currentRefinement.indexOf(facetValue + hierarchicalSeparator) === 0,\n    exhaustive: exhaustive,\n    data: null\n  };\n}","'use strict';\n\nvar merge = require('../functions/merge');\nvar defaultsPure = require('../functions/defaultsPure');\nvar orderBy = require('../functions/orderBy');\nvar compact = require('../functions/compact');\nvar find = require('../functions/find');\nvar findIndex = require('../functions/findIndex');\nvar formatSort = require('../functions/formatSort');\nvar fv = require('../functions/escapeFacetValue');\nvar escapeFacetValue = fv.escapeFacetValue;\nvar unescapeFacetValue = fv.unescapeFacetValue;\nvar generateHierarchicalTree = require('./generate-hierarchical-tree');\n\n/**\n * @typedef SearchResults.Facet\n * @type {object}\n * @property {string} name name of the attribute in the record\n * @property {object} data the faceting data: value, number of entries\n * @property {object} stats undefined unless facet_stats is retrieved from algolia\n */\n\n/**\n * @typedef SearchResults.HierarchicalFacet\n * @type {object}\n * @property {string} name name of the current value given the hierarchical level, trimmed.\n * If root node, you get the facet name\n * @property {number} count number of objects matching this hierarchical value\n * @property {string} path the current hierarchical value full path\n * @property {boolean} isRefined `true` if the current value was refined, `false` otherwise\n * @property {HierarchicalFacet[]} data sub values for the current level\n */\n\n/**\n * @typedef SearchResults.FacetValue\n * @type {object}\n * @property {string} name the facet value itself\n * @property {number} count times this facet appears in the results\n * @property {boolean} isRefined is the facet currently selected\n * @property {boolean} isExcluded is the facet currently excluded (only for conjunctive facets)\n */\n\n/**\n * @typedef Refinement\n * @type {object}\n * @property {string} type the type of filter used:\n * `numeric`, `facet`, `exclude`, `disjunctive`, `hierarchical`\n * @property {string} attributeName name of the attribute used for filtering\n * @property {string} name the value of the filter\n * @property {number} numericValue the value as a number. Only for numeric filters.\n * @property {string} operator the operator used. Only for numeric filters.\n * @property {number} count the number of computed hits for this filter. Only on facets.\n * @property {boolean} exhaustive if the count is exhaustive\n */\n\n/**\n * Turn an array of attributes in an object of attributes with their position in the array as value\n * @param {string[]} attributes the list of attributes in the record\n * @return {object} the list of attributes indexed by attribute name\n */\nfunction getIndices(attributes) {\n  var indices = {};\n  attributes.forEach(function (val, idx) {\n    indices[val] = idx;\n  });\n  return indices;\n}\nfunction assignFacetStats(dest, facetStats, key) {\n  if (facetStats && facetStats[key]) {\n    // eslint-disable-next-line no-param-reassign\n    dest.stats = facetStats[key];\n  }\n}\n\n/**\n * @typedef {Object} HierarchicalFacet\n * @property {string} name\n * @property {string[]} attributes\n */\n\n/**\n * @param {HierarchicalFacet[]} hierarchicalFacets All hierarchical facets\n * @param {string} hierarchicalAttributeName The name of the hierarchical attribute\n * @return {HierarchicalFacet} The hierarchical facet matching the attribute name\n */\nfunction findMatchingHierarchicalFacetFromAttributeName(hierarchicalFacets, hierarchicalAttributeName) {\n  return find(hierarchicalFacets, function facetKeyMatchesAttribute(hierarchicalFacet) {\n    var facetNames = hierarchicalFacet.attributes || [];\n    return facetNames.indexOf(hierarchicalAttributeName) > -1;\n  });\n}\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * Constructor for SearchResults\n * @class\n * @classdesc SearchResults contains the results of a query to Algolia using the\n * {@link AlgoliaSearchHelper}.\n * @param {SearchParameters} state state that led to the response\n * @param {array.<object>} results the results from algolia client\n * @example <caption>SearchResults of the first query in\n * <a href=\"http://demos.algolia.com/instant-search-demo\">the instant search demo</a></caption>\n{\n   \"hitsPerPage\": 10,\n   \"processingTimeMS\": 2,\n   \"facets\": [\n      {\n         \"name\": \"type\",\n         \"data\": {\n            \"HardGood\": 6627,\n            \"BlackTie\": 550,\n            \"Music\": 665,\n            \"Software\": 131,\n            \"Game\": 456,\n            \"Movie\": 1571\n         },\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"Free shipping\": 5507\n         },\n         \"name\": \"shipping\"\n      }\n  ],\n   \"hits\": [\n      {\n         \"thumbnailImage\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_54x108_s.gif\",\n         \"_highlightResult\": {\n            \"shortDescription\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n               \"matchedWords\": []\n            },\n            \"category\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Computer Security Software\",\n               \"matchedWords\": []\n            },\n            \"manufacturer\": {\n               \"matchedWords\": [],\n               \"value\": \"Webroot\",\n               \"matchLevel\": \"none\"\n            },\n            \"name\": {\n               \"value\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n               \"matchedWords\": [],\n               \"matchLevel\": \"none\"\n            }\n         },\n         \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_105x210_sc.jpg\",\n         \"shipping\": \"Free shipping\",\n         \"bestSellingRank\": 4,\n         \"shortDescription\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n         \"url\": \"http://www.bestbuy.com/site/webroot-secureanywhere-internet-security-3-devi…d=1219060687969&skuId=1688832&cmp=RMX&ky=2d3GfEmNIzjA0vkzveHdZEBgpPCyMnLTJ\",\n         \"name\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n         \"category\": \"Computer Security Software\",\n         \"salePrice_range\": \"1 - 50\",\n         \"objectID\": \"1688832\",\n         \"type\": \"Software\",\n         \"customerReviewCount\": 5980,\n         \"salePrice\": 49.99,\n         \"manufacturer\": \"Webroot\"\n      },\n      ....\n  ],\n   \"nbHits\": 10000,\n   \"disjunctiveFacets\": [\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"5\": 183,\n            \"12\": 112,\n            \"7\": 149,\n            ...\n         },\n         \"name\": \"customerReviewCount\",\n         \"stats\": {\n            \"max\": 7461,\n            \"avg\": 157.939,\n            \"min\": 1\n         }\n      },\n      {\n         \"data\": {\n            \"Printer Ink\": 142,\n            \"Wireless Speakers\": 60,\n            \"Point & Shoot Cameras\": 48,\n            ...\n         },\n         \"name\": \"category\",\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"> 5000\": 2,\n            \"1 - 50\": 6524,\n            \"501 - 2000\": 566,\n            \"201 - 500\": 1501,\n            \"101 - 200\": 1360,\n            \"2001 - 5000\": 47\n         },\n         \"name\": \"salePrice_range\"\n      },\n      {\n         \"data\": {\n            \"Dynex™\": 202,\n            \"Insignia™\": 230,\n            \"PNY\": 72,\n            ...\n         },\n         \"name\": \"manufacturer\",\n         \"exhaustive\": false\n      }\n  ],\n   \"query\": \"\",\n   \"nbPages\": 100,\n   \"page\": 0,\n   \"index\": \"bestbuy\"\n}\n **/\nfunction SearchResults(state, results, options) {\n  var mainSubResponse = results[0];\n  this._rawResults = results;\n\n  // eslint-disable-next-line consistent-this\n  var self = this;\n\n  // https://www.algolia.com/doc/api-reference/api-methods/search/#response\n  Object.keys(mainSubResponse).forEach(function (key) {\n    self[key] = mainSubResponse[key];\n  });\n\n  // Make every key of the result options reachable from the instance\n  Object.keys(options || {}).forEach(function (key) {\n    self[key] = options[key];\n  });\n\n  /**\n   * query used to generate the results\n   * @name query\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The query as parsed by the engine given all the rules.\n   * @name parsedQuery\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * all the records that match the search parameters. Each record is\n   * augmented with a new attribute `_highlightResult`\n   * which is an object keyed by attribute and with the following properties:\n   * - `value` : the value of the facet highlighted (html)\n   * - `matchLevel`: `full`, `partial` or `none`, depending on how the query terms match\n   * @name hits\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * index where the results come from\n   * @name index\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * number of hits per page requested\n   * @name hitsPerPage\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of hits of this query on the index\n   * @name nbHits\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of pages with respect to the number of hits per page and the total number of hits\n   * @name nbPages\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * current page\n   * @name page\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The position if the position was guessed by IP.\n   * @name aroundLatLng\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"48.8637,2.3615\",\n   */\n  /**\n   * The radius computed by Algolia.\n   * @name automaticRadius\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"126792922\",\n   */\n  /**\n   * String identifying the server used to serve this request.\n   *\n   * getRankingInfo needs to be set to `true` for this to be returned\n   *\n   * @name serverUsed\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"c7-use-2.algolia.net\",\n   */\n  /**\n   * Boolean that indicates if the computation of the counts did time out.\n   * @deprecated\n   * @name timeoutCounts\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Boolean that indicates if the computation of the hits did time out.\n   * @deprecated\n   * @name timeoutHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the counts of the facets is exhaustive\n   * @name exhaustiveFacetsCount\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the number of hits is exhaustive\n   * @name exhaustiveNbHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Contains the userData if they are set by a [query rule](https://www.algolia.com/doc/guides/query-rules/query-rules-overview/).\n   * @name userData\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * queryID is the unique identifier of the query used to generate the current search results.\n   * This value is only available if the `clickAnalytics` search parameter is set to `true`.\n   * @name queryID\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * sum of the processing time of all the queries\n   * @name processingTimeMS\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  this.processingTimeMS = results.reduce(function (sum, result) {\n    return result.processingTimeMS === undefined ? sum : sum + result.processingTimeMS;\n  }, 0);\n\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.disjunctiveFacets = [];\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.HierarchicalFacet[]}\n   */\n  this.hierarchicalFacets = state.hierarchicalFacets.map(function initFutureTree() {\n    return [];\n  });\n  /**\n   * other facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.facets = [];\n  var disjunctiveFacets = state.getRefinedDisjunctiveFacets();\n  var facetsIndices = getIndices(state.facets);\n  var disjunctiveFacetsIndices = getIndices(state.disjunctiveFacets);\n  var nextDisjunctiveResult = 1;\n\n  // Since we send request only for disjunctive facets that have been refined,\n  // we get the facets information from the first, general, response.\n\n  var mainFacets = mainSubResponse.facets || {};\n  Object.keys(mainFacets).forEach(function (facetKey) {\n    var facetValueObject = mainFacets[facetKey];\n    var hierarchicalFacet = findMatchingHierarchicalFacetFromAttributeName(state.hierarchicalFacets, facetKey);\n    if (hierarchicalFacet) {\n      // Place the hierarchicalFacet data at the correct index depending on\n      // the attributes order that was defined at the helper initialization\n      var facetIndex = hierarchicalFacet.attributes.indexOf(facetKey);\n      var idxAttributeName = findIndex(state.hierarchicalFacets, function (f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      self.hierarchicalFacets[idxAttributeName][facetIndex] = {\n        attribute: facetKey,\n        data: facetValueObject,\n        exhaustive: mainSubResponse.exhaustiveFacetsCount\n      };\n    } else {\n      var isFacetDisjunctive = state.disjunctiveFacets.indexOf(facetKey) !== -1;\n      var isFacetConjunctive = state.facets.indexOf(facetKey) !== -1;\n      var position;\n      if (isFacetDisjunctive) {\n        position = disjunctiveFacetsIndices[facetKey];\n        self.disjunctiveFacets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], mainSubResponse.facets_stats, facetKey);\n      }\n      if (isFacetConjunctive) {\n        position = facetsIndices[facetKey];\n        self.facets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.facets[position], mainSubResponse.facets_stats, facetKey);\n      }\n    }\n  });\n\n  // Make sure we do not keep holes within the hierarchical facets\n  this.hierarchicalFacets = compact(this.hierarchicalFacets);\n\n  // aggregate the refined disjunctive facets\n  disjunctiveFacets.forEach(function (disjunctiveFacet) {\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    var hierarchicalFacet = state.getHierarchicalFacetByName(disjunctiveFacet);\n\n    // There should be only item in facets.\n    Object.keys(facets).forEach(function (dfacet) {\n      var facetResults = facets[dfacet];\n      var position;\n      if (hierarchicalFacet) {\n        position = findIndex(state.hierarchicalFacets, function (f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(self.hierarchicalFacets[position], function (f) {\n          return f.attribute === dfacet;\n        });\n\n        // previous refinements and no results so not able to find it\n        if (attributeIndex === -1) {\n          return;\n        }\n        self.hierarchicalFacets[position][attributeIndex].data = merge({}, self.hierarchicalFacets[position][attributeIndex].data, facetResults);\n      } else {\n        position = disjunctiveFacetsIndices[dfacet];\n        var dataFromMainRequest = mainSubResponse.facets && mainSubResponse.facets[dfacet] || {};\n        self.disjunctiveFacets[position] = {\n          name: dfacet,\n          data: defaultsPure({}, facetResults, dataFromMainRequest),\n          exhaustive: result.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], result.facets_stats, dfacet);\n        if (state.disjunctiveFacetsRefinements[dfacet]) {\n          state.disjunctiveFacetsRefinements[dfacet].forEach(function (refinementValue) {\n            // add the disjunctive refinements if it is no more retrieved\n            if (!self.disjunctiveFacets[position].data[refinementValue] && state.disjunctiveFacetsRefinements[dfacet].indexOf(unescapeFacetValue(refinementValue)) > -1) {\n              self.disjunctiveFacets[position].data[refinementValue] = 0;\n            }\n          });\n        }\n      }\n    });\n    nextDisjunctiveResult++;\n  });\n\n  // if we have some parent level values for hierarchical facets, merge them\n  state.getRefinedHierarchicalFacets().forEach(function (refinedFacet) {\n    var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n    var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n    // if we are already at a root refinement (or no refinement at all), there is no\n    // root level values request\n    if (currentRefinement.length === 0 || currentRefinement[0].split(separator).length < 2) {\n      return;\n    }\n    results.slice(nextDisjunctiveResult).forEach(function (result) {\n      var facets = result && result.facets ? result.facets : {};\n      Object.keys(facets).forEach(function (dfacet) {\n        var facetResults = facets[dfacet];\n        var position = findIndex(state.hierarchicalFacets, function (f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(self.hierarchicalFacets[position], function (f) {\n          return f.attribute === dfacet;\n        });\n\n        // previous refinements and no results so not able to find it\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        // when we always get root levels, if the hits refinement is `beers > IPA` (count: 5),\n        // then the disjunctive values will be `beers` (count: 100),\n        // but we do not want to display\n        //   | beers (100)\n        //     > IPA (5)\n        // We want\n        //   | beers (5)\n        //     > IPA (5)\n        var defaultData = {};\n        if (currentRefinement.length > 0) {\n          var root = currentRefinement[0].split(separator)[0];\n          defaultData[root] = self.hierarchicalFacets[position][attributeIndex].data[root];\n        }\n        self.hierarchicalFacets[position][attributeIndex].data = defaultsPure(defaultData, facetResults, self.hierarchicalFacets[position][attributeIndex].data);\n      });\n      nextDisjunctiveResult++;\n    });\n  });\n\n  // add the excludes\n  Object.keys(state.facetsExcludes).forEach(function (facetName) {\n    var excludes = state.facetsExcludes[facetName];\n    var position = facetsIndices[facetName];\n    self.facets[position] = {\n      name: facetName,\n      data: mainFacets[facetName],\n      exhaustive: mainSubResponse.exhaustiveFacetsCount\n    };\n    excludes.forEach(function (facetValue) {\n      self.facets[position] = self.facets[position] || {\n        name: facetName\n      };\n      self.facets[position].data = self.facets[position].data || {};\n      self.facets[position].data[facetValue] = 0;\n    });\n  });\n\n  /**\n   * @type {Array}\n   */\n  this.hierarchicalFacets = this.hierarchicalFacets.map(generateHierarchicalTree(state));\n\n  /**\n   * @type {Array}\n   */\n  this.facets = compact(this.facets);\n  /**\n   * @type {Array}\n   */\n  this.disjunctiveFacets = compact(this.disjunctiveFacets);\n  this._state = state;\n}\n\n/**\n * Get a facet object with its name\n * @deprecated\n * @param {string} name name of the faceted attribute\n * @return {SearchResults.Facet} the facet object\n */\nSearchResults.prototype.getFacetByName = function (name) {\n  function predicate(facet) {\n    return facet.name === name;\n  }\n  return find(this.facets, predicate) || find(this.disjunctiveFacets, predicate) || find(this.hierarchicalFacets, predicate);\n};\n\n/**\n * Get the facet values of a specified attribute from a SearchResults object.\n * @private\n * @param {SearchResults} results the search results to search in\n * @param {string} attribute name of the faceted attribute to search for\n * @return {array|object} facet values. For the hierarchical facets it is an object.\n */\nfunction extractNormalizedFacetValues(results, attribute) {\n  function predicate(facet) {\n    return facet.name === attribute;\n  }\n  if (results._state.isConjunctiveFacet(attribute)) {\n    var facet = find(results.facets, predicate);\n    if (!facet) return [];\n    return Object.keys(facet.data).map(function (name) {\n      var value = escapeFacetValue(name);\n      return {\n        name: name,\n        escapedValue: value,\n        count: facet.data[name],\n        isRefined: results._state.isFacetRefined(attribute, value),\n        isExcluded: results._state.isExcludeRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isDisjunctiveFacet(attribute)) {\n    var disjunctiveFacet = find(results.disjunctiveFacets, predicate);\n    if (!disjunctiveFacet) return [];\n    return Object.keys(disjunctiveFacet.data).map(function (name) {\n      var value = escapeFacetValue(name);\n      return {\n        name: name,\n        escapedValue: value,\n        count: disjunctiveFacet.data[name],\n        isRefined: results._state.isDisjunctiveFacetRefined(attribute, value)\n      };\n    });\n  } else if (results._state.isHierarchicalFacet(attribute)) {\n    var hierarchicalFacetValues = find(results.hierarchicalFacets, predicate);\n    if (!hierarchicalFacetValues) return hierarchicalFacetValues;\n    var hierarchicalFacet = results._state.getHierarchicalFacetByName(attribute);\n    var separator = results._state._getHierarchicalFacetSeparator(hierarchicalFacet);\n    var currentRefinement = unescapeFacetValue(results._state.getHierarchicalRefinement(attribute)[0] || '');\n    if (currentRefinement.indexOf(hierarchicalFacet.rootPath) === 0) {\n      currentRefinement = currentRefinement.replace(hierarchicalFacet.rootPath + separator, '');\n    }\n    var currentRefinementSplit = currentRefinement.split(separator);\n    currentRefinementSplit.unshift(attribute);\n    setIsRefined(hierarchicalFacetValues, currentRefinementSplit, 0);\n    return hierarchicalFacetValues;\n  }\n  return undefined;\n}\n\n/**\n * Set the isRefined of a hierarchical facet result based on the current state.\n * @param {SearchResults.HierarchicalFacet} item Hierarchical facet to fix\n * @param {string[]} currentRefinement array of parts of the current hierarchical refinement\n * @param {number} depth recursion depth in the currentRefinement\n * @return {undefined} function mutates the item\n */\nfunction setIsRefined(item, currentRefinement, depth) {\n  // eslint-disable-next-line no-param-reassign\n  item.isRefined = item.name === currentRefinement[depth];\n  if (item.data) {\n    item.data.forEach(function (child) {\n      setIsRefined(child, currentRefinement, depth + 1);\n    });\n  }\n}\n\n/**\n * Sort nodes of a hierarchical or disjunctive facet results\n * @private\n * @param {function} sortFn sort function to apply\n * @param {HierarchicalFacet|Array} node node upon which we want to apply the sort\n * @param {string[]} names attribute names\n * @param {number} [level=0] current index in the names array\n * @return {HierarchicalFacet|Array} sorted node\n */\nfunction recSort(sortFn, node, names, level) {\n  // eslint-disable-next-line no-param-reassign\n  level = level || 0;\n  if (Array.isArray(node)) {\n    return sortFn(node, names[level]);\n  }\n  if (!node.data || node.data.length === 0) {\n    return node;\n  }\n  var children = node.data.map(function (childNode) {\n    return recSort(sortFn, childNode, names, level + 1);\n  });\n  var sortedChildren = sortFn(children, names[level]);\n  var newNode = defaultsPure({\n    data: sortedChildren\n  }, node);\n  return newNode;\n}\nSearchResults.DEFAULT_SORT = ['isRefined:desc', 'count:desc', 'name:asc'];\nfunction vanillaSortFn(order, data) {\n  return data.sort(order);\n}\n\n/**\n * @typedef FacetOrdering\n * @type {Object}\n * @property {string[]} [order]\n * @property {'count' | 'alpha' | 'hidden'} [sortRemainingBy]\n */\n\n/**\n * Sorts facet arrays via their facet ordering\n * @param {Array} facetValues the values\n * @param {FacetOrdering} facetOrdering the ordering\n * @returns {Array} the sorted facet values\n */\nfunction sortViaFacetOrdering(facetValues, facetOrdering) {\n  var orderedFacets = [];\n  var remainingFacets = [];\n  var order = facetOrdering.order || [];\n  /**\n   * an object with the keys being the values in order, the values their index:\n   * ['one', 'two'] -> { one: 0, two: 1 }\n   */\n  var reverseOrder = order.reduce(function (acc, name, i) {\n    // eslint-disable-next-line no-param-reassign\n    acc[name] = i;\n    return acc;\n  }, {});\n  facetValues.forEach(function (item) {\n    // hierarchical facets get sorted using their raw name\n    var name = item.path || item.name;\n    if (reverseOrder[name] !== undefined) {\n      orderedFacets[reverseOrder[name]] = item;\n    } else {\n      remainingFacets.push(item);\n    }\n  });\n  orderedFacets = orderedFacets.filter(function (facet) {\n    return facet;\n  });\n  var sortRemainingBy = facetOrdering.sortRemainingBy;\n  var ordering;\n  if (sortRemainingBy === 'hidden') {\n    return orderedFacets;\n  } else if (sortRemainingBy === 'alpha') {\n    ordering = [['path', 'name'], ['asc', 'asc']];\n  } else {\n    ordering = [['count'], ['desc']];\n  }\n  return orderedFacets.concat(orderBy(remainingFacets, ordering[0], ordering[1]));\n}\n\n/**\n * @param {SearchResults} results the search results class\n * @param {string} attribute the attribute to retrieve ordering of\n * @returns {FacetOrdering | undefined} the facet ordering\n */\nfunction getFacetOrdering(results, attribute) {\n  return results.renderingContent && results.renderingContent.facetOrdering && results.renderingContent.facetOrdering.values && results.renderingContent.facetOrdering.values[attribute];\n}\n\n/**\n * Get a the list of values for a given facet attribute. Those values are sorted\n * refinement first, descending count (bigger value on top), and name ascending\n * (alphabetical order). The sort formula can overridden using either string based\n * predicates or a function.\n *\n * This method will return all the values returned by the Algolia engine plus all\n * the values already refined. This means that it can happen that the\n * `maxValuesPerFacet` [configuration](https://www.algolia.com/doc/rest-api/search#param-maxValuesPerFacet)\n * might not be respected if you have facet values that are already refined.\n * @param {string} attribute attribute name\n * @param {object} opts configuration options.\n * @param {boolean} [opts.facetOrdering]\n * Force the use of facetOrdering from the result if a sortBy is present. If\n * sortBy isn't present, facetOrdering will be used automatically.\n * @param {Array.<string> | function} opts.sortBy\n * When using strings, it consists of\n * the name of the [FacetValue](#SearchResults.FacetValue) or the\n * [HierarchicalFacet](#SearchResults.HierarchicalFacet) attributes with the\n * order (`asc` or `desc`). For example to order the value by count, the\n * argument would be `['count:asc']`.\n *\n * If only the attribute name is specified, the ordering defaults to the one\n * specified in the default value for this attribute.\n *\n * When not specified, the order is\n * ascending.  This parameter can also be a function which takes two facet\n * values and should return a number, 0 if equal, 1 if the first argument is\n * bigger or -1 otherwise.\n *\n * The default value for this attribute `['isRefined:desc', 'count:desc', 'name:asc']`\n * @return {FacetValue[]|HierarchicalFacet|undefined} depending on the type of facet of\n * the attribute requested (hierarchical, disjunctive or conjunctive)\n * @example\n * helper.on('result', function(event){\n *   //get values ordered only by name ascending using the string predicate\n *   event.results.getFacetValues('city', {sortBy: ['name:asc']});\n *   //get values  ordered only by count ascending using a function\n *   event.results.getFacetValues('city', {\n *     // this is equivalent to ['count:asc']\n *     sortBy: function(a, b) {\n *       if (a.count === b.count) return 0;\n *       if (a.count > b.count)   return 1;\n *       if (b.count > a.count)   return -1;\n *     }\n *   });\n * });\n */\nSearchResults.prototype.getFacetValues = function (attribute, opts) {\n  var facetValues = extractNormalizedFacetValues(this, attribute);\n  if (!facetValues) {\n    return undefined;\n  }\n  var options = defaultsPure({}, opts, {\n    sortBy: SearchResults.DEFAULT_SORT,\n    // if no sortBy is given, attempt to sort based on facetOrdering\n    // if it is given, we still allow to sort via facet ordering first\n    facetOrdering: !(opts && opts.sortBy)\n  });\n\n  // eslint-disable-next-line consistent-this\n  var results = this;\n  var attributes;\n  if (Array.isArray(facetValues)) {\n    attributes = [attribute];\n  } else {\n    var config = results._state.getHierarchicalFacetByName(facetValues.name);\n    attributes = config.attributes;\n  }\n  return recSort(function (data, facetName) {\n    if (options.facetOrdering) {\n      var facetOrdering = getFacetOrdering(results, facetName);\n      if (facetOrdering) {\n        return sortViaFacetOrdering(data, facetOrdering);\n      }\n    }\n    if (Array.isArray(options.sortBy)) {\n      var order = formatSort(options.sortBy, SearchResults.DEFAULT_SORT);\n      return orderBy(data, order[0], order[1]);\n    } else if (typeof options.sortBy === 'function') {\n      return vanillaSortFn(options.sortBy, data);\n    }\n    throw new Error('options.sortBy is optional but if defined it must be ' + 'either an array of string (predicates) or a sorting function');\n  }, facetValues, attributes);\n};\n\n/**\n * Returns the facet stats if attribute is defined and the facet contains some.\n * Otherwise returns undefined.\n * @param {string} attribute name of the faceted attribute\n * @return {object} The stats of the facet\n */\nSearchResults.prototype.getFacetStats = function (attribute) {\n  if (this._state.isConjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.facets, attribute);\n  } else if (this._state.isDisjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.disjunctiveFacets, attribute);\n  }\n  return undefined;\n};\n\n/**\n * @typedef {Object} FacetListItem\n * @property {string} name\n */\n\n/**\n * @param {FacetListItem[]} facetList (has more items, but enough for here)\n * @param {string} facetName The attribute to look for\n * @return {object|undefined} The stats of the facet\n */\nfunction getFacetStatsIfAvailable(facetList, facetName) {\n  var data = find(facetList, function (facet) {\n    return facet.name === facetName;\n  });\n  return data && data.stats;\n}\n\n/**\n * Returns all refinements for all filters + tags. It also provides\n * additional information: count and exhaustiveness for each filter.\n *\n * See the [refinement type](#Refinement) for an exhaustive view of the available\n * data.\n *\n * Note that for a numeric refinement, results are grouped per operator, this\n * means that it will return responses for operators which are empty.\n *\n * @return {Array.<Refinement>} all the refinements\n */\nSearchResults.prototype.getRefinements = function () {\n  var state = this._state;\n  // eslint-disable-next-line consistent-this\n  var results = this;\n  var res = [];\n  Object.keys(state.facetsRefinements).forEach(function (attributeName) {\n    state.facetsRefinements[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'facet', attributeName, name, results.facets));\n    });\n  });\n  Object.keys(state.facetsExcludes).forEach(function (attributeName) {\n    state.facetsExcludes[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'exclude', attributeName, name, results.facets));\n    });\n  });\n  Object.keys(state.disjunctiveFacetsRefinements).forEach(function (attributeName) {\n    state.disjunctiveFacetsRefinements[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'disjunctive', attributeName, name, results.disjunctiveFacets));\n    });\n  });\n  Object.keys(state.hierarchicalFacetsRefinements).forEach(function (attributeName) {\n    state.hierarchicalFacetsRefinements[attributeName].forEach(function (name) {\n      res.push(getHierarchicalRefinement(state, attributeName, name, results.hierarchicalFacets));\n    });\n  });\n  Object.keys(state.numericRefinements).forEach(function (attributeName) {\n    var operators = state.numericRefinements[attributeName];\n    Object.keys(operators).forEach(function (operator) {\n      operators[operator].forEach(function (value) {\n        res.push({\n          type: 'numeric',\n          attributeName: attributeName,\n          name: value,\n          numericValue: value,\n          operator: operator\n        });\n      });\n    });\n  });\n  state.tagRefinements.forEach(function (name) {\n    res.push({\n      type: 'tag',\n      attributeName: '_tags',\n      name: name\n    });\n  });\n  return res;\n};\n\n/**\n * @typedef {Object} Facet\n * @property {string} name\n * @property {Object} data\n * @property {boolean} exhaustive\n */\n\n/**\n * @param {SearchParameters} state the current state\n * @param {string} type the type of the refinement\n * @param {string} attributeName The attribute of the facet\n * @param {*} name The name of the facet\n * @param {Facet[]} resultsFacets facets from the results\n * @return {Refinement} the refinement\n */\nfunction getRefinement(state, type, attributeName, name, resultsFacets) {\n  var facet = find(resultsFacets, function (f) {\n    return f.name === attributeName;\n  });\n  var count = facet && facet.data && facet.data[name] ? facet.data[name] : 0;\n  var exhaustive = facet && facet.exhaustive || false;\n  return {\n    type: type,\n    attributeName: attributeName,\n    name: name,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\n/**\n * @param {SearchParameters} state the current state\n * @param {string} attributeName the attribute of the hierarchical facet\n * @param {string} name the name of the facet\n * @param {Facet[]} resultsFacets facets from the results\n * @return {HierarchicalFacet} the hierarchical facet\n */\nfunction getHierarchicalRefinement(state, attributeName, name, resultsFacets) {\n  var facetDeclaration = state.getHierarchicalFacetByName(attributeName);\n  var separator = state._getHierarchicalFacetSeparator(facetDeclaration);\n  var split = name.split(separator);\n  var rootFacet = find(resultsFacets, function (facet) {\n    return facet.name === attributeName;\n  });\n  var facet = split.reduce(function (intermediateFacet, part) {\n    var newFacet = intermediateFacet && find(intermediateFacet.data, function (f) {\n      return f.name === part;\n    });\n    return newFacet !== undefined ? newFacet : intermediateFacet;\n  }, rootFacet);\n  var count = facet && facet.count || 0;\n  var exhaustive = facet && facet.exhaustive || false;\n  var path = facet && facet.path || '';\n  return {\n    type: 'hierarchical',\n    attributeName: attributeName,\n    name: path,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\nmodule.exports = SearchResults;","'use strict';\n\nvar SearchParameters = require('./SearchParameters');\nvar SearchResults = require('./SearchResults');\nvar DerivedHelper = require('./DerivedHelper');\nvar requestBuilder = require('./requestBuilder');\nvar EventEmitter = require('@algolia/events');\nvar inherits = require('./functions/inherits');\nvar objectHasKeys = require('./functions/objectHasKeys');\nvar omit = require('./functions/omit');\nvar merge = require('./functions/merge');\nvar version = require('./version');\nvar escapeFacetValue = require('./functions/escapeFacetValue').escapeFacetValue;\n\n/**\n * Event triggered when a parameter is set or updated\n * @event AlgoliaSearchHelper#event:change\n * @property {object} event\n * @property {SearchParameters} event.state the current parameters with the latest changes applied\n * @property {SearchResults} event.results the previous results received from Algolia. `null` before the first request\n * @example\n * helper.on('change', function(event) {\n *   console.log('The parameters have changed');\n * });\n */\n\n/**\n * Event triggered when a main search is sent to Algolia\n * @event AlgoliaSearchHelper#event:search\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search\n * @property {SearchResults} event.results the results from the previous search. `null` if it is the first search.\n * @example\n * helper.on('search', function(event) {\n *   console.log('Search sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchForFacetValues` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchForFacetValues\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @property {string} event.facet the facet searched into\n * @property {string} event.query the query used to search in the facets\n * @example\n * helper.on('searchForFacetValues', function(event) {\n *   console.log('searchForFacetValues sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchOnce` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchOnce\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @example\n * helper.on('searchOnce', function(event) {\n *   console.log('searchOnce sent');\n * });\n */\n\n/**\n * Event triggered when the results are retrieved from Algolia\n * @event AlgoliaSearchHelper#event:result\n * @property {object} event\n * @property {SearchResults} event.results the results received from Algolia\n * @property {SearchParameters} event.state the parameters used to query Algolia. Those might be different from the one in the helper instance (for example if the network is unreliable).\n * @example\n * helper.on('result', function(event) {\n *   console.log('Search results received');\n * });\n */\n\n/**\n * Event triggered when Algolia sends back an error. For example, if an unknown parameter is\n * used, the error can be caught using this event.\n * @event AlgoliaSearchHelper#event:error\n * @property {object} event\n * @property {Error} event.error the error returned by the Algolia.\n * @example\n * helper.on('error', function(event) {\n *   console.log('Houston we got a problem.');\n * });\n */\n\n/**\n * Event triggered when the queue of queries have been depleted (with any result or outdated queries)\n * @event AlgoliaSearchHelper#event:searchQueueEmpty\n * @example\n * helper.on('searchQueueEmpty', function() {\n *   console.log('No more search pending');\n *   // This is received before the result event if we're not expecting new results\n * });\n *\n * helper.search();\n */\n\n/**\n * Initialize a new AlgoliaSearchHelper\n * @class\n * @classdesc The AlgoliaSearchHelper is a class that ease the management of the\n * search. It provides an event based interface for search callbacks:\n *  - change: when the internal search state is changed.\n *    This event contains a {@link SearchParameters} object and the\n *    {@link SearchResults} of the last result if any.\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n *  - error: when the response is an error. This event contains the error returned by the server.\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the index name to query\n * @param  {SearchParameters | object} options an object defining the initial\n * config of the search. It doesn't have to be a {SearchParameters},\n * just an object containing the properties you need from it.\n */\nfunction AlgoliaSearchHelper(client, index, options) {\n  if (typeof client.addAlgoliaAgent === 'function') {\n    client.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n  this.setClient(client);\n  var opts = options || {};\n  opts.index = index;\n  this.state = SearchParameters.make(opts);\n  this.lastResults = null;\n  this._queryId = 0;\n  this._lastQueryIdReceived = -1;\n  this.derivedHelpers = [];\n  this._currentNbQueries = 0;\n}\ninherits(AlgoliaSearchHelper, EventEmitter);\n\n/**\n * Start the search with the parameters set in the state. When the\n * method is called, it triggers a `search` event. The results will\n * be available through the `result` event. If an error occurs, an\n * `error` will be fired instead.\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires search\n * @fires result\n * @fires error\n * @chainable\n */\nAlgoliaSearchHelper.prototype.search = function () {\n  this._search({\n    onlyWithDerivedHelpers: false\n  });\n  return this;\n};\nAlgoliaSearchHelper.prototype.searchOnlyWithDerivedHelpers = function () {\n  this._search({\n    onlyWithDerivedHelpers: true\n  });\n  return this;\n};\n\n/**\n * Gets the search query parameters that would be sent to the Algolia Client\n * for the hits\n * @return {object} Query Parameters\n */\nAlgoliaSearchHelper.prototype.getQuery = function () {\n  var state = this.state;\n  return requestBuilder._getHitsSearchParams(state);\n};\n\n/**\n * Start a search using a modified version of the current state. This method does\n * not trigger the helper lifecycle and does not modify the state kept internally\n * by the helper. This second aspect means that the next search call will be the\n * same as a search call before calling searchOnce.\n * @param {object} options can contain all the parameters that can be set to SearchParameters\n * plus the index\n * @param {function} [cb] optional callback executed when the response from the\n * server is back.\n * @return {promise|undefined} if a callback is passed the method returns undefined\n * otherwise it returns a promise containing an object with two keys :\n *  - content with a SearchResults\n *  - state with the state used for the query as a SearchParameters\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the callback API\n * var state = helper.searchOnce({hitsPerPage: 1},\n *   function(error, content, state) {\n *     // if an error occurred it will be passed in error, otherwise its value is null\n *     // content contains the results formatted as a SearchResults\n *     // state is the instance of SearchParameters used for this search\n *   });\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the promise API\n * var state1 = helper.searchOnce({hitsPerPage: 1})\n *                 .then(promiseHandler);\n *\n * function promiseHandler(res) {\n *   // res contains\n *   // {\n *   //   content : SearchResults\n *   //   state   : SearchParameters (the one used for this specific search)\n *   // }\n * }\n */\nAlgoliaSearchHelper.prototype.searchOnce = function (options, cb) {\n  var tempState = !options ? this.state : this.state.setQueryParameters(options);\n  var queries = requestBuilder._getQueries(tempState.index, tempState);\n  // eslint-disable-next-line consistent-this\n  var self = this;\n  this._currentNbQueries++;\n  this.emit('searchOnce', {\n    state: tempState\n  });\n  if (cb) {\n    this.client.search(queries).then(function (content) {\n      self._currentNbQueries--;\n      if (self._currentNbQueries === 0) {\n        self.emit('searchQueueEmpty');\n      }\n      cb(null, new SearchResults(tempState, content.results), tempState);\n    }).catch(function (err) {\n      self._currentNbQueries--;\n      if (self._currentNbQueries === 0) {\n        self.emit('searchQueueEmpty');\n      }\n      cb(err, null, tempState);\n    });\n    return undefined;\n  }\n  return this.client.search(queries).then(function (content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    return {\n      content: new SearchResults(tempState, content.results),\n      state: tempState,\n      _originalResponse: content\n    };\n  }, function (e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n\n/**\n * Start the search for answers with the parameters set in the state.\n * This method returns a promise.\n * @param {Object} options - the options for answers API call\n * @param {string[]} options.attributesForPrediction - Attributes to use for predictions. If empty, `searchableAttributes` is used instead.\n * @param {string[]} options.queryLanguages - The languages in the query. Currently only supports ['en'].\n * @param {number} options.nbHits - Maximum number of answers to retrieve from the Answers Engine. Cannot be greater than 1000.\n *\n * @return {promise} the answer results\n * @deprecated answers is deprecated and will be replaced with new initiatives\n */\nAlgoliaSearchHelper.prototype.findAnswers = function (options) {\n  // eslint-disable-next-line no-console\n  console.warn('[algoliasearch-helper] answers is no longer supported');\n  var state = this.state;\n  var derivedHelper = this.derivedHelpers[0];\n  if (!derivedHelper) {\n    return Promise.resolve([]);\n  }\n  var derivedState = derivedHelper.getModifiedState(state);\n  var data = merge({\n    attributesForPrediction: options.attributesForPrediction,\n    nbHits: options.nbHits\n  }, {\n    params: omit(requestBuilder._getHitsSearchParams(derivedState), ['attributesToSnippet', 'hitsPerPage', 'restrictSearchableAttributes', 'snippetEllipsisText'])\n  });\n  var errorMessage = 'search for answers was called, but this client does not have a function client.initIndex(index).findAnswers';\n  if (typeof this.client.initIndex !== 'function') {\n    throw new Error(errorMessage);\n  }\n  var index = this.client.initIndex(derivedState.index);\n  if (typeof index.findAnswers !== 'function') {\n    throw new Error(errorMessage);\n  }\n  return index.findAnswers(derivedState.query, options.queryLanguages, data);\n};\n\n/**\n * Structure of each result when using\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * @typedef FacetSearchHit\n * @type {object}\n * @property {string} value the facet value\n * @property {string} highlighted the facet value highlighted with the query string\n * @property {number} count number of occurrence of this facet value\n * @property {boolean} isRefined true if the value is already refined\n */\n\n/**\n * Structure of the data resolved by the\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * promise.\n * @typedef FacetSearchResult\n * @type {object}\n * @property {FacetSearchHit} facetHits the results for this search for facet values\n * @property {number} processingTimeMS time taken by the query inside the engine\n */\n\n/**\n * Search for facet values based on an query and the name of a faceted attribute. This\n * triggers a search and will return a promise. On top of using the query, it also sends\n * the parameters from the state so that the search is narrowed down to only the possible values.\n *\n * See the description of [FacetSearchResult](reference.html#FacetSearchResult)\n * @param {string} facet the name of the faceted attribute\n * @param {string} query the string query for the search\n * @param {number} [maxFacetHits] the maximum number values returned. Should be > 0 and <= 100\n * @param {object} [userState] the set of custom parameters to use on top of the current state. Setting a property to `undefined` removes\n * it in the generated query.\n * @return {promise.<FacetSearchResult>} the results of the search\n */\nAlgoliaSearchHelper.prototype.searchForFacetValues = function (facet, query, maxFacetHits, userState) {\n  var clientHasSFFV = typeof this.client.searchForFacetValues === 'function';\n  var clientHasInitIndex = typeof this.client.initIndex === 'function';\n  if (!clientHasSFFV && !clientHasInitIndex && typeof this.client.search !== 'function') {\n    throw new Error('search for facet values (searchable) was called, but this client does not have a function client.searchForFacetValues or client.initIndex(index).searchForFacetValues');\n  }\n  var state = this.state.setQueryParameters(userState || {});\n  var isDisjunctive = state.isDisjunctiveFacet(facet);\n  var algoliaQuery = requestBuilder.getSearchForFacetQuery(facet, query, maxFacetHits, state);\n  this._currentNbQueries++;\n  // eslint-disable-next-line consistent-this\n  var self = this;\n  var searchForFacetValuesPromise;\n  // newer algoliasearch ^3.27.1 - ~4.0.0\n  if (clientHasSFFV) {\n    searchForFacetValuesPromise = this.client.searchForFacetValues([{\n      indexName: state.index,\n      params: algoliaQuery\n    }]);\n    // algoliasearch < 3.27.1\n  } else if (clientHasInitIndex) {\n    searchForFacetValuesPromise = this.client.initIndex(state.index).searchForFacetValues(algoliaQuery);\n    // algoliasearch ~5.0.0\n  } else {\n    // @MAJOR only use client.search\n    delete algoliaQuery.facetName;\n    searchForFacetValuesPromise = this.client.search([{\n      type: 'facet',\n      facet: facet,\n      indexName: state.index,\n      params: algoliaQuery\n    }]).then(function processResponse(response) {\n      return response.results[0];\n    });\n  }\n  this.emit('searchForFacetValues', {\n    state: state,\n    facet: facet,\n    query: query\n  });\n  return searchForFacetValuesPromise.then(function addIsRefined(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n\n    // eslint-disable-next-line no-param-reassign\n    content = Array.isArray(content) ? content[0] : content;\n    content.facetHits.forEach(function (f) {\n      // eslint-disable-next-line no-param-reassign\n      f.escapedValue = escapeFacetValue(f.value);\n      // eslint-disable-next-line no-param-reassign\n      f.isRefined = isDisjunctive ? state.isDisjunctiveFacetRefined(facet, f.escapedValue) : state.isFacetRefined(facet, f.escapedValue);\n    });\n    return content;\n  }, function (e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n\n/**\n * Sets the text query used for the search.\n *\n * This method resets the current page to 0.\n * @param  {string} q the user query\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setQuery = function (q) {\n  this._change({\n    state: this.state.resetPage().setQuery(q),\n    isPageReset: true\n  });\n  return this;\n};\n\n/**\n * Remove all the types of refinements except tags. A string can be provided to remove\n * only the refinements of a specific attribute. For more advanced use case, you can\n * provide a function instead. This function should follow the\n * [clearCallback definition](#SearchParameters.clearCallback).\n *\n * This method resets the current page to 0.\n * @param {string} [name] optional name of the facet / attribute on which we want to remove all refinements\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n * @example\n * // Removing all the refinements\n * helper.clearRefinements().search();\n * @example\n * // Removing all the filters on a the category attribute.\n * helper.clearRefinements('category').search();\n * @example\n * // Removing only the exclude filters on the category facet.\n * helper.clearRefinements(function(value, attribute, type) {\n *   return type === 'exclude' && attribute === 'category';\n * }).search();\n */\nAlgoliaSearchHelper.prototype.clearRefinements = function (name) {\n  this._change({\n    state: this.state.resetPage().clearRefinements(name),\n    isPageReset: true\n  });\n  return this;\n};\n\n/**\n * Remove all the tag filters.\n *\n * This method resets the current page to 0.\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.clearTags = function () {\n  this._change({\n    state: this.state.resetPage().clearTags(),\n    isPageReset: true\n  });\n  return this;\n};\n\n/**\n * Adds a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveRefine = function () {\n  return this.addDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds a refinement on a hierarchical facet. It will throw\n * an exception if the facet is not defined or if the facet\n * is already refined.\n *\n * This method resets the current page to 0.\n * @param {string} facet the facet name\n * @param {string} path the hierarchical facet path\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @throws Error if the facet is not defined or if the facet is refined\n * @chainable\n * @fires change\n */\nAlgoliaSearchHelper.prototype.addHierarchicalFacetRefinement = function (facet, path) {\n  this._change({\n    state: this.state.resetPage().addHierarchicalFacetRefinement(facet, path),\n    isPageReset: true\n  });\n  return this;\n};\n\n/**\n * Adds a an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} operator the operator of the filter\n * @param  {number} value the value of the filter\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addNumericRefinement = function (attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().addNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n  return this;\n};\n\n/**\n * Adds a filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addFacetRefinement(facet, value),\n    isPageReset: true\n  });\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addRefine = function () {\n  return this.addFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds a an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.addExclude = function () {\n  return this.addFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds a tag filter with the `tag` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag the tag to add to the filter\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().addTagRefinement(tag),\n    isPageReset: true\n  });\n  return this;\n};\n\n/**\n * Removes an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * Some parameters are optional, triggering different behavior:\n *  - if the value is not provided, then all the numeric value will be removed for the\n *  specified attribute/operator couple.\n *  - if the operator is not provided either, then all the numeric filter on this attribute\n *  will be removed.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} [operator] the operator of the filter\n * @param  {number} [value] the value of the filter\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeNumericRefinement = function (attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().removeNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n  return this;\n};\n\n/**\n * Removes a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveRefine = function () {\n  return this.removeDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes the refinement set on a hierarchical facet.\n * @param {string} facet the facet name\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @throws Error if the facet is not defined or if the facet is not refined\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeHierarchicalFacetRefinement = function (facet) {\n  this._change({\n    state: this.state.resetPage().removeHierarchicalFacetRefinement(facet),\n    isPageReset: true\n  });\n  return this;\n};\n\n/**\n * Removes a filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeRefine = function () {\n  return this.removeFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.removeExclude = function () {\n  return this.removeFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Removes a tag filter with the `tag` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove from the filter\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().removeTagRefinement(tag),\n    isPageReset: true\n  });\n  return this;\n};\n\n/**\n * Adds or removes an exclusion filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleExcludeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.toggleExclude = function () {\n  return this.toggleFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n * @deprecated since version 2.19.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefinement = function (facet, value) {\n  return this.toggleFacetRefinement(facet, value);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleFacetRefinement(facet, value),\n    isPageReset: true\n  });\n  return this;\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefine = function () {\n  return this.toggleFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds or removes a tag filter with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove or add\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().toggleTagRefinement(tag),\n    isPageReset: true\n  });\n  return this;\n};\n\n/**\n * Increments the page number by one.\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n * @example\n * helper.setPage(0).nextPage().getPage();\n * // returns 1\n */\nAlgoliaSearchHelper.prototype.nextPage = function () {\n  var page = this.state.page || 0;\n  return this.setPage(page + 1);\n};\n\n/**\n * Decrements the page number by one.\n * @fires change\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @chainable\n * @example\n * helper.setPage(1).previousPage().getPage();\n * // returns 0\n */\nAlgoliaSearchHelper.prototype.previousPage = function () {\n  var page = this.state.page || 0;\n  return this.setPage(page - 1);\n};\n\n/**\n * @private\n * @param {number} page The page number\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @chainable\n * @fires change\n */\nfunction setCurrentPage(page) {\n  if (page < 0) throw new Error('Page requested below 0.');\n  this._change({\n    state: this.state.setPage(page),\n    isPageReset: false\n  });\n  return this;\n}\n\n/**\n * Change the current page\n * @deprecated\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setCurrentPage = setCurrentPage;\n\n/**\n * Updates the current page.\n * @function\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setPage = setCurrentPage;\n\n/**\n * Updates the name of the index that will be targeted by the query.\n *\n * This method resets the current page to 0.\n * @param {string} name the index name\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setIndex = function (name) {\n  this._change({\n    state: this.state.resetPage().setIndex(name),\n    isPageReset: true\n  });\n  return this;\n};\n\n/**\n * Update a parameter of the search. This method reset the page\n *\n * The complete list of parameters is available on the\n * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).\n * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)\n * or benefit from higher-level APIs (all the kind of filters and facets have their own API)\n *\n * This method resets the current page to 0.\n * @param {string} parameter name of the parameter to update\n * @param {any} value new value of the parameter\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n * @example\n * helper.setQueryParameter('hitsPerPage', 20).search();\n */\nAlgoliaSearchHelper.prototype.setQueryParameter = function (parameter, value) {\n  this._change({\n    state: this.state.resetPage().setQueryParameter(parameter, value),\n    isPageReset: true\n  });\n  return this;\n};\n\n/**\n * Set the whole state (warning: will erase previous state)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setState = function (newState) {\n  this._change({\n    state: SearchParameters.make(newState),\n    isPageReset: false\n  });\n  return this;\n};\n\n/**\n * Override the current state without triggering a change event.\n * Do not use this method unless you know what you are doing. (see the example\n * for a legit use case)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n * @example\n *  helper.on('change', function(state){\n *    // In this function you might want to find a way to store the state in the url/history\n *    updateYourURL(state)\n *  })\n *  window.onpopstate = function(event){\n *    // This is naive though as you should check if the state is really defined etc.\n *    helper.overrideStateWithoutTriggeringChangeEvent(event.state).search()\n *  }\n * @chainable\n */\nAlgoliaSearchHelper.prototype.overrideStateWithoutTriggeringChangeEvent = function (newState) {\n  this.state = new SearchParameters(newState);\n  return this;\n};\n\n/**\n * Check if an attribute has any numeric, conjunctive, disjunctive or hierarchical filters.\n * @param {string} attribute the name of the attribute\n * @return {boolean} true if the attribute is filtered by at least one value\n * @example\n * // hasRefinements works with numeric, conjunctive, disjunctive and hierarchical filters\n * helper.hasRefinements('price'); // false\n * helper.addNumericRefinement('price', '>', 100);\n * helper.hasRefinements('price'); // true\n *\n * helper.hasRefinements('color'); // false\n * helper.addFacetRefinement('color', 'blue');\n * helper.hasRefinements('color'); // true\n *\n * helper.hasRefinements('material'); // false\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * helper.hasRefinements('material'); // true\n *\n * helper.hasRefinements('categories'); // false\n * helper.toggleFacetRefinement('categories', 'kitchen > knife');\n * helper.hasRefinements('categories'); // true\n *\n */\nAlgoliaSearchHelper.prototype.hasRefinements = function (attribute) {\n  if (objectHasKeys(this.state.getNumericRefinements(attribute))) {\n    return true;\n  } else if (this.state.isConjunctiveFacet(attribute)) {\n    return this.state.isFacetRefined(attribute);\n  } else if (this.state.isDisjunctiveFacet(attribute)) {\n    return this.state.isDisjunctiveFacetRefined(attribute);\n  } else if (this.state.isHierarchicalFacet(attribute)) {\n    return this.state.isHierarchicalFacetRefined(attribute);\n  }\n\n  // there's currently no way to know that the user did call `addNumericRefinement` at some point\n  // thus we cannot distinguish if there once was a numeric refinement that was cleared\n  // so we will return false in every other situations to be consistent\n  // while what we should do here is throw because we did not find the attribute in any type\n  // of refinement\n  return false;\n};\n\n/**\n * Check if a value is excluded for a specific faceted attribute. If the value\n * is omitted then the function checks if there is any excluding refinements.\n *\n * @param  {string}  facet name of the attribute for used for faceting\n * @param  {string}  [value] optional value. If passed will test that this value\n * is filtering the given facet.\n * @return {boolean} true if refined\n * @example\n * helper.isExcludeRefined('color'); // false\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // false\n *\n * helper.addFacetExclusion('color', 'red');\n *\n * helper.isExcludeRefined('color'); // true\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // true\n */\nAlgoliaSearchHelper.prototype.isExcluded = function (facet, value) {\n  return this.state.isExcludeRefined(facet, value);\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}\n */\nAlgoliaSearchHelper.prototype.isDisjunctiveRefined = function (facet, value) {\n  return this.state.isDisjunctiveFacetRefined(facet, value);\n};\n\n/**\n * Check if the string is a currently filtering tag.\n * @param {string} tag tag to check\n * @return {boolean} true if the tag is currently refined\n */\nAlgoliaSearchHelper.prototype.hasTag = function (tag) {\n  return this.state.isTagRefined(tag);\n};\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasTag}\n */\nAlgoliaSearchHelper.prototype.isTagRefined = function () {\n  return this.hasTagRefinements.apply(this, arguments);\n};\n\n/**\n * Get the name of the currently used index.\n * @return {string} name of the index\n * @example\n * helper.setIndex('highestPrice_products').getIndex();\n * // returns 'highestPrice_products'\n */\nAlgoliaSearchHelper.prototype.getIndex = function () {\n  return this.state.index;\n};\nfunction getCurrentPage() {\n  return this.state.page;\n}\n\n/**\n * Get the currently selected page\n * @deprecated\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getCurrentPage = getCurrentPage;\n/**\n * Get the currently selected page\n * @function\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getPage = getCurrentPage;\n\n/**\n * Get all the tags currently set to filters the results.\n *\n * @return {string[]} The list of tags currently set.\n */\nAlgoliaSearchHelper.prototype.getTags = function () {\n  return this.state.tagRefinements;\n};\n\n/**\n * Get the list of refinements for a given attribute. This method works with\n * conjunctive, disjunctive, excluding and numerical filters.\n *\n * See also SearchResults#getRefinements\n *\n * @param {string} facetName attribute name used for faceting\n * @return {Array.<FacetRefinement|NumericRefinement>} All Refinement are objects that contain a value, and\n * a type. Numeric also contains an operator.\n * @example\n * helper.addNumericRefinement('price', '>', 100);\n * helper.getRefinements('price');\n * // [\n * //   {\n * //     \"value\": [\n * //       100\n * //     ],\n * //     \"operator\": \">\",\n * //     \"type\": \"numeric\"\n * //   }\n * // ]\n * @example\n * helper.addFacetRefinement('color', 'blue');\n * helper.addFacetExclusion('color', 'red');\n * helper.getRefinements('color');\n * // [\n * //   {\n * //     \"value\": \"blue\",\n * //     \"type\": \"conjunctive\"\n * //   },\n * //   {\n * //     \"value\": \"red\",\n * //     \"type\": \"exclude\"\n * //   }\n * // ]\n * @example\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * // [\n * //   {\n * //     \"value\": \"plastic\",\n * //     \"type\": \"disjunctive\"\n * //   }\n * // ]\n */\nAlgoliaSearchHelper.prototype.getRefinements = function (facetName) {\n  var refinements = [];\n  if (this.state.isConjunctiveFacet(facetName)) {\n    var conjRefinements = this.state.getConjunctiveRefinements(facetName);\n    conjRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'conjunctive'\n      });\n    });\n    var excludeRefinements = this.state.getExcludeRefinements(facetName);\n    excludeRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'exclude'\n      });\n    });\n  } else if (this.state.isDisjunctiveFacet(facetName)) {\n    var disjunctiveRefinements = this.state.getDisjunctiveRefinements(facetName);\n    disjunctiveRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'disjunctive'\n      });\n    });\n  }\n  var numericRefinements = this.state.getNumericRefinements(facetName);\n  Object.keys(numericRefinements).forEach(function (operator) {\n    var value = numericRefinements[operator];\n    refinements.push({\n      value: value,\n      operator: operator,\n      type: 'numeric'\n    });\n  });\n  return refinements;\n};\n\n/**\n * Return the current refinement for the (attribute, operator)\n * @param {string} attribute attribute in the record\n * @param {string} operator operator applied on the refined values\n * @return {Array.<number|number[]>} refined values\n */\nAlgoliaSearchHelper.prototype.getNumericRefinement = function (attribute, operator) {\n  return this.state.getNumericRefinement(attribute, operator);\n};\n\n/**\n * Get the current breadcrumb for a hierarchical facet, as an array\n * @param  {string} facetName Hierarchical facet name\n * @return {array.<string>} the path as an array of string\n */\nAlgoliaSearchHelper.prototype.getHierarchicalFacetBreadcrumb = function (facetName) {\n  return this.state.getHierarchicalFacetBreadcrumb(facetName);\n};\n\n// /////////// PRIVATE\n\n/**\n * Perform the underlying queries\n * @private\n * @param {object} options options for the query\n * @param {boolean} [options.onlyWithDerivedHelpers=false] if true, only the derived helpers will be queried\n * @return {undefined} does not return anything\n * @fires search\n * @fires result\n * @fires error\n */\nAlgoliaSearchHelper.prototype._search = function (options) {\n  var state = this.state;\n  var states = [];\n  var mainQueries = [];\n  if (!options.onlyWithDerivedHelpers) {\n    mainQueries = requestBuilder._getQueries(state.index, state);\n    states.push({\n      state: state,\n      queriesCount: mainQueries.length,\n      helper: this\n    });\n    this.emit('search', {\n      state: state,\n      results: this.lastResults\n    });\n  }\n  var derivedQueries = this.derivedHelpers.map(function (derivedHelper) {\n    var derivedState = derivedHelper.getModifiedState(state);\n    var derivedStateQueries = derivedState.index ? requestBuilder._getQueries(derivedState.index, derivedState) : [];\n    states.push({\n      state: derivedState,\n      queriesCount: derivedStateQueries.length,\n      helper: derivedHelper\n    });\n    derivedHelper.emit('search', {\n      state: derivedState,\n      results: derivedHelper.lastResults\n    });\n    return derivedStateQueries;\n  });\n  var queries = Array.prototype.concat.apply(mainQueries, derivedQueries);\n  var queryId = this._queryId++;\n  this._currentNbQueries++;\n  if (!queries.length) {\n    return Promise.resolve({\n      results: []\n    }).then(this._dispatchAlgoliaResponse.bind(this, states, queryId));\n  }\n  try {\n    this.client.search(queries).then(this._dispatchAlgoliaResponse.bind(this, states, queryId)).catch(this._dispatchAlgoliaError.bind(this, queryId));\n  } catch (error) {\n    // If we reach this part, we're in an internal error state\n    this.emit('error', {\n      error: error\n    });\n  }\n  return undefined;\n};\n\n/**\n * Transform the responses as sent by the server and transform them into a user\n * usable object that merge the results of all the batch requests. It will dispatch\n * over the different helper + derived helpers (when there are some).\n * @private\n * @param {array.<{SearchParameters, AlgoliaQueries, AlgoliaSearchHelper}>} states state used to generate the request\n * @param {number} queryId id of the current request\n * @param {object} content content of the response\n * @return {undefined}\n */\nAlgoliaSearchHelper.prototype._dispatchAlgoliaResponse = function (states, queryId, content) {\n  // @TODO remove the number of outdated queries discarded instead of just one\n\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n  var results = content.results.slice();\n  states.forEach(function (s) {\n    var state = s.state;\n    var queriesCount = s.queriesCount;\n    var helper = s.helper;\n    var specificResults = results.splice(0, queriesCount);\n    if (!state.index) {\n      helper.emit('result', {\n        results: null,\n        state: state\n      });\n      return;\n    }\n    helper.lastResults = new SearchResults(state, specificResults);\n    helper.emit('result', {\n      results: helper.lastResults,\n      state: state\n    });\n  });\n};\nAlgoliaSearchHelper.prototype._dispatchAlgoliaError = function (queryId, error) {\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n  this.emit('error', {\n    error: error\n  });\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n};\nAlgoliaSearchHelper.prototype.containsRefinement = function (query, facetFilters, numericFilters, tagFilters) {\n  return query || facetFilters.length !== 0 || numericFilters.length !== 0 || tagFilters.length !== 0;\n};\n\n/**\n * Test if there are some disjunctive refinements on the facet\n * @private\n * @param {string} facet the attribute to test\n * @return {boolean} true if there are refinements on this attribute\n */\nAlgoliaSearchHelper.prototype._hasDisjunctiveRefinements = function (facet) {\n  return this.state.disjunctiveRefinements[facet] && this.state.disjunctiveRefinements[facet].length > 0;\n};\nAlgoliaSearchHelper.prototype._change = function (event) {\n  var state = event.state;\n  var isPageReset = event.isPageReset;\n  if (state !== this.state) {\n    this.state = state;\n    this.emit('change', {\n      state: this.state,\n      results: this.lastResults,\n      isPageReset: isPageReset\n    });\n  }\n};\n\n/**\n * Clears the cache of the underlying Algolia client.\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n */\nAlgoliaSearchHelper.prototype.clearCache = function () {\n  if (this.client.clearCache) this.client.clearCache();\n  return this;\n};\n\n/**\n * Updates the internal client instance. If the reference of the clients\n * are equal then no update is actually done.\n * @param  {AlgoliaSearch} newClient an AlgoliaSearch client\n * @return {AlgoliaSearchHelper} Method is chainable, it returns itself\n */\nAlgoliaSearchHelper.prototype.setClient = function (newClient) {\n  if (this.client === newClient) return this;\n  if (typeof newClient.addAlgoliaAgent === 'function') {\n    newClient.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n  this.client = newClient;\n  return this;\n};\n\n/**\n * Gets the instance of the currently used client.\n * @return {AlgoliaSearch} the currently used client\n */\nAlgoliaSearchHelper.prototype.getClient = function () {\n  return this.client;\n};\n\n/**\n * Creates an derived instance of the Helper. A derived helper\n * is a way to request other indices synchronised with the lifecycle\n * of the main Helper. This mechanism uses the multiqueries feature\n * of Algolia to aggregate all the requests in a single network call.\n *\n * This method takes a function that is used to create a new SearchParameter\n * that will be used to create requests to Algolia. Those new requests\n * are created just before the `search` event. The signature of the function\n * is `SearchParameters -> SearchParameters`.\n *\n * This method returns a new DerivedHelper which is an EventEmitter\n * that fires the same `search`, `result` and `error` events. Those\n * events, however, will receive data specific to this DerivedHelper\n * and the SearchParameters that is returned by the call of the\n * parameter function.\n * @param {function} fn SearchParameters -> SearchParameters\n * @return {DerivedHelper} a new DerivedHelper\n */\nAlgoliaSearchHelper.prototype.derive = function (fn) {\n  var derivedHelper = new DerivedHelper(this, fn);\n  this.derivedHelpers.push(derivedHelper);\n  return derivedHelper;\n};\n\n/**\n * This method detaches a derived Helper from the main one. Prefer using the one from the\n * derived helper itself, to remove the event listeners too.\n * @private\n * @param  {DerivedHelper} derivedHelper the derived helper to detach\n * @return {undefined} nothing is returned\n * @throws Error\n */\nAlgoliaSearchHelper.prototype.detachDerivedHelper = function (derivedHelper) {\n  var pos = this.derivedHelpers.indexOf(derivedHelper);\n  if (pos === -1) throw new Error('Derived helper already detached');\n  this.derivedHelpers.splice(pos, 1);\n};\n\n/**\n * This method returns true if there is currently at least one on-going search.\n * @return {boolean} true if there is a search pending\n */\nAlgoliaSearchHelper.prototype.hasPendingRequests = function () {\n  return this._currentNbQueries > 0;\n};\n\n/**\n * @typedef AlgoliaSearchHelper.NumericRefinement\n * @type {object}\n * @property {number[]} value the numbers that are used for filtering this attribute with\n * the operator specified.\n * @property {string} operator the faceting data: value, number of entries\n * @property {string} type will be 'numeric'\n */\n\n/**\n * @typedef AlgoliaSearchHelper.FacetRefinement\n * @type {object}\n * @property {string} value the string use to filter the attribute\n * @property {string} type the type of filter: 'conjunctive', 'disjunctive', 'exclude'\n */\n\nmodule.exports = AlgoliaSearchHelper;","'use strict';\n\nmodule.exports = function compact(array) {\n  if (!Array.isArray(array)) {\n    return [];\n  }\n  return array.filter(Boolean);\n};","'use strict';\n\n// NOTE: this behaves like lodash/defaults, but doesn't mutate the target\n// it also preserve keys order\nmodule.exports = function defaultsPure() {\n  var sources = Array.prototype.slice.call(arguments);\n  return sources.reduceRight(function (acc, source) {\n    Object.keys(Object(source)).forEach(function (key) {\n      if (source[key] === undefined) {\n        return;\n      }\n      if (acc[key] !== undefined) {\n        // remove if already added, so that we can add it in correct order\n        // eslint-disable-next-line no-param-reassign\n        delete acc[key];\n      }\n      // eslint-disable-next-line no-param-reassign\n      acc[key] = source[key];\n    });\n    return acc;\n  }, {});\n};","'use strict';\n\n/**\n * Replaces a leading - with \\-\n * @private\n * @param {any} value the facet value to replace\n * @returns {any} the escaped facet value or the value if it was not a string\n */\nfunction escapeFacetValue(value) {\n  if (typeof value !== 'string') return value;\n  return String(value).replace(/^-/, '\\\\-');\n}\n\n/**\n * Replaces a leading \\- with -\n * @private\n * @param {any} value the escaped facet value\n * @returns {any} the unescaped facet value or the value if it was not a string\n */\nfunction unescapeFacetValue(value) {\n  if (typeof value !== 'string') return value;\n  return value.replace(/^\\\\-/, '-');\n}\nmodule.exports = {\n  escapeFacetValue: escapeFacetValue,\n  unescapeFacetValue: unescapeFacetValue\n};","'use strict';\n\n// @MAJOR can be replaced by native Array#find when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n  return undefined;\n};","'use strict';\n\n// @MAJOR can be replaced by native Array#findIndex when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n};","'use strict';\n\nvar find = require('./find');\n\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\nmodule.exports = function formatSort(sortBy, defaults) {\n  var defaultInstructions = (defaults || []).map(function (sort) {\n    return sort.split(':');\n  });\n  return sortBy.reduce(function preparePredicate(out, sort) {\n    var sortInstruction = sort.split(':');\n    var matchingDefault = find(defaultInstructions, function (defaultInstruction) {\n      return defaultInstruction[0] === sortInstruction[0];\n    });\n    if (sortInstruction.length > 1 || !matchingDefault) {\n      out[0].push(sortInstruction[0]);\n      out[1].push(sortInstruction[1]);\n      return out;\n    }\n    out[0].push(matchingDefault[0]);\n    out[1].push(matchingDefault[1]);\n    return out;\n  }, [[], []]);\n};","'use strict';\n\nfunction inherits(ctor, superCtor) {\n  // eslint-disable-next-line no-param-reassign\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\nmodule.exports = inherits;","'use strict';\n\nfunction intersection(arr1, arr2) {\n  return arr1.filter(function (value, index) {\n    return arr2.indexOf(value) > -1 && arr1.indexOf(value) === index /* skips duplicates */;\n  });\n}\n\nmodule.exports = intersection;","'use strict';\n\nfunction clone(value) {\n  if (typeof value === 'object' && value !== null) {\n    return _merge(Array.isArray(value) ? [] : {}, value);\n  }\n  return value;\n}\nfunction isObjectOrArrayOrFunction(value) {\n  return typeof value === 'function' || Array.isArray(value) || Object.prototype.toString.call(value) === '[object Object]';\n}\nfunction _merge(target, source) {\n  if (target === source) {\n    return target;\n  }\n  for (var key in source) {\n    if (!Object.prototype.hasOwnProperty.call(source, key) || key === '__proto__' || key === 'constructor') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    var sourceVal = source[key];\n    var targetVal = target[key];\n    if (typeof targetVal !== 'undefined' && typeof sourceVal === 'undefined') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (isObjectOrArrayOrFunction(targetVal) && isObjectOrArrayOrFunction(sourceVal)) {\n      // eslint-disable-next-line no-param-reassign\n      target[key] = _merge(targetVal, sourceVal);\n    } else {\n      // eslint-disable-next-line no-param-reassign\n      target[key] = clone(sourceVal);\n    }\n  }\n  return target;\n}\n\n/**\n * This method is like Object.assign, but recursively merges own and inherited\n * enumerable keyed properties of source objects into the destination object.\n *\n * NOTE: this behaves like lodash/merge, but:\n * - does mutate functions if they are a source\n * - treats non-plain objects as plain\n * - does not work for circular objects\n * - treats sparse arrays as sparse\n * - does not convert Array-like objects (Arguments, NodeLists, etc.) to arrays\n *\n * @param {Object} target The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n */\nfunction merge(target) {\n  if (!isObjectOrArrayOrFunction(target)) {\n    // eslint-disable-next-line no-param-reassign\n    target = {};\n  }\n  for (var i = 1, l = arguments.length; i < l; i++) {\n    var source = arguments[i];\n    if (isObjectOrArrayOrFunction(source)) {\n      _merge(target, source);\n    }\n  }\n  return target;\n}\nmodule.exports = merge;","'use strict';\n\nfunction objectHasKeys(obj) {\n  return obj && Object.keys(obj).length > 0;\n}\nmodule.exports = objectHasKeys;","'use strict';\n\n// https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source === null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key;\n  var i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    // eslint-disable-next-line no-continue\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nmodule.exports = _objectWithoutPropertiesLoose;","'use strict';\n\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined;\n    var valIsNull = value === null;\n    var othIsDefined = other !== undefined;\n    var othIsNull = other === null;\n    if (!othIsNull && value > other || valIsNull && othIsDefined || !valIsDefined) {\n      return 1;\n    }\n    if (!valIsNull && value < other || othIsNull && valIsDefined || !othIsDefined) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\n/**\n * @param {Array<object>} collection object with keys in attributes\n * @param {Array<string>} iteratees attributes\n * @param {Array<string>} orders asc | desc\n * @return {Array<object>} sorted collection\n */\nfunction orderBy(collection, iteratees, orders) {\n  if (!Array.isArray(collection)) {\n    return [];\n  }\n  if (!Array.isArray(orders)) {\n    // eslint-disable-next-line no-param-reassign\n    orders = [];\n  }\n  var result = collection.map(function (value, index) {\n    return {\n      criteria: iteratees.map(function (iteratee) {\n        return value[iteratee];\n      }),\n      index: index,\n      value: value\n    };\n  });\n  result.sort(function comparer(object, other) {\n    var index = -1;\n    while (++index < object.criteria.length) {\n      var res = compareAscending(object.criteria[index], other.criteria[index]);\n      if (res) {\n        if (index >= orders.length) {\n          return res;\n        }\n        if (orders[index] === 'desc') {\n          return -res;\n        }\n        return res;\n      }\n    }\n\n    // This ensures a stable sort in V8 and other engines.\n    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  });\n  return result.map(function (res) {\n    return res.value;\n  });\n}\nmodule.exports = orderBy;","'use strict';\n\nfunction valToNumber(v) {\n  if (typeof v === 'number') {\n    return v;\n  } else if (typeof v === 'string') {\n    return parseFloat(v);\n  } else if (Array.isArray(v)) {\n    return v.map(valToNumber);\n  }\n  throw new Error('The value should be a number, a parsable string or an array of those.');\n}\nmodule.exports = valToNumber;","'use strict';\n\nvar merge = require('./functions/merge');\nfunction sortObject(obj) {\n  return Object.keys(obj).sort(function (a, b) {\n    return a.localeCompare(b);\n  }).reduce(function (acc, curr) {\n    // eslint-disable-next-line no-param-reassign\n    acc[curr] = obj[curr];\n    return acc;\n  }, {});\n}\nvar requestBuilder = {\n  /**\n   * Get all the queries to send to the client, those queries can used directly\n   * with the Algolia client.\n   * @private\n   * @param  {string} index The name of the index\n   * @param  {SearchParameters} state The state from which to get the queries\n   * @return {object[]} The queries\n   */\n  _getQueries: function getQueries(index, state) {\n    var queries = [];\n\n    // One query for the hits\n    queries.push({\n      indexName: index,\n      params: requestBuilder._getHitsSearchParams(state)\n    });\n\n    // One for each disjunctive facets\n    state.getRefinedDisjunctiveFacets().forEach(function (refinedFacet) {\n      queries.push({\n        indexName: index,\n        params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet)\n      });\n    });\n\n    // More to get the parent levels of the hierarchical facets when refined\n    state.getRefinedHierarchicalFacets().forEach(function (refinedFacet) {\n      var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n      var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      // If we are deeper than level 0 (starting from `beer > IPA`)\n      // we want to get all parent values\n      if (currentRefinement.length > 0 && currentRefinement[0].split(separator).length > 1) {\n        // We generate a map of the filters we will use for our facet values queries\n        var filtersMap = currentRefinement[0].split(separator).slice(0, -1).reduce(function createFiltersMap(map, segment, level) {\n          return map.concat({\n            attribute: hierarchicalFacet.attributes[level],\n            value: level === 0 ? segment : [map[map.length - 1].value, segment].join(separator)\n          });\n        }, []);\n        filtersMap.forEach(function (filter, level) {\n          var params = requestBuilder._getDisjunctiveFacetSearchParams(state, filter.attribute, level === 0);\n\n          // Keep facet filters unrelated to current hierarchical attributes\n          function hasHierarchicalFacetFilter(value) {\n            return hierarchicalFacet.attributes.some(function (attribute) {\n              return attribute === value.split(':')[0];\n            });\n          }\n          var filteredFacetFilters = (params.facetFilters || []).reduce(function (acc, facetFilter) {\n            if (Array.isArray(facetFilter)) {\n              var filtered = facetFilter.filter(function (filterValue) {\n                return !hasHierarchicalFacetFilter(filterValue);\n              });\n              if (filtered.length > 0) {\n                acc.push(filtered);\n              }\n            }\n            if (typeof facetFilter === 'string' && !hasHierarchicalFacetFilter(facetFilter)) {\n              acc.push(facetFilter);\n            }\n            return acc;\n          }, []);\n          var parent = filtersMap[level - 1];\n          if (level > 0) {\n            params.facetFilters = filteredFacetFilters.concat(parent.attribute + ':' + parent.value);\n          } else {\n            params.facetFilters = filteredFacetFilters.length > 0 ? filteredFacetFilters : undefined;\n          }\n          queries.push({\n            indexName: index,\n            params: params\n          });\n        });\n      }\n    });\n    return queries;\n  },\n  /**\n   * Build search parameters used to fetch hits\n   * @private\n   * @param  {SearchParameters} state The state from which to get the queries\n   * @return {object.<string, any>} The search parameters for hits\n   */\n  _getHitsSearchParams: function _getHitsSearchParams(state) {\n    var facets = state.facets.concat(state.disjunctiveFacets).concat(requestBuilder._getHitsHierarchicalFacetsAttributes(state));\n    var facetFilters = requestBuilder._getFacetFilters(state);\n    var numericFilters = requestBuilder._getNumericFilters(state);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {\n      facets: facets.indexOf('*') > -1 ? ['*'] : facets,\n      tagFilters: tagFilters\n    };\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n    return sortObject(merge({}, state.getQueryParams(), additionalParams));\n  },\n  /**\n   * Build search parameters used to fetch a disjunctive facet\n   * @private\n   * @param  {SearchParameters} state The state from which to get the queries\n   * @param  {string} facet the associated facet name\n   * @param  {boolean} hierarchicalRootLevel ?? FIXME\n   * @return {object} The search parameters for a disjunctive facet\n   */\n  _getDisjunctiveFacetSearchParams: function _getDisjunctiveFacetSearchParams(state, facet, hierarchicalRootLevel) {\n    var facetFilters = requestBuilder._getFacetFilters(state, facet, hierarchicalRootLevel);\n    var numericFilters = requestBuilder._getNumericFilters(state, facet);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {\n      hitsPerPage: 0,\n      page: 0,\n      analytics: false,\n      clickAnalytics: false\n    };\n    if (tagFilters.length > 0) {\n      additionalParams.tagFilters = tagFilters;\n    }\n    var hierarchicalFacet = state.getHierarchicalFacetByName(facet);\n    if (hierarchicalFacet) {\n      additionalParams.facets = requestBuilder._getDisjunctiveHierarchicalFacetAttribute(state, hierarchicalFacet, hierarchicalRootLevel);\n    } else {\n      additionalParams.facets = facet;\n    }\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n    return sortObject(merge({}, state.getQueryParams(), additionalParams));\n  },\n  /**\n   * Return the numeric filters in an algolia request fashion\n   * @private\n   * @param {SearchParameters} state the state from which to get the filters\n   * @param {string} [facetName] the name of the attribute for which the filters should be excluded\n   * @return {string[]} the numeric filters in the algolia format\n   */\n  _getNumericFilters: function _getNumericFilters(state, facetName) {\n    if (state.numericFilters) {\n      return state.numericFilters;\n    }\n    var numericFilters = [];\n    Object.keys(state.numericRefinements).forEach(function (attribute) {\n      var operators = state.numericRefinements[attribute] || {};\n      Object.keys(operators).forEach(function (operator) {\n        var values = operators[operator] || [];\n        if (facetName !== attribute) {\n          values.forEach(function (value) {\n            if (Array.isArray(value)) {\n              var vs = value.map(function (v) {\n                return attribute + operator + v;\n              });\n              numericFilters.push(vs);\n            } else {\n              numericFilters.push(attribute + operator + value);\n            }\n          });\n        }\n      });\n    });\n    return numericFilters;\n  },\n  /**\n   * Return the tags filters depending on which format is used, either tagFilters or tagRefinements\n   * @private\n   * @param {SearchParameters} state the state from which to get the filters\n   * @return {string} Tag filters in a single string\n   */\n  _getTagFilters: function _getTagFilters(state) {\n    if (state.tagFilters) {\n      return state.tagFilters;\n    }\n    return state.tagRefinements.join(',');\n  },\n  /**\n   * Build facetFilters parameter based on current refinements. The array returned\n   * contains strings representing the facet filters in the algolia format.\n   * @private\n   * @param  {SearchParameters} state The state from which to get the queries\n   * @param  {string} [facet] if set, the current disjunctive facet\n   * @param  {boolean} [hierarchicalRootLevel] ?? FIXME\n   * @return {array.<string>} The facet filters in the algolia format\n   */\n  _getFacetFilters: function _getFacetFilters(state, facet, hierarchicalRootLevel) {\n    var facetFilters = [];\n    var facetsRefinements = state.facetsRefinements || {};\n    Object.keys(facetsRefinements).forEach(function (facetName) {\n      var facetValues = facetsRefinements[facetName] || [];\n      facetValues.forEach(function (facetValue) {\n        facetFilters.push(facetName + ':' + facetValue);\n      });\n    });\n    var facetsExcludes = state.facetsExcludes || {};\n    Object.keys(facetsExcludes).forEach(function (facetName) {\n      var facetValues = facetsExcludes[facetName] || [];\n      facetValues.forEach(function (facetValue) {\n        facetFilters.push(facetName + ':-' + facetValue);\n      });\n    });\n    var disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements || {};\n    Object.keys(disjunctiveFacetsRefinements).forEach(function (facetName) {\n      var facetValues = disjunctiveFacetsRefinements[facetName] || [];\n      if (facetName === facet || !facetValues || facetValues.length === 0) {\n        return;\n      }\n      var orFilters = [];\n      facetValues.forEach(function (facetValue) {\n        orFilters.push(facetName + ':' + facetValue);\n      });\n      facetFilters.push(orFilters);\n    });\n    var hierarchicalFacetsRefinements = state.hierarchicalFacetsRefinements || {};\n    Object.keys(hierarchicalFacetsRefinements).forEach(function (facetName) {\n      var facetValues = hierarchicalFacetsRefinements[facetName] || [];\n      var facetValue = facetValues[0];\n      if (facetValue === undefined) {\n        return;\n      }\n      var hierarchicalFacet = state.getHierarchicalFacetByName(facetName);\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n      var attributeToRefine;\n      var attributesIndex;\n\n      // we ask for parent facet values only when the `facet` is the current hierarchical facet\n      if (facet === facetName) {\n        // if we are at the root level already, no need to ask for facet values, we get them from\n        // the hits query\n        if (facetValue.indexOf(separator) === -1 || !rootPath && hierarchicalRootLevel === true || rootPath && rootPath.split(separator).length === facetValue.split(separator).length) {\n          return;\n        }\n        if (!rootPath) {\n          attributesIndex = facetValue.split(separator).length - 2;\n          facetValue = facetValue.slice(0, facetValue.lastIndexOf(separator));\n        } else {\n          attributesIndex = rootPath.split(separator).length - 1;\n          facetValue = rootPath;\n        }\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      } else {\n        attributesIndex = facetValue.split(separator).length - 1;\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      }\n      if (attributeToRefine) {\n        facetFilters.push([attributeToRefine + ':' + facetValue]);\n      }\n    });\n    return facetFilters;\n  },\n  _getHitsHierarchicalFacetsAttributes: function _getHitsHierarchicalFacetsAttributes(state) {\n    var out = [];\n    return state.hierarchicalFacets.reduce(\n    // ask for as much levels as there's hierarchical refinements\n    function getHitsAttributesForHierarchicalFacet(allAttributes, hierarchicalFacet) {\n      var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0];\n\n      // if no refinement, ask for root level\n      if (!hierarchicalRefinement) {\n        allAttributes.push(hierarchicalFacet.attributes[0]);\n        return allAttributes;\n      }\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n      var level = hierarchicalRefinement.split(separator).length;\n      var newAttributes = hierarchicalFacet.attributes.slice(0, level + 1);\n      return allAttributes.concat(newAttributes);\n    }, out);\n  },\n  _getDisjunctiveHierarchicalFacetAttribute: function _getDisjunctiveHierarchicalFacetAttribute(state, hierarchicalFacet, rootLevel) {\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n    if (rootLevel === true) {\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n      var attributeIndex = 0;\n      if (rootPath) {\n        attributeIndex = rootPath.split(separator).length;\n      }\n      return [hierarchicalFacet.attributes[attributeIndex]];\n    }\n    var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0] || '';\n    // if refinement is 'beers > IPA > Flying dog',\n    // then we want `facets: ['beers > IPA']` as disjunctive facet (parent level values)\n\n    var parentLevel = hierarchicalRefinement.split(separator).length - 1;\n    return hierarchicalFacet.attributes.slice(0, parentLevel + 1);\n  },\n  getSearchForFacetQuery: function getSearchForFacetQuery(facetName, query, maxFacetHits, state) {\n    var stateForSearchForFacetValues = state.isDisjunctiveFacet(facetName) ? state.clearRefinements(facetName) : state;\n    var searchForFacetSearchParameters = {\n      facetQuery: query,\n      facetName: facetName\n    };\n    if (typeof maxFacetHits === 'number') {\n      searchForFacetSearchParameters.maxFacetHits = maxFacetHits;\n    }\n    return sortObject(merge({}, requestBuilder._getHitsSearchParams(stateForSearchForFacetValues), searchForFacetSearchParameters));\n  }\n};\nmodule.exports = requestBuilder;","'use strict';\n\nmodule.exports = function isValidUserToken(userToken) {\n  if (userToken === null) {\n    return false;\n  }\n  return /^[a-zA-Z0-9_-]{1,64}$/.test(userToken);\n};","'use strict';\n\nmodule.exports = '3.13.3';","import createConnector from \"../core/createConnector.js\";\nimport { getResults } from \"../core/indexUtils.js\";\nimport { addAbsolutePositions, addQueryID } from \"../core/utils.js\";\n\n/**\n * connectHits connector provides the logic to create connected\n * components that will render the results retrieved from\n * Algolia.\n *\n * To configure the number of hits retrieved, use [HitsPerPage widget](widgets/HitsPerPage.html),\n * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or pass the hitsPerPage\n * prop to a [Configure](guide/Search_parameters.html) widget.\n *\n * **Warning:** you will need to use the **objectID** property available on every hit as a key\n * when iterating over them. This will ensure you have the best possible UI experience\n * especially on slow networks.\n * @name connectHits\n * @kind connector\n * @providedPropType {array.<object>} hits - the records that matched the search state\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, Highlight, connectHits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n * const CustomHits = connectHits(({ hits }) => (\n *   <div>\n *     {hits.map(hit =>\n *       <p key={hit.objectID}>\n *         <Highlight attribute=\"name\" hit={hit} />\n *       </p>\n *     )}\n *   </div>\n * ));\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <CustomHits />\n *   </InstantSearch>\n * );\n */\nexport default createConnector({\n  displayName: 'AlgoliaHits',\n  $$type: 'ais.hits',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    if (!results) {\n      return {\n        hits: []\n      };\n    }\n    var hitsWithPositions = addAbsolutePositions(results.hits, results.hitsPerPage, results.page);\n    var hitsWithPositionsAndQueryID = addQueryID(hitsWithPositions, results.queryID);\n    return {\n      hits: hitsWithPositionsAndQueryID\n    };\n  },\n  /*\n   * Hits needs to be considered as a widget to trigger a search,\n   * even if no other widgets are used.\n   *\n   * To be considered as a widget you need either:\n   * - getSearchParameters\n   * - getMetadata\n   * - transitionState\n   *\n   * See: createConnector.tsx\n   */\n  getSearchParameters: function getSearchParameters(searchParameters) {\n    return searchParameters;\n  }\n});","import { createContext } from 'react';\nexport var instantSearchContext = /*#__PURE__*/createContext({\n  onInternalStateUpdate: function onInternalStateUpdate() {\n    return undefined;\n  },\n  createHrefForState: function createHrefForState() {\n    return '#';\n  },\n  onSearchForFacetValues: function onSearchForFacetValues() {\n    return undefined;\n  },\n  onSearchStateChange: function onSearchStateChange() {\n    return undefined;\n  },\n  onSearchParameters: function onSearchParameters() {\n    return undefined;\n  },\n  store: {},\n  widgetsManager: {},\n  mainTargetedIndex: ''\n});\nvar InstantSearchConsumer = instantSearchContext.Consumer,\n  InstantSearchProvider = instantSearchContext.Provider;\nexport { InstantSearchConsumer, InstantSearchProvider };\nvar _createContext = /*#__PURE__*/createContext(undefined),\n  IndexConsumer = _createContext.Consumer,\n  IndexProvider = _createContext.Provider;\nexport { IndexConsumer, IndexProvider };","var _excluded = [\"contextValue\"];\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport React, { Component } from 'react';\nimport isEqual from 'react-fast-compare';\nimport { shallowEqual, getDisplayName, removeEmptyKey } from \"./utils.js\";\nimport { InstantSearchConsumer, IndexConsumer } from \"./context.js\";\n/**\n * Connectors are the HOC used to transform React components\n * into InstantSearch widgets.\n * In order to simplify the construction of such connectors\n * `createConnector` takes a description and transform it into\n * a connector.\n * @param {ConnectorDescription} connectorDesc the description of the connector\n * @return {Connector} a function that wraps a component into\n * an instantsearch connected one.\n */\nexport function createConnectorWithoutContext(connectorDesc) {\n  if (!connectorDesc.displayName) {\n    throw new Error('`createConnector` requires you to provide a `displayName` property.');\n  }\n  var isWidget = typeof connectorDesc.getSearchParameters === 'function' || typeof connectorDesc.getMetadata === 'function' || typeof connectorDesc.transitionState === 'function';\n  return function (Composed) {\n    var additionalWidgetProperties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var Connector = /*#__PURE__*/function (_Component) {\n      _inherits(Connector, _Component);\n      var _super = _createSuper(Connector);\n      function Connector(props) {\n        var _this;\n        _classCallCheck(this, Connector);\n        _this = _super.call(this, props);\n        _defineProperty(_assertThisInitialized(_this), \"unsubscribe\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"unregisterWidget\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"cleanupTimerRef\", null);\n        _defineProperty(_assertThisInitialized(_this), \"isUnmounting\", false);\n        _defineProperty(_assertThisInitialized(_this), \"state\", {\n          providedProps: _this.getProvidedProps(_this.props)\n        });\n        _defineProperty(_assertThisInitialized(_this), \"refine\", function () {\n          var _ref;\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          _this.props.contextValue.onInternalStateUpdate(\n          // refine will always be defined here because the prop is only given conditionally\n          (_ref = connectorDesc.refine).call.apply(_ref, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n        _defineProperty(_assertThisInitialized(_this), \"createURL\", function () {\n          var _ref2;\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n          return _this.props.contextValue.createHrefForState(\n          // refine will always be defined here because the prop is only given conditionally\n          (_ref2 = connectorDesc.refine).call.apply(_ref2, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n        _defineProperty(_assertThisInitialized(_this), \"searchForFacetValues\", function () {\n          var _ref3;\n          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            args[_key3] = arguments[_key3];\n          }\n          _this.props.contextValue.onSearchForFacetValues(\n          // searchForFacetValues will always be defined here because the prop is only given conditionally\n          (_ref3 = connectorDesc.searchForFacetValues).call.apply(_ref3, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n        if (connectorDesc.getSearchParameters) {\n          _this.props.contextValue.onSearchParameters(connectorDesc.getSearchParameters.bind(_assertThisInitialized(_this)), {\n            ais: _this.props.contextValue,\n            multiIndexContext: _this.props.indexContextValue\n          }, _this.props, connectorDesc.getMetadata && connectorDesc.getMetadata.bind(_assertThisInitialized(_this)), connectorDesc.displayName);\n        }\n        return _this;\n      }\n      _createClass(Connector, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n          if (this.cleanupTimerRef) {\n            clearTimeout(this.cleanupTimerRef);\n            this.cleanupTimerRef = null;\n          }\n          this.unsubscribe = this.props.contextValue.store.subscribe(function () {\n            if (!_this2.isUnmounting) {\n              _this2.setState({\n                providedProps: _this2.getProvidedProps(_this2.props)\n              });\n            }\n          });\n          if (isWidget) {\n            this.unregisterWidget = this.props.contextValue.widgetsManager.registerWidget(this);\n          }\n        }\n      }, {\n        key: \"shouldComponentUpdate\",\n        value: function shouldComponentUpdate(nextProps, nextState) {\n          if (typeof connectorDesc.shouldComponentUpdate === 'function') {\n            return connectorDesc.shouldComponentUpdate.call(this, this.props, nextProps, this.state, nextState);\n          }\n          var propsEqual = shallowEqual(this.props, nextProps);\n          if (this.state.providedProps === null || nextState.providedProps === null) {\n            if (this.state.providedProps === nextState.providedProps) {\n              return !propsEqual;\n            }\n            return true;\n          }\n          return !propsEqual || !shallowEqual(this.state.providedProps, nextState.providedProps);\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate(prevProps) {\n          if (!isEqual(prevProps, this.props)) {\n            this.setState({\n              providedProps: this.getProvidedProps(this.props)\n            });\n            if (isWidget) {\n              this.props.contextValue.widgetsManager.update();\n              if (typeof connectorDesc.transitionState === 'function') {\n                this.props.contextValue.onSearchStateChange(connectorDesc.transitionState.call(this, this.props, this.props.contextValue.store.getState().widgets, this.props.contextValue.store.getState().widgets));\n              }\n            }\n          }\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          var _this3 = this;\n          this.cleanupTimerRef = setTimeout(function () {\n            _this3.isUnmounting = true;\n            if (_this3.unsubscribe) {\n              _this3.unsubscribe();\n            }\n            if (_this3.unregisterWidget) {\n              _this3.unregisterWidget();\n              if (typeof connectorDesc.cleanUp === 'function') {\n                var nextState = connectorDesc.cleanUp.call(_this3, _this3.props, _this3.props.contextValue.store.getState().widgets);\n                _this3.props.contextValue.store.setState(_objectSpread(_objectSpread({}, _this3.props.contextValue.store.getState()), {}, {\n                  widgets: nextState\n                }));\n                _this3.props.contextValue.onSearchStateChange(removeEmptyKey(nextState));\n              }\n            }\n          });\n        }\n      }, {\n        key: \"getProvidedProps\",\n        value: function getProvidedProps(props) {\n          var _this$props$contextVa = this.props.contextValue.store.getState(),\n            widgets = _this$props$contextVa.widgets,\n            results = _this$props$contextVa.results,\n            resultsFacetValues = _this$props$contextVa.resultsFacetValues,\n            searching = _this$props$contextVa.searching,\n            searchingForFacetValues = _this$props$contextVa.searchingForFacetValues,\n            isSearchStalled = _this$props$contextVa.isSearchStalled,\n            metadata = _this$props$contextVa.metadata,\n            error = _this$props$contextVa.error;\n          var searchResults = {\n            results: results,\n            searching: searching,\n            searchingForFacetValues: searchingForFacetValues,\n            isSearchStalled: isSearchStalled,\n            error: error\n          };\n          return connectorDesc.getProvidedProps.call(this, props, widgets, searchResults, metadata,\n          // @MAJOR: move this attribute on the `searchResults` it doesn't\n          // makes sense to have it into a separate argument. The search\n          // flags are on the object why not the results?\n          resultsFacetValues);\n        }\n      }, {\n        key: \"getSearchParameters\",\n        value: function getSearchParameters(searchParameters) {\n          if (typeof connectorDesc.getSearchParameters === 'function') {\n            return connectorDesc.getSearchParameters.call(this, searchParameters, this.props, this.props.contextValue.store.getState().widgets);\n          }\n          return null;\n        }\n      }, {\n        key: \"getMetadata\",\n        value: function getMetadata(nextWidgetsState) {\n          if (typeof connectorDesc.getMetadata === 'function') {\n            return connectorDesc.getMetadata.call(this, this.props, nextWidgetsState);\n          }\n          return {};\n        }\n      }, {\n        key: \"transitionState\",\n        value: function transitionState(prevWidgetsState, nextWidgetsState) {\n          if (typeof connectorDesc.transitionState === 'function') {\n            return connectorDesc.transitionState.call(this, this.props, prevWidgetsState, nextWidgetsState);\n          }\n          return nextWidgetsState;\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props = this.props,\n            contextValue = _this$props.contextValue,\n            props = _objectWithoutProperties(_this$props, _excluded);\n          var providedProps = this.state.providedProps;\n          if (providedProps === null) {\n            return null;\n          }\n          var refineProps = typeof connectorDesc.refine === 'function' ? {\n            refine: this.refine,\n            createURL: this.createURL\n          } : {};\n          var searchForFacetValuesProps = typeof connectorDesc.searchForFacetValues === 'function' ? {\n            searchForItems: this.searchForFacetValues\n          } : {};\n          return /*#__PURE__*/React.createElement(Composed, _extends({}, props, providedProps, refineProps, searchForFacetValuesProps));\n        }\n      }]);\n      return Connector;\n    }(Component);\n    _defineProperty(Connector, \"displayName\", \"\".concat(connectorDesc.displayName, \"(\").concat(getDisplayName(Composed), \")\"));\n    _defineProperty(Connector, \"$$type\", connectorDesc.$$type);\n    _defineProperty(Connector, \"$$widgetType\", additionalWidgetProperties.$$widgetType);\n    _defineProperty(Connector, \"propTypes\", connectorDesc.propTypes);\n    _defineProperty(Connector, \"defaultProps\", connectorDesc.defaultProps);\n    _defineProperty(Connector, \"_connectorDesc\", connectorDesc);\n    return Connector;\n  };\n}\nvar createConnectorWithContext = function createConnectorWithContext(connectorDesc) {\n  return function (Composed, additionalWidgetProperties) {\n    var Connector = createConnectorWithoutContext(connectorDesc)(Composed, additionalWidgetProperties);\n    var ConnectorWrapper = function ConnectorWrapper(props) {\n      return /*#__PURE__*/React.createElement(InstantSearchConsumer, null, function (contextValue) {\n        return /*#__PURE__*/React.createElement(IndexConsumer, null, function (indexContextValue) {\n          return /*#__PURE__*/React.createElement(Connector, _extends({\n            contextValue: contextValue,\n            indexContextValue: indexContextValue\n          }, props));\n        });\n      });\n    };\n    return ConnectorWrapper;\n  };\n};\nexport default createConnectorWithContext;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { omit } from \"./utils.js\";\nexport function getIndexId(context) {\n  return hasMultipleIndices(context) ? context.multiIndexContext.targetedIndex : context.ais.mainTargetedIndex;\n}\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @returns {import('algoliasearch-helper').SearchResults} results\n */\nexport function getResults(searchResults, context) {\n  if (searchResults.results) {\n    if (searchResults.results.hits) {\n      return searchResults.results;\n    }\n    var indexId = getIndexId(context);\n    if (searchResults.results[indexId]) {\n      return searchResults.results[indexId];\n    }\n  }\n  return null;\n}\nexport function hasMultipleIndices(context) {\n  return context && context.multiIndexContext;\n}\nexport function refineValue(searchState, nextRefinement, context, resetPage, namespace) {\n  if (hasMultipleIndices(context)) {\n    var indexId = getIndexId(context);\n    return namespace ? refineMultiIndexWithNamespace(searchState, nextRefinement, indexId, resetPage, namespace) : refineMultiIndex(searchState, nextRefinement, indexId, resetPage);\n  } else {\n    // When we have a multi index page with shared widgets we should also\n    // reset their page to 1 if the resetPage is provided. Otherwise the\n    // indices will always be reset\n    // see: https://github.com/algolia/react-instantsearch/issues/310\n    // see: https://github.com/algolia/react-instantsearch/issues/637\n    if (searchState.indices && resetPage) {\n      Object.keys(searchState.indices).forEach(function (targetedIndex) {\n        searchState = refineValue(searchState, {\n          page: 1\n        }, {\n          multiIndexContext: {\n            targetedIndex: targetedIndex\n          }\n        }, true, namespace);\n      });\n    }\n    return namespace ? refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) : refineSingleIndex(searchState, nextRefinement, resetPage);\n  }\n}\nfunction refineMultiIndex(searchState, nextRefinement, indexId, resetPage) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  var state = searchState.indices && searchState.indices[indexId] ? _objectSpread(_objectSpread({}, searchState.indices), {}, _defineProperty({}, indexId, _objectSpread(_objectSpread(_objectSpread({}, searchState.indices[indexId]), nextRefinement), page))) : _objectSpread(_objectSpread({}, searchState.indices), {}, _defineProperty({}, indexId, _objectSpread(_objectSpread({}, nextRefinement), page)));\n  return _objectSpread(_objectSpread({}, searchState), {}, {\n    indices: state\n  });\n}\nfunction refineSingleIndex(searchState, nextRefinement, resetPage) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  return _objectSpread(_objectSpread(_objectSpread({}, searchState), nextRefinement), page);\n}\nfunction refineMultiIndexWithNamespace(searchState, nextRefinement, indexId, resetPage, namespace) {\n  var _objectSpread4;\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  var state = searchState.indices && searchState.indices[indexId] ? _objectSpread(_objectSpread({}, searchState.indices), {}, _defineProperty({}, indexId, _objectSpread(_objectSpread({}, searchState.indices[indexId]), {}, (_objectSpread4 = {}, _defineProperty(_objectSpread4, namespace, _objectSpread(_objectSpread({}, searchState.indices[indexId][namespace]), nextRefinement)), _defineProperty(_objectSpread4, \"page\", 1), _objectSpread4)))) : _objectSpread(_objectSpread({}, searchState.indices), {}, _defineProperty({}, indexId, _objectSpread(_defineProperty({}, namespace, nextRefinement), page)));\n  return _objectSpread(_objectSpread({}, searchState), {}, {\n    indices: state\n  });\n}\nfunction refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  return _objectSpread(_objectSpread({}, searchState), {}, _defineProperty({}, namespace, _objectSpread(_objectSpread({}, searchState[namespace]), nextRefinement)), page);\n}\nfunction getNamespaceAndAttributeName(id) {\n  var parts = id.match(/^([^.]*)\\.(.*)/);\n  var namespace = parts && parts[1];\n  var attributeName = parts && parts[2];\n  return {\n    namespace: namespace,\n    attributeName: attributeName\n  };\n}\nfunction hasRefinements(_ref) {\n  var multiIndex = _ref.multiIndex,\n    indexId = _ref.indexId,\n    namespace = _ref.namespace,\n    attributeName = _ref.attributeName,\n    id = _ref.id,\n    searchState = _ref.searchState;\n  if (multiIndex && namespace) {\n    return searchState.indices && searchState.indices[indexId] && searchState.indices[indexId][namespace] && Object.hasOwnProperty.call(searchState.indices[indexId][namespace], attributeName);\n  }\n  if (multiIndex) {\n    return searchState.indices && searchState.indices[indexId] && Object.hasOwnProperty.call(searchState.indices[indexId], id);\n  }\n  if (namespace) {\n    return searchState[namespace] && Object.hasOwnProperty.call(searchState[namespace], attributeName);\n  }\n  return Object.hasOwnProperty.call(searchState, id);\n}\nfunction getRefinements(_ref2) {\n  var multiIndex = _ref2.multiIndex,\n    indexId = _ref2.indexId,\n    namespace = _ref2.namespace,\n    attributeName = _ref2.attributeName,\n    id = _ref2.id,\n    searchState = _ref2.searchState;\n  if (multiIndex && namespace) {\n    return searchState.indices[indexId][namespace][attributeName];\n  }\n  if (multiIndex) {\n    return searchState.indices[indexId][id];\n  }\n  if (namespace) {\n    return searchState[namespace][attributeName];\n  }\n  return searchState[id];\n}\nexport function getCurrentRefinementValue(props, searchState, context, id, defaultValue) {\n  var indexId = getIndexId(context);\n  var _getNamespaceAndAttri = getNamespaceAndAttributeName(id),\n    namespace = _getNamespaceAndAttri.namespace,\n    attributeName = _getNamespaceAndAttri.attributeName;\n  var multiIndex = hasMultipleIndices(context);\n  var args = {\n    multiIndex: multiIndex,\n    indexId: indexId,\n    namespace: namespace,\n    attributeName: attributeName,\n    id: id,\n    searchState: searchState\n  };\n  var hasRefinementsValue = hasRefinements(args);\n  if (hasRefinementsValue) {\n    return getRefinements(args);\n  }\n  if (props.defaultRefinement) {\n    return props.defaultRefinement;\n  }\n  return defaultValue;\n}\nexport function cleanUpValue(searchState, context, id) {\n  var indexId = getIndexId(context);\n  var _getNamespaceAndAttri2 = getNamespaceAndAttributeName(id),\n    namespace = _getNamespaceAndAttri2.namespace,\n    attributeName = _getNamespaceAndAttri2.attributeName;\n  if (hasMultipleIndices(context) && Boolean(searchState.indices)) {\n    return cleanUpValueWithMultiIndex({\n      attribute: attributeName,\n      searchState: searchState,\n      indexId: indexId,\n      id: id,\n      namespace: namespace\n    });\n  }\n  return cleanUpValueWithSingleIndex({\n    attribute: attributeName,\n    searchState: searchState,\n    id: id,\n    namespace: namespace\n  });\n}\nfunction cleanUpValueWithSingleIndex(_ref3) {\n  var searchState = _ref3.searchState,\n    id = _ref3.id,\n    namespace = _ref3.namespace,\n    attribute = _ref3.attribute;\n  if (namespace) {\n    return _objectSpread(_objectSpread({}, searchState), {}, _defineProperty({}, namespace, omit(searchState[namespace], [attribute])));\n  }\n  return omit(searchState, [id]);\n}\nfunction cleanUpValueWithMultiIndex(_ref4) {\n  var searchState = _ref4.searchState,\n    indexId = _ref4.indexId,\n    id = _ref4.id,\n    namespace = _ref4.namespace,\n    attribute = _ref4.attribute;\n  var indexSearchState = searchState.indices[indexId];\n  if (namespace && indexSearchState) {\n    return _objectSpread(_objectSpread({}, searchState), {}, {\n      indices: _objectSpread(_objectSpread({}, searchState.indices), {}, _defineProperty({}, indexId, _objectSpread(_objectSpread({}, indexSearchState), {}, _defineProperty({}, namespace, omit(indexSearchState[namespace], [attribute])))))\n    });\n  }\n  if (indexSearchState) {\n    return _objectSpread(_objectSpread({}, searchState), {}, {\n      indices: _objectSpread(_objectSpread({}, searchState.indices), {}, _defineProperty({}, indexId, omit(indexSearchState, [id])))\n    });\n  }\n  return searchState;\n}","function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n// eslint-disable-next-line @typescript-eslint/unbound-method\nvar hasOwn = Object.prototype.hasOwnProperty;\n\n// From https://github.com/reactjs/react-redux/blob/master/src/utils/shallowEqual.js\nexport var shallowEqual = function shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n      return false;\n    }\n  }\n  return true;\n};\nexport var getDisplayName = function getDisplayName(Component) {\n  return Component.displayName || Component.name || 'UnknownComponent';\n};\nvar resolved = Promise.resolve();\nexport var defer = function defer(f) {\n  resolved.then(f);\n};\nvar isPlainObject = function isPlainObject(value) {\n  return _typeof(value) === 'object' && value !== null && !Array.isArray(value);\n};\nexport var removeEmptyKey = function removeEmptyKey(obj) {\n  Object.keys(obj).forEach(function (key) {\n    var value = obj[key];\n    if (!isPlainObject(value)) {\n      return;\n    }\n    if (!objectHasKeys(value)) {\n      delete obj[key];\n    } else {\n      removeEmptyKey(value);\n    }\n  });\n  return obj;\n};\nexport var removeEmptyArraysFromObject = function removeEmptyArraysFromObject(obj) {\n  Object.keys(obj).forEach(function (key) {\n    var value = obj[key];\n    if (Array.isArray(value) && value.length === 0) {\n      delete obj[key];\n    }\n  });\n  return obj;\n};\nexport function addAbsolutePositions(hits, hitsPerPage, page) {\n  return hits.map(function (hit, index) {\n    return _objectSpread(_objectSpread({}, hit), {}, {\n      __position: hitsPerPage * page + index + 1\n    });\n  });\n}\nexport function addQueryID(hits, queryID) {\n  if (!queryID) {\n    return hits;\n  }\n  return hits.map(function (hit) {\n    return _objectSpread(_objectSpread({}, hit), {}, {\n      __queryID: queryID\n    });\n  });\n}\nexport function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n  return undefined;\n}\nexport function objectHasKeys(object) {\n  return object && Object.keys(object).length > 0;\n}\n\n// https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\nexport function omit(source, excluded) {\n  if (source === null || source === undefined) {\n    return {};\n  }\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  for (var i = 0; i < sourceKeys.length; i++) {\n    var key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    target[key] = source[key];\n  }\n  return target;\n}\n\n/**\n * Retrieve the value at a path of the object:\n *\n * @example\n * getPropertyByPath(\n *   { test: { this: { function: [{ now: { everyone: true } }] } } },\n *   'test.this.function[0].now.everyone'\n * ); // true\n *\n * getPropertyByPath(\n *   { test: { this: { function: [{ now: { everyone: true } }] } } },\n *   ['test', 'this', 'function', 0, 'now', 'everyone']\n * ); // true\n *\n * @param object Source object to query\n * @param path either an array of properties, or a string form of the properties, separated by .\n */\nexport var getPropertyByPath = function getPropertyByPath(object, path) {\n  return (Array.isArray(path) ? path : path.replace(/\\[(\\d+)]/g, '.$1').split('.')).reduce(function (current, key) {\n    return current ? current[key] : undefined;\n  }, object);\n};\nexport function getObjectType(object) {\n  return Object.prototype.toString.call(object).slice(8, -1);\n}\nexport function unescapeFacetValue(value) {\n  return value.replace(/^\\\\-/, '-');\n}","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport React, { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { InstantSearchConsumer, IndexProvider } from \"../core/context.js\";\nfunction getIndexContext(props) {\n  return {\n    targetedIndex: props.indexId\n  };\n}\n/**\n * The component that allows you to apply widgets to a dedicated index. It's\n * useful if you want to build an interface that targets multiple indices.\n *\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, Index, SearchBox, Hits, Configure } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <Configure hitsPerPage={5} />\n *     <SearchBox />\n *     <Index indexName=\"instant_search\">\n *       <Hits />\n *     </Index>\n *     <Index indexName=\"bestbuy\">\n *       <Hits />\n *     </Index>\n *   </InstantSearch>\n * );\n */\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n  var _super = _createSuper(Index);\n  function Index(props) {\n    var _this;\n    _classCallCheck(this, Index);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      indexContext: getIndexContext(_this.props)\n    });\n    _defineProperty(_assertThisInitialized(_this), \"unregisterWidget\", void 0);\n    _this.props.contextValue.onSearchParameters(_this.getSearchParameters.bind(_assertThisInitialized(_this)), {\n      ais: _this.props.contextValue,\n      multiIndexContext: _this.state.indexContext\n    }, _this.props, undefined, Index.displayName);\n    return _this;\n  }\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.unregisterWidget = this.props.contextValue.widgetsManager.registerWidget(this);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.indexName !== prevProps.indexName) {\n        this.props.contextValue.widgetsManager.update();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (typeof this.unregisterWidget === 'function') {\n        this.unregisterWidget();\n      }\n    }\n  }, {\n    key: \"getSearchParameters\",\n    value: function getSearchParameters(searchParameters, props) {\n      return searchParameters.setIndex(this.props ? this.props.indexName : props.indexName);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var childrenCount = Children.count(this.props.children);\n      if (childrenCount === 0) {\n        return null;\n      }\n      return /*#__PURE__*/React.createElement(IndexProvider, {\n        value: this.state.indexContext\n      }, this.props.children);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props) {\n      return {\n        indexContext: getIndexContext(props)\n      };\n    }\n  }]);\n  return Index;\n}(Component);\n_defineProperty(Index, \"propTypes\", {\n  indexName: PropTypes.string.isRequired,\n  indexId: PropTypes.string.isRequired,\n  children: PropTypes.node\n});\n_defineProperty(Index, \"displayName\", 'AlgoliaIndex');\n_defineProperty(Index, \"$$type\", 'ais.index');\n_defineProperty(Index, \"$$widgetType\", 'ais.index');\nvar IndexWrapper = function IndexWrapper(props) {\n  var inferredIndexId = props.indexName;\n  return /*#__PURE__*/React.createElement(InstantSearchConsumer, null, function (contextValue) {\n    return /*#__PURE__*/React.createElement(Index, _extends({\n      contextValue: contextValue,\n      indexId: inferredIndexId\n    }, props));\n  });\n};\nexport var IndexComponentWithoutContext = Index;\nexport default IndexWrapper;","import { getPropertyByPath } from \"./utils.js\";\nexport var HIGHLIGHT_TAGS = {\n  highlightPreTag: \"<ais-highlight-0000000000>\",\n  highlightPostTag: \"</ais-highlight-0000000000>\"\n};\n\n/**\n * Parses an highlighted attribute into an array of objects with the string value, and\n * a boolean that indicated if this part is highlighted.\n *\n * @param {string} preTag - string used to identify the start of an highlighted value\n * @param {string} postTag - string used to identify the end of an highlighted value\n * @param {string} highlightedValue - highlighted attribute as returned by Algolia highlight feature\n * @return {object[]} - An array of {value: string, isHighlighted: boolean}.\n */\nfunction parseHighlightedAttribute(_ref) {\n  var preTag = _ref.preTag,\n    postTag = _ref.postTag,\n    _ref$highlightedValue = _ref.highlightedValue,\n    highlightedValue = _ref$highlightedValue === void 0 ? '' : _ref$highlightedValue;\n  var splitByPreTag = highlightedValue.split(preTag);\n  var firstValue = splitByPreTag.shift();\n  var elements = firstValue === '' ? [] : [{\n    value: firstValue,\n    isHighlighted: false\n  }];\n  if (postTag === preTag) {\n    var isHighlighted = true;\n    splitByPreTag.forEach(function (split) {\n      elements.push({\n        value: split,\n        isHighlighted: isHighlighted\n      });\n      isHighlighted = !isHighlighted;\n    });\n  } else {\n    splitByPreTag.forEach(function (split) {\n      var splitByPostTag = split.split(postTag);\n      elements.push({\n        value: splitByPostTag[0],\n        isHighlighted: true\n      });\n      if (splitByPostTag[1] !== '') {\n        elements.push({\n          value: splitByPostTag[1],\n          isHighlighted: false\n        });\n      }\n    });\n  }\n  return elements;\n}\n\n/**\n * Find an highlighted attribute given an `attribute` and an `highlightProperty`, parses it,\n * and provided an array of objects with the string value and a boolean if this\n * value is highlighted.\n *\n * In order to use this feature, highlight must be activated in the configuration of\n * the index. The `preTag` and `postTag` attributes are respectively highlightPreTag and\n * highlightPostTag in Algolia configuration.\n *\n * @param {string} preTag - string used to identify the start of an highlighted value\n * @param {string} postTag - string used to identify the end of an highlighted value\n * @param {string} highlightProperty - the property that contains the highlight structure in the results\n * @param {string} attribute - the highlighted attribute to look for\n * @param {object} hit - the actual hit returned by Algolia.\n * @return {object[]} - An array of {value: string, isHighlighted: boolean}.\n */\nexport function parseAlgoliaHit(_ref2) {\n  var _ref2$preTag = _ref2.preTag,\n    preTag = _ref2$preTag === void 0 ? '<em>' : _ref2$preTag,\n    _ref2$postTag = _ref2.postTag,\n    postTag = _ref2$postTag === void 0 ? '</em>' : _ref2$postTag,\n    highlightProperty = _ref2.highlightProperty,\n    attribute = _ref2.attribute,\n    hit = _ref2.hit;\n  if (!hit) throw new Error('`hit`, the matching record, must be provided');\n  var highlightObject = getPropertyByPath(hit[highlightProperty], attribute) || {};\n  if (Array.isArray(highlightObject)) {\n    return highlightObject.map(function (item) {\n      return parseHighlightedAttribute({\n        preTag: preTag,\n        postTag: postTag,\n        highlightedValue: item.value\n      });\n    });\n  }\n  return parseHighlightedAttribute({\n    preTag: preTag,\n    postTag: postTag,\n    highlightedValue: highlightObject.value\n  });\n}","export default '6.40.1';","var _excluded = [\"resultsFacetValues\"],\n  _excluded2 = [\"resultsFacetValues\"],\n  _excluded3 = [\"resultsFacetValues\"];\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport createWidgetsManager from \"./createWidgetsManager.js\";\nimport createStore from \"./createStore.js\";\nimport { HIGHLIGHT_TAGS } from \"./highlight.js\";\nimport { hasMultipleIndices } from \"./indexUtils.js\";\nimport { version as ReactVersion } from 'react';\nimport version from \"./version.js\";\nfunction addAlgoliaAgents(searchClient) {\n  if (typeof searchClient.addAlgoliaAgent === 'function') {\n    searchClient.addAlgoliaAgent(\"react (\".concat(ReactVersion, \")\"));\n    searchClient.addAlgoliaAgent(\"react-instantsearch (\".concat(version, \")\"));\n  }\n}\nvar isMultiIndexContext = function isMultiIndexContext(widget) {\n  return hasMultipleIndices({\n    ais: widget.props.contextValue,\n    multiIndexContext: widget.props.indexContextValue\n  });\n};\nvar isTargetedIndexEqualIndex = function isTargetedIndexEqualIndex(widget, indexId) {\n  return widget.props.indexContextValue.targetedIndex === indexId;\n};\n\n// Relying on the `indexId` is a bit brittle to detect the `Index` widget.\n// Since it's a class we could rely on `instanceof` or similar. We never\n// had an issue though. Works for now.\nvar isIndexWidget = function isIndexWidget(widget) {\n  return Boolean(widget.props.indexId);\n};\nvar isIndexWidgetEqualIndex = function isIndexWidgetEqualIndex(widget, indexId) {\n  return widget.props.indexId === indexId;\n};\nvar sortIndexWidgetsFirst = function sortIndexWidgetsFirst(firstWidget, secondWidget) {\n  var isFirstWidgetIndex = isIndexWidget(firstWidget);\n  var isSecondWidgetIndex = isIndexWidget(secondWidget);\n  if (isFirstWidgetIndex && !isSecondWidgetIndex) {\n    return -1;\n  }\n  if (!isFirstWidgetIndex && isSecondWidgetIndex) {\n    return 1;\n  }\n  return 0;\n};\n\n// This function is copied from the algoliasearch v4 API Client. If modified,\n// consider updating it also in `serializeQueryParameters` from `@algolia/transporter`.\nfunction serializeQueryParameters(parameters) {\n  var isObjectOrArray = function isObjectOrArray(value) {\n    return Object.prototype.toString.call(value) === '[object Object]' || Object.prototype.toString.call(value) === '[object Array]';\n  };\n  var encode = function encode(format) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    var i = 0;\n    return format.replace(/%s/g, function () {\n      return encodeURIComponent(args[i++]);\n    });\n  };\n  return Object.keys(parameters).map(function (key) {\n    return encode('%s=%s', key, isObjectOrArray(parameters[key]) ? JSON.stringify(parameters[key]) : parameters[key]);\n  }).join('&');\n}\n\n/**\n * Creates a new instance of the InstantSearchManager which controls the widgets and\n * trigger the search when the widgets are updated.\n * @param {string} indexName - the main index name\n * @param {object} initialState - initial widget state\n * @param {object} SearchParameters - optional additional parameters to send to the algolia API\n * @param {number} stalledSearchDelay - time (in ms) after the search is stalled\n * @return {InstantSearchManager} a new instance of InstantSearchManager\n */\nexport default function createInstantSearchManager(_ref) {\n  var indexName = _ref.indexName,\n    _ref$initialState = _ref.initialState,\n    initialState = _ref$initialState === void 0 ? {} : _ref$initialState,\n    searchClient = _ref.searchClient,\n    resultsState = _ref.resultsState,\n    stalledSearchDelay = _ref.stalledSearchDelay;\n  var helper = algoliasearchHelper(searchClient, indexName, _objectSpread({}, HIGHLIGHT_TAGS));\n  addAlgoliaAgents(searchClient);\n  helper.on('search', handleNewSearch).on('result', handleSearchSuccess({\n    indexId: indexName\n  })).on('error', handleSearchError);\n  var skip = false;\n  var stalledSearchTimer = null;\n  var initialSearchParameters = helper.state;\n  var searchCounter;\n  var widgetsManager = createWidgetsManager(onWidgetsUpdate);\n  hydrateSearchClient(searchClient, resultsState);\n  var store = createStore({\n    widgets: initialState,\n    metadata: hydrateMetadata(resultsState),\n    results: hydrateResultsState(resultsState),\n    error: null,\n    searching: false,\n    isSearchStalled: true,\n    searchingForFacetValues: false\n  });\n  function skipSearch() {\n    skip = true;\n  }\n  function updateClient(client) {\n    addAlgoliaAgents(client);\n    helper.setClient(client);\n    search();\n  }\n  function clearCache() {\n    helper.clearCache();\n    search();\n  }\n  function getMetadata(state) {\n    return widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getMetadata);\n    }).map(function (widget) {\n      return widget.getMetadata(state);\n    });\n  }\n  function getSearchParameters() {\n    var sharedParameters = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      return !isMultiIndexContext(widget) && !isIndexWidget(widget);\n    }).reduce(function (res, widget) {\n      return widget.getSearchParameters(res);\n    }, initialSearchParameters);\n    var mainParameters = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      var targetedIndexEqualMainIndex = isMultiIndexContext(widget) && isTargetedIndexEqualIndex(widget, indexName);\n      var subIndexEqualMainIndex = isIndexWidget(widget) && isIndexWidgetEqualIndex(widget, indexName);\n      return targetedIndexEqualMainIndex || subIndexEqualMainIndex;\n    })\n    // We have to sort the `Index` widgets first so the `index` parameter\n    // is correctly set in the `reduce` function for the following widgets\n    .sort(sortIndexWidgetsFirst).reduce(function (res, widget) {\n      return widget.getSearchParameters(res);\n    }, sharedParameters);\n    var derivedIndices = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      var targetedIndexNotEqualMainIndex = isMultiIndexContext(widget) && !isTargetedIndexEqualIndex(widget, indexName);\n      var subIndexNotEqualMainIndex = isIndexWidget(widget) && !isIndexWidgetEqualIndex(widget, indexName);\n      return targetedIndexNotEqualMainIndex || subIndexNotEqualMainIndex;\n    })\n    // We have to sort the `Index` widgets first so the `index` parameter\n    // is correctly set in the `reduce` function for the following widgets\n    .sort(sortIndexWidgetsFirst).reduce(function (indices, widget) {\n      var indexId = isMultiIndexContext(widget) ? widget.props.indexContextValue.targetedIndex : widget.props.indexId;\n      var widgets = indices[indexId] || [];\n      return _objectSpread(_objectSpread({}, indices), {}, _defineProperty({}, indexId, widgets.concat(widget)));\n    }, {});\n    var derivedParameters = Object.keys(derivedIndices).map(function (indexId) {\n      return {\n        parameters: derivedIndices[indexId].reduce(function (res, widget) {\n          return widget.getSearchParameters(res);\n        }, sharedParameters),\n        indexId: indexId\n      };\n    });\n    return {\n      mainParameters: mainParameters,\n      derivedParameters: derivedParameters\n    };\n  }\n  function search() {\n    if (!skip) {\n      var _getSearchParameters = getSearchParameters(helper.state),\n        mainParameters = _getSearchParameters.mainParameters,\n        derivedParameters = _getSearchParameters.derivedParameters;\n      searchCounter = derivedParameters.length + 1;\n\n      // We have to call `slice` because the method `detach` on the derived\n      // helpers mutates the value `derivedHelpers`. The `forEach` loop does\n      // not iterate on each value and we're not able to correctly clear the\n      // previous derived helpers (memory leak + useless requests).\n      helper.derivedHelpers.slice().forEach(function (derivedHelper) {\n        // Since we detach the derived helpers on **every** new search they\n        // won't receive intermediate results in case of a stalled search.\n        // Only the last result is dispatched by the derived helper because\n        // they are not detached yet:\n        //\n        // - a -> main helper receives results\n        // - ap -> main helper receives results\n        // - app -> main helper + derived helpers receive results\n        //\n        // The quick fix is to avoid to detach them on search but only once they\n        // received the results. But it means that in case of a stalled search\n        // all the derived helpers not detached yet register a new search inside\n        // the helper. The number grows fast in case of a bad network and it's\n        // not deterministic.\n        derivedHelper.detach();\n      });\n      derivedParameters.forEach(function (_ref2) {\n        var indexId = _ref2.indexId,\n          parameters = _ref2.parameters;\n        var derivedHelper = helper.derive(function () {\n          return parameters;\n        });\n        derivedHelper.on('result', handleSearchSuccess({\n          indexId: indexId\n        })).on('error', handleSearchError);\n      });\n      helper.setState(mainParameters);\n      helper.search();\n    }\n  }\n  function handleSearchSuccess(_ref3) {\n    var indexId = _ref3.indexId;\n    return function (event) {\n      searchCounter--;\n      var state = store.getState();\n      var isDerivedHelpersEmpty = !helper.derivedHelpers.length;\n      var results = state.results ? state.results : {};\n\n      // Switching from mono index to multi index and vice versa must reset the\n      // results to an empty object, otherwise we keep reference of stalled and\n      // unused results.\n      results = !isDerivedHelpersEmpty && results.getFacetByName ? {} : results;\n      if (!isDerivedHelpersEmpty) {\n        results = _objectSpread(_objectSpread({}, results), {}, _defineProperty({}, indexId, event.results));\n      } else {\n        results = event.results;\n      }\n      var currentState = store.getState();\n      var nextIsSearchStalled = currentState.isSearchStalled;\n      if (!helper.hasPendingRequests()) {\n        clearTimeout(stalledSearchTimer);\n        stalledSearchTimer = null;\n        nextIsSearchStalled = false;\n      }\n      var resultsFacetValues = currentState.resultsFacetValues,\n        partialState = _objectWithoutProperties(currentState, _excluded);\n      store.setState(_objectSpread(_objectSpread({}, partialState), {}, {\n        results: results,\n        isSearchStalled: nextIsSearchStalled,\n        searching: searchCounter > 0,\n        error: null\n      }));\n    };\n  }\n  function handleSearchError(_ref4) {\n    var error = _ref4.error;\n    var currentState = store.getState();\n    var nextIsSearchStalled = currentState.isSearchStalled;\n    if (!helper.hasPendingRequests()) {\n      clearTimeout(stalledSearchTimer);\n      nextIsSearchStalled = false;\n    }\n    var resultsFacetValues = currentState.resultsFacetValues,\n      partialState = _objectWithoutProperties(currentState, _excluded2);\n    store.setState(_objectSpread(_objectSpread({}, partialState), {}, {\n      isSearchStalled: nextIsSearchStalled,\n      error: error,\n      searching: false\n    }));\n  }\n  function handleNewSearch() {\n    if (!stalledSearchTimer) {\n      stalledSearchTimer = setTimeout(function () {\n        var _store$getState = store.getState(),\n          resultsFacetValues = _store$getState.resultsFacetValues,\n          partialState = _objectWithoutProperties(_store$getState, _excluded3);\n        store.setState(_objectSpread(_objectSpread({}, partialState), {}, {\n          isSearchStalled: true\n        }));\n      }, stalledSearchDelay);\n    }\n  }\n  function hydrateSearchClient(client, results) {\n    if (!results) {\n      return;\n    }\n\n    // Disable cache hydration on:\n    // - Algoliasearch API Client < v4 with cache disabled\n    // - Third party clients (detected by the `addAlgoliaAgent` function missing)\n\n    if ((!client.transporter || client._cacheHydrated) && (!client._useCache || typeof client.addAlgoliaAgent !== 'function')) {\n      return;\n    }\n\n    // Algoliasearch API Client >= v4\n    // To hydrate the client we need to populate the cache with the data from\n    // the server (done in `hydrateSearchClientWithMultiIndexRequest` or\n    // `hydrateSearchClientWithSingleIndexRequest`). But since there is no way\n    // for us to compute the key the same way as `algoliasearch-client` we need\n    // to populate it on a custom key and override the `search` method to\n    // search on it first.\n    if (client.transporter && !client._cacheHydrated) {\n      client._cacheHydrated = true;\n      var baseMethod = client.search;\n      client.search = function (requests) {\n        for (var _len2 = arguments.length, methodArgs = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          methodArgs[_key2 - 1] = arguments[_key2];\n        }\n        var requestsWithSerializedParams = requests.map(function (request) {\n          return _objectSpread(_objectSpread({}, request), {}, {\n            params: serializeQueryParameters(request.params)\n          });\n        });\n        return client.transporter.responsesCache.get({\n          method: 'search',\n          args: [requestsWithSerializedParams].concat(methodArgs)\n        }, function () {\n          return baseMethod.apply(void 0, [requests].concat(methodArgs));\n        });\n      };\n    }\n    if (Array.isArray(results.results)) {\n      hydrateSearchClientWithMultiIndexRequest(client, results.results);\n      return;\n    }\n    hydrateSearchClientWithSingleIndexRequest(client, results);\n  }\n  function hydrateSearchClientWithMultiIndexRequest(client, results) {\n    // Algoliasearch API Client >= v4\n    // Populate the cache with the data from the server\n    if (client.transporter) {\n      client.transporter.responsesCache.set({\n        method: 'search',\n        args: [results.reduce(function (acc, result) {\n          return acc.concat(result.rawResults.map(function (request) {\n            return {\n              indexName: request.index,\n              params: request.params\n            };\n          }));\n        }, [])]\n      }, {\n        results: results.reduce(function (acc, result) {\n          return acc.concat(result.rawResults);\n        }, [])\n      });\n      return;\n    }\n\n    // Algoliasearch API Client < v4\n    // Prior to client v4 we didn't have a proper API to hydrate the client\n    // cache from the outside. The following code populates the cache with\n    // a single-index result. You can find more information about the\n    // computation of the key inside the client (see link below).\n    // https://github.com/algolia/algoliasearch-client-javascript/blob/c27e89ff92b2a854ae6f40dc524bffe0f0cbc169/src/AlgoliaSearchCore.js#L232-L240\n    var key = \"/1/indexes/*/queries_body_\".concat(JSON.stringify({\n      requests: results.reduce(function (acc, result) {\n        return acc.concat(result.rawResults.map(function (request) {\n          return {\n            indexName: request.index,\n            params: request.params\n          };\n        }));\n      }, [])\n    }));\n    client.cache = _objectSpread(_objectSpread({}, client.cache), {}, _defineProperty({}, key, JSON.stringify({\n      results: results.reduce(function (acc, result) {\n        return acc.concat(result.rawResults);\n      }, [])\n    })));\n  }\n  function hydrateSearchClientWithSingleIndexRequest(client, results) {\n    // Algoliasearch API Client >= v4\n    // Populate the cache with the data from the server\n    if (client.transporter) {\n      client.transporter.responsesCache.set({\n        method: 'search',\n        args: [results.rawResults.map(function (request) {\n          return {\n            indexName: request.index,\n            params: request.params\n          };\n        })]\n      }, {\n        results: results.rawResults\n      });\n      return;\n    }\n    // Algoliasearch API Client < v4\n    // Prior to client v4 we didn't have a proper API to hydrate the client\n    // cache from the outside. The following code populates the cache with\n    // a single-index result. You can find more information about the\n    // computation of the key inside the client (see link below).\n    // https://github.com/algolia/algoliasearch-client-javascript/blob/c27e89ff92b2a854ae6f40dc524bffe0f0cbc169/src/AlgoliaSearchCore.js#L232-L240\n    var key = \"/1/indexes/*/queries_body_\".concat(JSON.stringify({\n      requests: results.rawResults.map(function (request) {\n        return {\n          indexName: request.index,\n          params: request.params\n        };\n      })\n    }));\n    client.cache = _objectSpread(_objectSpread({}, client.cache), {}, _defineProperty({}, key, JSON.stringify({\n      results: results.rawResults\n    })));\n  }\n  function hydrateResultsState(results) {\n    if (!results) {\n      return null;\n    }\n    if (Array.isArray(results.results)) {\n      return results.results.reduce(function (acc, result) {\n        return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, result._internalIndexId, new algoliasearchHelper.SearchResults(new algoliasearchHelper.SearchParameters(result.state), result.rawResults)));\n      }, {});\n    }\n    return new algoliasearchHelper.SearchResults(new algoliasearchHelper.SearchParameters(results.state), results.rawResults);\n  }\n\n  // Called whenever a widget has been rendered with new props.\n  function onWidgetsUpdate() {\n    var metadata = getMetadata(store.getState().widgets);\n    store.setState(_objectSpread(_objectSpread({}, store.getState()), {}, {\n      metadata: metadata,\n      searching: true\n    }));\n\n    // Since the `getSearchParameters` method of widgets also depends on props,\n    // the result search parameters might have changed.\n    search();\n  }\n  function transitionState(nextSearchState) {\n    var searchState = store.getState().widgets;\n    return widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.transitionState);\n    }).reduce(function (res, widget) {\n      return widget.transitionState(searchState, res);\n    }, nextSearchState);\n  }\n  function onExternalStateUpdate(nextSearchState) {\n    var metadata = getMetadata(nextSearchState);\n    store.setState(_objectSpread(_objectSpread({}, store.getState()), {}, {\n      widgets: nextSearchState,\n      metadata: metadata,\n      searching: true\n    }));\n    search();\n  }\n  function onSearchForFacetValues(_ref5) {\n    var facetName = _ref5.facetName,\n      query = _ref5.query,\n      _ref5$maxFacetHits = _ref5.maxFacetHits,\n      maxFacetHits = _ref5$maxFacetHits === void 0 ? 10 : _ref5$maxFacetHits;\n    // The values 1, 100 are the min / max values that the engine accepts.\n    // see: https://www.algolia.com/doc/api-reference/api-parameters/maxFacetHits\n    var maxFacetHitsWithinRange = Math.max(1, Math.min(maxFacetHits, 100));\n    store.setState(_objectSpread(_objectSpread({}, store.getState()), {}, {\n      searchingForFacetValues: true\n    }));\n    helper.searchForFacetValues(facetName, query, maxFacetHitsWithinRange).then(function (content) {\n      var _objectSpread7;\n      store.setState(_objectSpread(_objectSpread({}, store.getState()), {}, {\n        error: null,\n        searchingForFacetValues: false,\n        resultsFacetValues: _objectSpread(_objectSpread({}, store.getState().resultsFacetValues), {}, (_objectSpread7 = {}, _defineProperty(_objectSpread7, facetName, content.facetHits), _defineProperty(_objectSpread7, \"query\", query), _objectSpread7))\n      }));\n    }, function (error) {\n      store.setState(_objectSpread(_objectSpread({}, store.getState()), {}, {\n        searchingForFacetValues: false,\n        error: error\n      }));\n    }).catch(function (error) {\n      // Since setState is synchronous, any error that occurs in the render of a\n      // component will be swallowed by this promise.\n      // This is a trick to make the error show up correctly in the console.\n      // See http://stackoverflow.com/a/30741722/969302\n      setTimeout(function () {\n        throw error;\n      });\n    });\n  }\n  function updateIndex(newIndex) {\n    initialSearchParameters = initialSearchParameters.setIndex(newIndex);\n    // No need to trigger a new search here as the widgets will also update and trigger it if needed.\n  }\n\n  function getWidgetsIds() {\n    return store.getState().metadata.reduce(function (res, meta) {\n      return typeof meta.id !== 'undefined' ? res.concat(meta.id) : res;\n    }, []);\n  }\n  return {\n    store: store,\n    widgetsManager: widgetsManager,\n    getWidgetsIds: getWidgetsIds,\n    getSearchParameters: getSearchParameters,\n    onSearchForFacetValues: onSearchForFacetValues,\n    onExternalStateUpdate: onExternalStateUpdate,\n    transitionState: transitionState,\n    updateClient: updateClient,\n    updateIndex: updateIndex,\n    clearCache: clearCache,\n    skipSearch: skipSearch\n  };\n}\nfunction hydrateMetadata(resultsState) {\n  if (!resultsState) {\n    return [];\n  }\n\n  // add a value noop, which gets replaced once the widgets are mounted\n  return resultsState.metadata.map(function (datum) {\n    return _objectSpread(_objectSpread({\n      value: function value() {\n        return {};\n      }\n    }, datum), {}, {\n      items: datum.items && datum.items.map(function (item) {\n        return _objectSpread(_objectSpread({\n          value: function value() {\n            return {};\n          }\n        }, item), {}, {\n          items: item.items && item.items.map(function (nestedItem) {\n            return _objectSpread({\n              value: function value() {\n                return {};\n              }\n            }, nestedItem);\n          })\n        });\n      })\n    });\n  });\n}","import { defer } from \"./utils.js\";\nexport default function createWidgetsManager(onWidgetsUpdate) {\n  var widgets = [];\n  // Is an update scheduled?\n  var scheduled = false;\n\n  // The state manager's updates need to be batched since more than one\n  // component can register or unregister widgets during the same tick.\n  function scheduleUpdate() {\n    if (scheduled) {\n      return;\n    }\n    scheduled = true;\n    defer(function () {\n      scheduled = false;\n      onWidgetsUpdate();\n    });\n  }\n  return {\n    registerWidget: function registerWidget(widget) {\n      widgets.push(widget);\n      scheduleUpdate();\n      return function unregisterWidget() {\n        widgets.splice(widgets.indexOf(widget), 1);\n        scheduleUpdate();\n      };\n    },\n    update: scheduleUpdate,\n    getWidgets: function getWidgets() {\n      return widgets;\n    }\n  };\n}","export default function createStore(initialState) {\n  var state = initialState;\n  var listeners = [];\n  return {\n    getState: function getState() {\n      return state;\n    },\n    setState: function setState(nextState) {\n      state = nextState;\n      listeners.forEach(function (listener) {\n        return listener();\n      });\n    },\n    subscribe: function subscribe(listener) {\n      listeners.push(listener);\n      return function unsubscribe() {\n        listeners.splice(listeners.indexOf(listener), 1);\n      };\n    }\n  };\n}","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nexport function isMetadataEnabled() {\n  return (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === 'object' && _typeof(window.navigator) === 'object' && typeof window.navigator.userAgent === 'string' && window.navigator.userAgent.includes('Algolia Crawler') && _typeof(window.document) === 'object';\n}\nexport function getMetadataPayload(widgets, searchClient) {\n  var internalProps = ['contextValue', 'indexContextValue'];\n  var widgetsPayload = widgets.map(function (_ref) {\n    var props = _ref.props,\n      constructor = _ref.constructor;\n    var _ref2 = constructor._connectorDesc || {},\n      _ref2$defaultProps = _ref2.defaultProps,\n      defaultProps = _ref2$defaultProps === void 0 ? {} : _ref2$defaultProps,\n      _ref2$displayName = _ref2.displayName,\n      displayName = _ref2$displayName === void 0 ? constructor.displayName : _ref2$displayName;\n    return {\n      displayName: displayName,\n      $$type: constructor.$$type,\n      $$widgetType: constructor.$$widgetType,\n      params: Object.keys(props).filter(function (prop) {\n        return !internalProps.includes(prop) && defaultProps[prop] !== props[prop] && props[prop] !== undefined;\n      })\n    };\n  });\n  var client = searchClient;\n  var ua = client.transporter && client.transporter.userAgent ? client.transporter.userAgent.value : client._ua;\n  return {\n    ua: ua,\n    widgets: widgetsPayload\n  };\n}\nexport function injectMetadata(widgets, searchClient) {\n  var payloadContainer = document.createElement('meta');\n  var refNode = document.querySelector('head');\n  payloadContainer.name = 'algolia:metadata';\n  var payload = getMetadataPayload(widgets, searchClient);\n  payloadContainer.content = JSON.stringify(payload);\n  refNode.appendChild(payloadContainer);\n}","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport React, { Component, Children } from 'react';\nimport isEqual from 'react-fast-compare';\nimport PropTypes from 'prop-types';\nimport createInstantSearchManager from \"../core/createInstantSearchManager.js\";\nimport { InstantSearchProvider } from \"../core/context.js\";\nimport { isMetadataEnabled, injectMetadata } from \"../core/metadata.js\";\nfunction isControlled(props) {\n  return Boolean(props.searchState);\n}\n\n/**\n * @description\n * `<InstantSearch>` is the root component of all React InstantSearch implementations.\n * It provides all the connected components (aka widgets) a means to interact\n * with the searchState.\n * @kind widget\n * @name <InstantSearch>\n * @requirements You will need to have an Algolia account to be able to use this widget.\n * [Create one now](https://www.algolia.com/users/sign_up).\n * @propType {string} indexName - Main index in which to search.\n * @propType {boolean} [refresh=false] - Flag to activate when the cache needs to be cleared so that the front-end is updated when a change occurs in the index.\n * @propType {object} [searchClient] - Provide a custom search client.\n * @propType {func} [onSearchStateChange] - Function to be called everytime a new search is done. Useful for [URL Routing](guide/Routing.html).\n * @propType {object} [searchState] - Object to inject some search state. Switches the InstantSearch component in controlled mode. Useful for [URL Routing](guide/Routing.html).\n * @propType {func} [createURL] - Function to call when creating links, useful for [URL Routing](guide/Routing.html).\n * @propType {SearchResults|SearchResults[]} [resultsState] - Use this to inject the results that will be used at first rendering. Those results are found by using the `findResultsState` function. Useful for [Server Side Rendering](guide/Server-side_rendering.html).\n * @propType {number} [stalledSearchDelay=200] - The amount of time before considering that the search takes too much time. The time is expressed in milliseconds.\n * @propType {{ Root: string|function, props: object }} [root] - Use this to customize the root element. Default value: `{ Root: 'div' }`\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox />\n *     <Hits />\n *   </InstantSearch>\n * );\n */\nvar InstantSearch = /*#__PURE__*/function (_Component) {\n  _inherits(InstantSearch, _Component);\n  var _super = _createSuper(InstantSearch);\n  function InstantSearch(props) {\n    var _this;\n    _classCallCheck(this, InstantSearch);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"cleanupTimerRef\", null);\n    _defineProperty(_assertThisInitialized(_this), \"isUnmounting\", false);\n    var instantSearchManager = createInstantSearchManager({\n      indexName: _this.props.indexName,\n      searchClient: _this.props.searchClient,\n      initialState: _this.props.searchState || {},\n      resultsState: _this.props.resultsState,\n      stalledSearchDelay: _this.props.stalledSearchDelay\n    });\n    var contextValue = {\n      store: instantSearchManager.store,\n      widgetsManager: instantSearchManager.widgetsManager,\n      mainTargetedIndex: _this.props.indexName,\n      onInternalStateUpdate: _this.onWidgetsInternalStateUpdate.bind(_assertThisInitialized(_this)),\n      createHrefForState: _this.createHrefForState.bind(_assertThisInitialized(_this)),\n      onSearchForFacetValues: _this.onSearchForFacetValues.bind(_assertThisInitialized(_this)),\n      onSearchStateChange: _this.onSearchStateChange.bind(_assertThisInitialized(_this)),\n      onSearchParameters: _this.onSearchParameters.bind(_assertThisInitialized(_this))\n    };\n    _this.state = {\n      isControlled: isControlled(_this.props),\n      instantSearchManager: instantSearchManager,\n      contextValue: contextValue\n    };\n    return _this;\n  }\n  _createClass(InstantSearch, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevIsControlled = isControlled(prevProps);\n      if (prevIsControlled && !this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being controlled to uncontrolled\");\n      }\n      if (!prevIsControlled && this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being uncontrolled to controlled\");\n      }\n      if (this.props.refresh !== prevProps.refresh && this.props.refresh) {\n        this.state.instantSearchManager.clearCache();\n      }\n      if (prevProps.indexName !== this.props.indexName) {\n        this.state.instantSearchManager.updateIndex(this.props.indexName);\n      }\n      if (prevProps.searchClient !== this.props.searchClient) {\n        this.state.instantSearchManager.updateClient(this.props.searchClient);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.cleanupTimerRef) {\n        clearTimeout(this.cleanupTimerRef);\n        this.cleanupTimerRef = null;\n      }\n      if (isMetadataEnabled()) {\n        injectMetadata(this.state.instantSearchManager.widgetsManager.getWidgets(), this.props.searchClient);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this2 = this;\n      this.cleanupTimerRef = setTimeout(function () {\n        _this2.isUnmounting = true;\n        _this2.state.instantSearchManager.skipSearch();\n      });\n    }\n  }, {\n    key: \"createHrefForState\",\n    value: function createHrefForState(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      return this.state.isControlled && this.props.createURL ? this.props.createURL(searchState, this.getKnownKeys()) : '#';\n    }\n  }, {\n    key: \"onWidgetsInternalStateUpdate\",\n    value: function onWidgetsInternalStateUpdate(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      this.onSearchStateChange(searchState);\n      if (!this.state.isControlled) {\n        this.state.instantSearchManager.onExternalStateUpdate(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchStateChange\",\n    value: function onSearchStateChange(searchState) {\n      if (this.props.onSearchStateChange && !this.isUnmounting) {\n        this.props.onSearchStateChange(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchParameters\",\n    value: function onSearchParameters(getSearchParameters, context, props, getMetadata, displayName) {\n      if (this.props.onSearchParameters) {\n        var _searchState = this.props.searchState ? this.props.searchState : {};\n        this.props.onSearchParameters(getSearchParameters, context, props, _searchState);\n      }\n      if (this.props.widgetsCollector) {\n        var _searchState2 = this.props.searchState ? this.props.searchState : {};\n        this.props.widgetsCollector({\n          getSearchParameters: getSearchParameters,\n          getMetadata: getMetadata,\n          context: context,\n          props: props,\n          searchState: _searchState2,\n          displayName: displayName\n        });\n      }\n    }\n  }, {\n    key: \"onSearchForFacetValues\",\n    value: function onSearchForFacetValues(searchState) {\n      this.state.instantSearchManager.onSearchForFacetValues(searchState);\n    }\n  }, {\n    key: \"getKnownKeys\",\n    value: function getKnownKeys() {\n      return this.state.instantSearchManager.getWidgetsIds();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (Children.count(this.props.children) === 0) {\n        return null;\n      }\n      return /*#__PURE__*/React.createElement(InstantSearchProvider, {\n        value: this.state.contextValue\n      }, this.props.children);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var nextIsControlled = isControlled(nextProps);\n      var previousSearchState = prevState.instantSearchManager.store.getState().widgets;\n      var nextSearchState = nextProps.searchState;\n      if (nextIsControlled && !isEqual(previousSearchState, nextSearchState)) {\n        prevState.instantSearchManager.onExternalStateUpdate(nextProps.searchState);\n      }\n      return {\n        isControlled: nextIsControlled,\n        contextValue: _objectSpread(_objectSpread({}, prevState.contextValue), {}, {\n          mainTargetedIndex: nextProps.indexName\n        })\n      };\n    }\n  }]);\n  return InstantSearch;\n}(Component);\n_defineProperty(InstantSearch, \"defaultProps\", {\n  stalledSearchDelay: 200,\n  refresh: false\n});\n_defineProperty(InstantSearch, \"propTypes\", {\n  // @TODO: These props are currently constant.\n  indexName: PropTypes.string.isRequired,\n  searchClient: PropTypes.shape({\n    search: PropTypes.func.isRequired,\n    searchForFacetValues: PropTypes.func,\n    addAlgoliaAgent: PropTypes.func,\n    clearCache: PropTypes.func\n  }).isRequired,\n  createURL: PropTypes.func,\n  refresh: PropTypes.bool,\n  searchState: PropTypes.object,\n  onSearchStateChange: PropTypes.func,\n  onSearchParameters: PropTypes.func,\n  widgetsCollector: PropTypes.func,\n  resultsState: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  children: PropTypes.node,\n  stalledSearchDelay: PropTypes.number\n});\nexport default InstantSearch;","function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nimport cx from 'classnames';\nexport var createClassNames = function createClassNames(block) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ais';\n  return function () {\n    for (var _len = arguments.length, elements = new Array(_len), _key = 0; _key < _len; _key++) {\n      elements[_key] = arguments[_key];\n    }\n    var suitElements = elements.filter(function (element) {\n      return element || element === '';\n    }).map(function (element) {\n      var baseClassName = \"\".concat(prefix, \"-\").concat(block);\n      return element ? \"\".concat(baseClassName, \"-\").concat(element) : baseClassName;\n    });\n    return cx(suitElements);\n  };\n};\nexport var isSpecialClick = function isSpecialClick(event) {\n  var isMiddleClick = event.button === 1;\n  return Boolean(isMiddleClick || event.altKey || event.ctrlKey || event.metaKey || event.shiftKey);\n};\nexport var capitalize = function capitalize(key) {\n  return key.length === 0 ? '' : \"\".concat(key[0].toUpperCase()).concat(key.slice(1));\n};\n// taken from InstantSearch.js/utils\nexport function range(_ref) {\n  var _ref$start = _ref.start,\n    start = _ref$start === void 0 ? 0 : _ref$start,\n    end = _ref.end,\n    _ref$step = _ref.step,\n    step = _ref$step === void 0 ? 1 : _ref$step;\n  // We can't divide by 0 so we re-assign the step to 1 if it happens.\n  var limitStep = step === 0 ? 1 : step;\n\n  // In some cases the array to create has a decimal length.\n  // We therefore need to round the value.\n  // Example:\n  //   { start: 1, end: 5000, step: 500 }\n  //   => Array length = (5000 - 1) / 500 = 9.998\n  var arrayLength = Math.round((end - start) / limitStep);\n  return _toConsumableArray(Array(arrayLength)).map(function (_, current) {\n    return (start + current) * limitStep;\n  });\n}\nexport function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n  return undefined;\n}","var classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n"],"names":["EventEmitter","this","_events","_maxListeners","undefined","isFunction","arg","isObject","isUndefined","module","exports","prototype","defaultMaxListeners","setMaxListeners","n","isNaN","TypeError","emit","type","er","handler","len","args","i","listeners","error","length","arguments","Error","err","context","call","Array","slice","apply","addListener","listener","m","newListener","push","warned","console","trace","on","once","fired","g","removeListener","list","position","splice","removeAllListeners","key","listenerCount","evlistener","emitter","AlgoliaSearchHelper","SearchParameters","SearchResults","algoliasearchHelper","client","index","opts","version","DerivedHelper","mainHelper","fn","main","lastResults","inherits","detach","detachDerivedHelper","getModifiedState","parameters","defaultsPure","omit","objectHasKeys","lib","addRefinement","refinementList","attribute","value","isRefined","valueAsString","facetRefinement","concat","mod","removeRefinement","clearRefinement","v","f","toggleRefinement","refinementType","hasChanged","newRefinementList","Object","keys","reduce","memo","values","facetList","filter","refinementValue","containsRefinements","Boolean","refinementValueAsString","indexOf","merge","intersection","find","valToNumber","isValidUserToken","RefinementList","isEqualNumericRefinement","a","b","isArray","every","el","newParameters","params","_parseNumbers","userToken","warn","facets","disjunctiveFacets","hierarchicalFacets","facetsRefinements","facetsExcludes","disjunctiveFacetsRefinements","numericRefinements","tagRefinements","hierarchicalFacetsRefinements","self","forEach","paramName","isKeyKnown","PARAMETERS","isValueDefined","partialState","numbers","k","parsedValue","parseFloat","insideBoundingBox","map","geoRect","operators","operator","parsedValues","vPrime","make","instance","facet","rootPath","currentRefinement","getHierarchicalRefinement","name","clearRefinements","toggleHierarchicalFacetRefinement","validate","currentState","tagFilters","numericFilters","constructor","patch","_clearNumericRefinements","setQueryParameters","clearTags","setIndex","setQuery","newQuery","query","setPage","newPage","page","setFacets","setDisjunctiveFacets","setHitsPerPage","hitsPerPage","setTypoTolerance","typoTolerance","addNumericRefinement","val","isNumericRefined","getConjunctiveRefinements","facetName","isConjunctiveFacet","getDisjunctiveRefinements","isDisjunctiveFacet","getExcludeRefinements","removeNumericRefinement","number","paramValue","op","getNumericRefinements","getNumericRefinement","newNumericRefinements","operatorList","outValues","addFacet","addDisjunctiveFacet","addHierarchicalFacet","hierarchicalFacet","isHierarchicalFacet","addFacetRefinement","addExcludeRefinement","addDisjunctiveFacetRefinement","addTagRefinement","tag","isTagRefined","modification","removeFacet","removeDisjunctiveFacet","removeHierarchicalFacet","removeFacetRefinement","removeExcludeRefinement","removeDisjunctiveFacetRefinement","removeTagRefinement","t","toggleFacetRefinement","toggleConjunctiveFacetRefinement","toggleDisjunctiveFacetRefinement","toggleExcludeFacetRefinement","separator","_getHierarchicalFacetSeparator","getHierarchicalFacetByName","lastIndexOf","addHierarchicalFacetRefinement","path","isHierarchicalFacetRefined","removeHierarchicalFacetRefinement","toggleTagRefinement","isFacetRefined","isExcludeRefined","isDisjunctiveFacetRefined","refinements","isOperatorDefined","array","searchedValue","isAttributeValueDefined","currentValue","getRefinedDisjunctiveFacets","disjunctiveNumericRefinedFacets","getRefinedHierarchicalFacets","getUnrefinedDisjunctiveFacets","refinedFacets","managedParameters","getQueryParams","queryParams","setQueryParameter","parameter","nextWithNumbers","previousPlainObject","acc","nextPlainObject","previous","isPreviousValueDefined","isNextValueDefined","resetPage","_getHierarchicalFacetSortBy","sortBy","_getHierarchicalRootPath","_getHierarchicalShowParentLevel","showParentLevel","hierarchicalFacetName","getHierarchicalFacetBreadcrumb","refinement","split","part","trim","toString","JSON","stringify","state","hierarchicalFacetResult","hierarchicalFacetIndex","hierarchicalFacetRefinement","hierarchicalSeparator","hierarchicalRootPath","hierarchicalShowParentLevel","prepareHierarchicalFacetSortBy","rootExhaustive","facetResult","exhaustive","generateTreeFn","hierarchicalTree","currentHierarchicalLevel","parent","level","data","subtree","picked","facetValue","tuple","parentPath","onlyMatchingTree","orderBy","facetCount","parts","escapedValue","escapeFacetValue","count","format","unescapeFacetValue","generateHierarchicalTree","results","fv","compact","findIndex","formatSort","getIndices","attributes","indices","idx","assignFacetStats","dest","facetStats","stats","options","mainSubResponse","_rawResults","processingTimeMS","sum","result","facetsIndices","disjunctiveFacetsIndices","nextDisjunctiveResult","mainFacets","facetKey","hierarchicalAttributeName","facetValueObject","facetIndex","idxAttributeName","exhaustiveFacetsCount","isFacetDisjunctive","isFacetConjunctive","facets_stats","disjunctiveFacet","dfacet","facetResults","attributeIndex","dataFromMainRequest","refinedFacet","defaultData","root","excludes","_state","extractNormalizedFacetValues","predicate","isExcluded","hierarchicalFacetValues","replace","currentRefinementSplit","unshift","setIsRefined","item","depth","child","recSort","sortFn","node","names","children","childNode","sortedChildren","getFacetStatsIfAvailable","getRefinement","attributeName","resultsFacets","getFacetByName","DEFAULT_SORT","getFacetValues","facetValues","facetOrdering","renderingContent","getFacetOrdering","orderedFacets","remainingFacets","reverseOrder","order","ordering","sortRemainingBy","sortViaFacetOrdering","sort","vanillaSortFn","getFacetStats","getRefinements","res","facetDeclaration","rootFacet","intermediateFacet","newFacet","numericValue","requestBuilder","addAlgoliaAgent","setClient","_queryId","_lastQueryIdReceived","derivedHelpers","_currentNbQueries","setCurrentPage","_change","isPageReset","getCurrentPage","search","_search","onlyWithDerivedHelpers","searchOnlyWithDerivedHelpers","getQuery","_getHitsSearchParams","searchOnce","cb","tempState","queries","_getQueries","then","content","_originalResponse","e","catch","findAnswers","derivedHelper","Promise","resolve","derivedState","attributesForPrediction","nbHits","errorMessage","initIndex","queryLanguages","searchForFacetValues","maxFacetHits","userState","clientHasSFFV","clientHasInitIndex","isDisjunctive","algoliaQuery","getSearchForFacetQuery","searchForFacetValuesPromise","indexName","response","facetHits","q","addDisjunctiveRefine","addRefine","addFacetExclusion","addExclude","addTag","removeDisjunctiveRefine","removeRefine","removeFacetExclusion","removeExclude","removeTag","toggleFacetExclusion","toggleExclude","toggleRefine","toggleTag","nextPage","previousPage","setState","newState","overrideStateWithoutTriggeringChangeEvent","hasRefinements","isDisjunctiveRefined","hasTag","hasTagRefinements","getIndex","getPage","getTags","r","states","mainQueries","queriesCount","helper","derivedQueries","derivedStateQueries","queryId","_dispatchAlgoliaResponse","bind","_dispatchAlgoliaError","s","specificResults","containsRefinement","facetFilters","_hasDisjunctiveRefinements","disjunctiveRefinements","event","clearCache","newClient","getClient","derive","pos","hasPendingRequests","reduceRight","source","String","comparator","defaults","defaultInstructions","out","sortInstruction","matchingDefault","defaultInstruction","ctor","superCtor","create","enumerable","writable","configurable","arr1","arr2","isObjectOrArrayOrFunction","_merge","target","hasOwnProperty","sourceVal","targetVal","l","obj","excluded","sourceKeys","compareAscending","other","valIsDefined","valIsNull","othIsDefined","othIsNull","collection","iteratees","orders","criteria","iteratee","object","sortObject","localeCompare","curr","_getDisjunctiveFacetSearchParams","filtersMap","segment","join","hasHierarchicalFacetFilter","some","filteredFacetFilters","facetFilter","filtered","filterValue","_getHitsHierarchicalFacetsAttributes","_getFacetFilters","_getNumericFilters","_getTagFilters","additionalParams","hierarchicalRootLevel","analytics","clickAnalytics","_getDisjunctiveHierarchicalFacetAttribute","vs","orFilters","attributeToRefine","attributesIndex","allAttributes","hierarchicalRefinement","newAttributes","rootLevel","parentLevel","stateForSearchForFacetValues","searchForFacetSearchParameters","facetQuery","test","displayName","$$type","getProvidedProps","props","searchState","searchResults","ais","contextValue","multiIndexContext","indexContextValue","hits","hitsWithPositions","queryID","getSearchParameters","searchParameters","instantSearchContext","createContext","onInternalStateUpdate","createHrefForState","onSearchForFacetValues","onSearchStateChange","onSearchParameters","store","widgetsManager","mainTargetedIndex","InstantSearchConsumer","Consumer","InstantSearchProvider","Provider","_createContext","IndexConsumer","IndexProvider","_excluded","_typeof","Symbol","iterator","_extends","assign","_objectWithoutProperties","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ownKeys","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperties","descriptor","_toPropertyKey","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","valueOf","_isNativeReflectConstruct","Super","_getPrototypeOf","NewTarget","_assertThisInitialized","_possibleConstructorReturn","ReferenceError","getPrototypeOf","input","hint","prim","toPrimitive","Number","_toPrimitive","createConnectorWithoutContext","connectorDesc","isWidget","getMetadata","transitionState","Composed","additionalWidgetProperties","Connector","_Component","subClass","superClass","_inherits","Constructor","protoProps","staticProps","_super","_this","_classCallCheck","providedProps","_ref","_len","_key","refine","getState","widgets","_ref2","_len2","_key2","_ref3","_len3","_key3","_this2","cleanupTimerRef","clearTimeout","unsubscribe","subscribe","isUnmounting","unregisterWidget","registerWidget","nextProps","nextState","shouldComponentUpdate","propsEqual","prevProps","update","_this3","setTimeout","cleanUp","_this$props$contextVa","resultsFacetValues","searching","searchingForFacetValues","isSearchStalled","metadata","nextWidgetsState","prevWidgetsState","_this$props","refineProps","createURL","searchForFacetValuesProps","searchForItems","Component","$$widgetType","propTypes","defaultProps","getIndexId","hasMultipleIndices","targetedIndex","getResults","indexId","refineValue","nextRefinement","namespace","_objectSpread4","refineMultiIndexWithNamespace","refineMultiIndex","refineSingleIndexWithNamespace","refineSingleIndex","getNamespaceAndAttributeName","id","match","getCurrentRefinementValue","defaultValue","_getNamespaceAndAttri","multiIndex","hasRefinementsValue","defaultRefinement","cleanUpValue","_getNamespaceAndAttri2","_ref4","indexSearchState","cleanUpValueWithMultiIndex","cleanUpValueWithSingleIndex","hasOwn","shallowEqual","objA","objB","keysA","keysB","getDisplayName","resolved","defer","removeEmptyKey","isPlainObject","addAbsolutePositions","hit","__position","addQueryID","__queryID","getIndexContext","Index","indexContext","Children","isRequired","inferredIndexId","HIGHLIGHT_TAGS","highlightPreTag","highlightPostTag","_excluded2","_excluded3","addAlgoliaAgents","searchClient","isMultiIndexContext","widget","isTargetedIndexEqualIndex","isIndexWidget","isIndexWidgetEqualIndex","sortIndexWidgetsFirst","firstWidget","secondWidget","isFirstWidgetIndex","isSecondWidgetIndex","serializeQueryParameters","encodeURIComponent","encode","createInstantSearchManager","_ref$initialState","initialState","resultsState","stalledSearchDelay","stalledSearchTimer","_store$getState","handleSearchSuccess","handleSearchError","searchCounter","skip","initialSearchParameters","onWidgetsUpdate","scheduled","scheduleUpdate","getWidgets","createWidgetsManager","transporter","_cacheHydrated","_useCache","baseMethod","requests","methodArgs","requestsWithSerializedParams","request","responsesCache","get","method","set","rawResults","cache","hydrateSearchClientWithMultiIndexRequest","hydrateSearchClientWithSingleIndexRequest","hydrateSearchClient","createStore","hydrateMetadata","_internalIndexId","hydrateResultsState","sharedParameters","mainParameters","targetedIndexEqualMainIndex","subIndexEqualMainIndex","derivedIndices","targetedIndexNotEqualMainIndex","subIndexNotEqualMainIndex","derivedParameters","_getSearchParameters","isDerivedHelpersEmpty","nextIsSearchStalled","getWidgetsIds","meta","_ref5","_ref5$maxFacetHits","maxFacetHitsWithinRange","Math","max","min","_objectSpread7","onExternalStateUpdate","nextSearchState","updateClient","updateIndex","newIndex","skipSearch","datum","items","nestedItem","injectMetadata","payloadContainer","document","createElement","refNode","querySelector","payload","internalProps","widgetsPayload","_connectorDesc","_ref2$defaultProps","_ref2$displayName","prop","includes","ua","userAgent","_ua","getMetadataPayload","appendChild","isControlled","InstantSearch","instantSearchManager","onWidgetsInternalStateUpdate","prevState","nextIsControlled","previousSearchState","prevIsControlled","refresh","window","navigator","getKnownKeys","_searchState","widgetsCollector","_searchState2","createClassNames","block","prefix","elements","suitElements","element","baseClassName","classof","$String","argument"],"sourceRoot":""}